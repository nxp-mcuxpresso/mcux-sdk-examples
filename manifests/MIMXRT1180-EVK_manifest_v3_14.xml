<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMXRT1180-EVK_manifest_v3_14" name="SDK Version Superset" brief="SDK Superset" format_version="3.14" api_version="2.0.0" configuration="37bbf4eb706f3814bfad8f3a27525c83" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.14.xsd">

  <ksdk id="MCUXpressoSDK216100" name="MCUXpresso SDK216100" version="2.16.100" revision="2.16.100"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M7SLAVE" name="Cortex-M7F acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.10.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_13-2023.10" version="13.2.1" full_name="GCC ARM Embedded 13-2023.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.10.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimxrt1180" name="MIMXRT1180-EVK" version="1.0.0" package="MIMXRT1189CVM8B">
      <description>EVK Board for MIMXRT1180</description>
      <image path="core/boards/evkmimxrt1180" type="image">
        <files mask="evkmimxrt1180.png"/>
      </image>
      <memory>
        <memoryBlock id="BOARD_FLASH_evkmimxrt1180" name="BOARD_FLASH" addr="28000000" size="01000000" type="ExtFlash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkmimxrt1180" name="BOARD_SDRAM" addr="80000000" size="02000000" type="RAM" access="RW"/>
        <memoryBlock id="BOARD_HYPERRAM_evkmimxrt1180" name="BOARD_HYPERRAM" addr="04000000" size="00800000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="65536" ram_size_kb="32768"/>
      <examples>
        <example id="evkmimxrt1180_peripheral_beacon" name="peripheral_beacon" brief="The Edgefast Bluetooth beacon example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_beacon/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_beacon/cm33" type="xml">
            <files mask="peripheral_beacon_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spp" name="spp" brief="The Bluetooth BR SPP example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/spp/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/spp/cm33" type="xml">
            <files mask="spp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_a2dp_sink" name="a2dp_sink" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_sink/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_sink/cm33" type="xml">
            <files mask="a2dp_sink_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edgefast_bluetooth_shell" name="edgefast_bluetooth_shell" brief="The Edgefast Bluetooth shell example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/shell/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/shell/cm33" type="xml">
            <files mask="edgefast_bluetooth_shell_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_handsfree_ag" name="handsfree_ag" brief="The Edgefast Bluetooth handsfree AG example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree_ag/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree_ag/cm33" type="xml">
            <files mask="handsfree_ag_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_handsfree" name="handsfree" brief="The Edgefast Bluetooth bluetooth handsfree example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree/cm33" type="xml">
            <files mask="handsfree_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_a2dp_source_cm33" name="a2dp_source_cm33" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_source/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_source/cm33" type="xml">
            <files mask="a2dp_source_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_ht" name="peripheral_ht" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ht/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ht/cm33" type="xml">
            <files mask="peripheral_ht_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_ht" name="central_ht" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ht/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ht/cm33" type="xml">
            <files mask="central_ht_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_ipsp" name="peripheral_ipsp" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ipsp/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ipsp/cm33" type="xml">
            <files mask="peripheral_ipsp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_ipsp" name="central_ipsp" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ipsp/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ipsp/cm33" type="xml">
            <files mask="central_ipsp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_pxr" name="peripheral_pxr" brief="The Edgefast Bluetooth pxr example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_pxr/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_pxr/cm33" type="xml">
            <files mask="peripheral_pxr_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_pxm" name="central_pxm" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_pxm/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_pxm/cm33" type="xml">
            <files mask="central_pxm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_hps" name="peripheral_hps" brief="The Edgefast Bluetooth hps example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_hps/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_hps/cm33" type="xml">
            <files mask="peripheral_hps_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_hpc" name="central_hpc" brief="The Edgefast Bluetooth hpc example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_hpc/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_hpc/cm33" type="xml">
            <files mask="central_hpc_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wireless_uart" name="wireless_uart" brief="The Edgefast Bluetooth wireless uart example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/wireless_uart/cm33">
          <external path="examples/evkmimxrt1180/edgefast_bluetooth_examples/wireless_uart/cm33" type="xml">
            <files mask="wireless_uart_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_mouse_freertos_cm33" name="pin_detect_hid_mouse_freertos_cm33" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/freertos/cm33" type="xml">
            <files mask="pin_detect_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_msd_freertos_cm33" name="pin_detect_hid_msd_freertos_cm33" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/freertos/cm33" type="xml">
            <files mask="pin_detect_hid_msd_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_mouse_bm_cm33" name="pin_detect_hid_mouse_bm_cm33" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/bm/cm33" type="xml">
            <files mask="pin_detect_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_msd_bm_cm33" name="pin_detect_hid_msd_bm_cm33" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/bm/cm33" type="xml">
            <files mask="pin_detect_hid_msd_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_keyboard2mouse_freertos_cm33" name="keyboard2mouse_freertos_cm33" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/freertos/cm33" type="xml">
            <files mask="keyboard2mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_keyboard2mouse_bm_cm33" name="keyboard2mouse_bm_cm33" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/bm/cm33" type="xml">
            <files mask="keyboard2mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_recorder_freertos" name="host_audio_recorder_freertos" brief="The Host Audio example supports the audio recorder device. @n The application prints the audio recorder information when the USB recorder device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_recorder/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_audio_recorder/freertos/cm33" type="xml">
            <files mask="host_audio_recorder_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_speaker_freertos_cm33" name="host_audio_speaker_freertos_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/freertos/cm33" type="xml">
            <files mask="host_audio_speaker_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_cdc_freertos_cm33" name="host_cdc_freertos_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/freertos/cm33" type="xml">
            <files mask="host_cdc_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_generic_freertos_cm33" name="host_hid_generic_freertos_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/freertos/cm33" type="xml">
            <files mask="host_hid_generic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_freertos_cm33" name="host_hid_mouse_freertos_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm33" type="xml">
            <files mask="host_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_keyboard_freertos_cm33" name="host_hid_mouse_keyboard_freertos_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_command_freertos_cm33" name="host_msd_command_freertos_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/freertos/cm33" type="xml">
            <files mask="host_msd_command_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_fatfs_freertos_cm33" name="host_msd_fatfs_freertos_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/freertos/cm33" type="xml">
            <files mask="host_msd_fatfs_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_phdc_manager_freertos_cm33" name="host_phdc_manager_freertos_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/freertos/cm33" type="xml">
            <files mask="host_phdc_manager_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_printer_plain_text_freertos_cm33" name="host_printer_plain_text_freertos_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/freertos/cm33" type="xml">
            <files mask="host_printer_plain_text_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_suspend_resume_hid_mouse_freertos_cm33" name="host_suspend_resume_hid_mouse_freertos_cm33" brief="This is one example support suspend/resume." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_video_camera_freertos_cm33" name="host_video_camera_freertos_cm33" brief="The application supports to get JPEG image from camera function." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_video_camera/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_video_camera/freertos/cm33" type="xml">
            <files mask="host_video_camera_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_speaker_bm_cm33" name="host_audio_speaker_bm_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/bm/cm33" type="xml">
            <files mask="host_audio_speaker_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_cdc_bm_cm33" name="host_cdc_bm_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/bm/cm33" type="xml">
            <files mask="host_cdc_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_generic_bm_cm33" name="host_hid_generic_bm_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/bm/cm33" type="xml">
            <files mask="host_hid_generic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_bm_cm33" name="host_hid_mouse_bm_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm33" type="xml">
            <files mask="host_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_keyboard_bm_cm33" name="host_hid_mouse_keyboard_bm_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/bm/cm33" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_command_bm_cm33" name="host_msd_command_bm_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/bm/cm33" type="xml">
            <files mask="host_msd_command_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_fatfs_bm_cm33" name="host_msd_fatfs_bm_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/bm/cm33" type="xml">
            <files mask="host_msd_fatfs_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_phdc_manager_bm_cm33" name="host_phdc_manager_bm_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/bm/cm33" type="xml">
            <files mask="host_phdc_manager_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_printer_plain_text_bm_cm33" name="host_printer_plain_text_bm_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/bm/cm33" type="xml">
            <files mask="host_printer_plain_text_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_suspend_resume_hid_mouse_bm_cm33" name="host_suspend_resume_hid_mouse_bm_cm33" brief="This is one example support suspend/resume." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_freertos_cm33" name="dev_audio_generator_freertos_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/freertos/cm33" type="xml">
            <files mask="dev_audio_generator_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_freertos_cm33" name="dev_audio_speaker_freertos_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/freertos/cm33" type="xml">
            <files mask="dev_audio_speaker_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_freertos_cm33" name="dev_cdc_vcom_freertos_cm33" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/freertos/cm33" type="xml">
            <files mask="dev_cdc_vcom_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_freertos_cm33" name="dev_cdc_vnic_freertos_cm33" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/freertos/cm33" type="xml">
            <files mask="dev_cdc_vnic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_freertos_cm33" name="dev_composite_cdc_msc_disk_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_freertos_cm33" name="dev_composite_cdc_msc_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" name="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_freertos_cm33" name="dev_composite_hid_audio_unified_freertos_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_freertos_cm33" name="dev_composite_hid_mouse_hid_keyboard_freertos_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_freertos_cm33" name="dev_dfu_freertos_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/freertos/cm33" type="xml">
            <files mask="dev_dfu_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_freertos_cm33" name="dev_hid_generic_freertos_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/freertos/cm33" type="xml">
            <files mask="dev_hid_generic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_freertos_cm33" name="dev_hid_mouse_freertos_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm33" type="xml">
            <files mask="dev_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_freertos_cm33" name="dev_msc_disk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/freertos/cm33" type="xml">
            <files mask="dev_msc_disk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_freertos_cm33" name="dev_msc_ramdisk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/freertos/cm33" type="xml">
            <files mask="dev_msc_ramdisk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_freertos_cm33" name="dev_mtp_freertos_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/freertos/cm33" type="xml">
            <files mask="dev_mtp_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_freertos_cm33" name="dev_phdc_weighscale_freertos_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/freertos/cm33" type="xml">
            <files mask="dev_phdc_weighscale_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_freertos_cm33" name="dev_printer_virtual_plain_text_freertos_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_freertos_cm33" name="dev_suspend_resume_hid_mouse_freertos_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_freertos_cm33" name="dev_video_virtual_camera_freertos_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/freertos/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/freertos/cm33" type="xml">
            <files mask="dev_video_virtual_camera_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_bm_cm33" name="dev_audio_generator_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/bm/cm33" type="xml">
            <files mask="dev_audio_generator_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_lite_bm_cm33" name="dev_audio_generator_lite_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator_lite/bm/cm33" type="xml">
            <files mask="dev_audio_generator_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_bm_cm33" name="dev_audio_speaker_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/bm/cm33" type="xml">
            <files mask="dev_audio_speaker_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_lite_bm_cm33" name="dev_audio_speaker_lite_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker_lite/bm/cm33" type="xml">
            <files mask="dev_audio_speaker_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_bm_cm33" name="dev_cdc_vcom_bm_cm33" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/bm/cm33" type="xml">
            <files mask="dev_cdc_vcom_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_lite_bm_cm33" name="dev_cdc_vcom_lite_bm_cm33" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom_lite/bm/cm33" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_bm_cm33" name="dev_cdc_vnic_bm_cm33" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/bm/cm33" type="xml">
            <files mask="dev_cdc_vnic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_lite_bm_cm33" name="dev_cdc_vnic_lite_bm_cm33" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic_lite/bm/cm33" type="xml">
            <files mask="dev_cdc_vnic_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_bm_cm33" name="dev_composite_cdc_msc_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_bm_cm33" name="dev_composite_cdc_msc_disk_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_lite_bm_cm33" name="dev_composite_cdc_msc_disk_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_lite_bm_cm33" name="dev_composite_cdc_msc_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_bm_cm33" name="dev_composite_hid_audio_unified_bm_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/bm/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_lite_bm_cm33" name="dev_composite_hid_audio_unified_lite_bm_cm33" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_bm_cm33" name="dev_dfu_bm_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/bm/cm33" type="xml">
            <files mask="dev_dfu_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_lite_bm_cm33" name="dev_dfu_lite_bm_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_dfu_lite/bm/cm33" type="xml">
            <files mask="dev_dfu_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_bm_cm33" name="dev_hid_generic_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/bm/cm33" type="xml">
            <files mask="dev_hid_generic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_lite_bm_cm33" name="dev_hid_generic_lite_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic_lite/bm/cm33" type="xml">
            <files mask="dev_hid_generic_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_bm_cm33" name="dev_hid_mouse_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm33" type="xml">
            <files mask="dev_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_lite_bm_cm33" name="dev_hid_mouse_lite_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm33" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_bm_cm33" name="dev_msc_disk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/bm/cm33" type="xml">
            <files mask="dev_msc_disk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_lite_bm_cm33" name="dev_msc_disk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk_lite/bm/cm33" type="xml">
            <files mask="dev_msc_disk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_bm_cm33" name="dev_msc_ramdisk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/bm/cm33" type="xml">
            <files mask="dev_msc_ramdisk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_lite_bm_cm33" name="dev_msc_ramdisk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk_lite/bm/cm33" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_bm_cm33" name="dev_mtp_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/bm/cm33" type="xml">
            <files mask="dev_mtp_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_lite_bm_cm33" name="dev_mtp_lite_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_mtp_lite/bm/cm33" type="xml">
            <files mask="dev_mtp_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_bm_cm33" name="dev_phdc_weighscale_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/bm/cm33" type="xml">
            <files mask="dev_phdc_weighscale_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_lite_bm_cm33" name="dev_phdc_weighscale_lite_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale_lite/bm/cm33" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_bm_cm33" name="dev_printer_virtual_plain_text_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/bm/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_lite_bm_cm33" name="dev_printer_virtual_plain_text_lite_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_bm_cm33" name="dev_suspend_resume_hid_mouse_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_lite_bm_cm33" name="dev_suspend_resume_hid_mouse_lite_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_bm_cm33" name="dev_video_virtual_camera_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/bm/cm33" type="xml">
            <files mask="dev_video_virtual_camera_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_lite_bm_cm33" name="dev_video_virtual_camera_lite_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera_lite/bm/cm33">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera_lite/bm/cm33" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_demo_cm33" name="hello_world_demo_cm33" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/hello_world/cm33" type="xml">
            <files mask="hello_world_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_virtual_com_cm33" name="hello_world_virtual_com_cm33" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm33" type="xml">
            <files mask="hello_world_virtual_com_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_multicore_trigger_demo_cm33" name="multicore_trigger_demo_cm33" brief="The multicore trigger demo is enabled only for primary core on multicore soc, to trigger other subordinative core to boot." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/multicore_trigger/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/multicore_trigger/cm33" type="xml">
            <files mask="multicore_trigger_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rled_blinky_demo_cm33" name="rled_blinky_demo_cm33" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/led_blinky/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/led_blinky/cm33" type="xml">
            <files mask="rled_blinky_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_bubble_peripheral_cm33" name="bubble_peripheral_cm33" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm33" type="xml">
            <files mask="bubble_peripheral_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cache_cm33" name="cache_cm33" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/cache" path="examples/evkmimxrt1180/driver_examples/cache/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/cache/cm33" type="xml">
            <files mask="cache_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_interrupt_transfer_cm33" name="canfd_interrupt_transfer_cm33" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm33" type="xml">
            <files mask="canfd_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_cm33" name="canfd_loopback_cm33" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm33" type="xml">
            <files mask="canfd_loopback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_transfer_cm33" name="canfd_loopback_transfer_cm33" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm33" type="xml">
            <files mask="canfd_loopback_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_ping_pong_buffer_transfer_cm33" name="canfd_ping_pong_buffer_transfer_cm33" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm33" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_interrupt_transfer_cm33" name="cmsis_lpuart_interrupt_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm33" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_edma_transfer_cm33" name="cmsis_lpuart_edma_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm33" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma3_memory_to_memory_cm33" name="edma3_memory_to_memory_cm33" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma3" path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm33" type="xml">
            <files mask="edma3_memory_to_memory_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_scatter_gather_cm33" name="edma4_scatter_gather_cm33" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm33" type="xml">
            <files mask="edma4_scatter_gather_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_cm33" name="edma4_memory_to_memory_cm33" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm33" type="xml">
            <files mask="edma4_memory_to_memory_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_transfer_cm33" name="edma4_memory_to_memory_transfer_cm33" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm33" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memset_cm33" name="edma4_memset_cm33" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm33" type="xml">
            <files mask="edma4_memset_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_channel_link_cm33" name="edma4_channel_link_cm33" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm33" type="xml">
            <files mask="edma4_channel_link_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_wrap_transfer_cm33" name="edma4_wrap_transfer_cm33" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm33" type="xml">
            <files mask="edma4_wrap_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_ping_pong_transfer_cm33" name="edma4_ping_pong_transfer_cm33" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm33" type="xml">
            <files mask="edma4_ping_pong_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_interleave_transfer_cm33" name="edma4_interleave_transfer_cm33" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm33" type="xml">
            <files mask="edma4_interleave_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_interrupt_transfer_cm33" name="flexcan_interrupt_transfer_cm33" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm33" type="xml">
            <files mask="flexcan_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_cm33" name="flexcan_loopback_cm33" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm33" type="xml">
            <files mask="flexcan_loopback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_transfer_cm33" name="flexcan_loopback_transfer_cm33" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm33" type="xml">
            <files mask="flexcan_loopback_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_ping_pong_buffer_transfer_cm33" name="flexcan_ping_pong_buffer_transfer_cm33" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm33" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_edma_transfer_cm33" name="flexcan_loopback_edma_transfer_cm33" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm33" type="xml">
            <files mask="flexcan_loopback_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_edma_transfer_cm33" name="flexcan_efifo_edma_transfer_cm33" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm33" type="xml">
            <files mask="flexcan_efifo_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_interrupt_transfer_cm33" name="flexcan_efifo_interrupt_transfer_cm33" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm33" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_polling_transfer_cm33" name="flexspi_nor_polling_transfer_cm33" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm33" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_edma_transfer_cm33" name="flexspi_nor_edma_transfer_cm33" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm33" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tstmr_cm33" name="tstmr_cm33" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/evkmimxrt1180/driver_examples/tstmr/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/tstmr/cm33" type="xml">
            <files mask="tstmr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sysctr_cm33" name="sysctr_cm33" brief="The sysctr example shows the usage of System Counter driver in application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sysctr" path="examples/evkmimxrt1180/driver_examples/sysctr/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sysctr/cm33" type="xml">
            <files mask="sysctr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_timer_cm33" name="gpt_timer_cm33" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm33" type="xml">
            <files mask="gpt_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_compare_cm33" name="gpt_compare_cm33" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm33" type="xml">
            <files mask="gpt_compare_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_master_read_sensor_lsm6dso_cm33" name="i3c_master_read_sensor_lsm6dso_cm33" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm33" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_master_cm33" name="i3c_polling_b2b_transfer_master_cm33" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_slave_cm33" name="i3c_polling_b2b_transfer_slave_cm33" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_master_cm33" name="i3c_interrupt_b2b_transfer_master_cm33" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_slave_cm33" name="i3c_interrupt_b2b_transfer_slave_cm33" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_master_cm33" name="i3c_edma_b2b_transfer_master_cm33" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_slave_cm33" name="i3c_edma_b2b_transfer_slave_cm33" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_cm33" name="lpi2c_interrupt_cm33" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm33" type="xml">
            <files mask="lpi2c_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_master_cm33" name="lpi2c_interrupt_b2b_transfer_master_cm33" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_slave_cm33" name="lpi2c_interrupt_b2b_transfer_slave_cm33" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_master_cm33" name="lpi2c_polling_b2b_master_cm33" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm33" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_slave_cm33" name="lpi2c_polling_b2b_slave_cm33" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm33" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_master_cm33" name="lpi2c_edma_b2b_transfer_master_cm33" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_slave_cm33" name="lpi2c_edma_b2b_transfer_slave_cm33" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_single_channel_cm33" name="lpit_single_channel_cm33" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm33" type="xml">
            <files mask="lpit_single_channel_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_pwm_cm33" name="lpit_pwm_cm33" brief="This example show how to use SDK drivers to implement the PWM feature by LPIT IP module in dualperiodcounter mode.You can set up PWM singal frequency and duty in this example.Connect PWM singal output pin to oscilloscope, you will see PWM wave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm33" type="xml">
            <files mask="lpit_pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_master_cm33" name="lpspi_interrupt_b2b_master_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm33" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_slave_cm33" name="lpspi_interrupt_b2b_slave_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm33" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_master_cm33" name="lpspi_edma_b2b_transfer_master_cm33" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_slave_cm33" name="lpspi_edma_b2b_transfer_slave_cm33" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_master_cm33" name="lpspi_polling_b2b_transfer_master_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm33" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_slave_cm33" name="lpspi_polling_b2b_transfer_slave_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lptmr_cm33" name="lptmr_cm33" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/evkmimxrt1180/driver_examples/lptmr/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lptmr/cm33" type="xml">
            <files mask="lptmr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_cm33" name="lpuart_interrupt_cm33" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm33" type="xml">
            <files mask="lpuart_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_edma_transfer_cm33" name="lpuart_edma_transfer_cm33" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm33" type="xml">
            <files mask="lpuart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_cm33" name="lpuart_interrupt_transfer_cm33" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm33" type="xml">
            <files mask="lpuart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_rb_transfer_cm33" name="lpuart_interrupt_rb_transfer_cm33" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm33" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_cm33" name="lpuart_polling_cm33" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm33" type="xml">
            <files mask="lpuart_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_9bit_interrupt_transfer_cm33" name="lpuart_9bit_interrupt_transfer_cm33" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm33" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_seven_bits_cm33" name="lpuart_interrupt_transfer_seven_bits_cm33" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm33" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_seven_bits_cm33" name="lpuart_polling_seven_bits_cm33" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm33" type="xml">
            <files mask="lpuart_polling_seven_bits_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_timer_cm33" name="qtmr_timer_cm33" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm33" type="xml">
            <files mask="qtmr_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_cm33" name="qtmr_inputcapture_outputpwm_cm33" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm33" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_dma_cm33" name="qtmr_inputcapture_outputpwm_dma_cm33" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm33" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_input_interrupt_cm33" name="rgpio_input_interrupt_cm33" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm33" type="xml">
            <files mask="rgpio_input_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_led_output_cm33" name="rgpio_led_output_cm33" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm33" type="xml">
            <files mask="rgpio_led_output_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_txrx_transfer_cm33" name="netc_txrx_transfer_cm33" brief="The example shows the way to use NETC driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the NETC. 2. How to get the time stamp of the PTP 1588 timer. 3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm33" type="xml">
            <files mask="netc_txrx_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_switch_cm33" name="netc_switch_cm33" brief="The example shows the way to use NETC driver to act as a switch. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/switch/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/netc/switch/cm33" type="xml">
            <files mask="netc_switch_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rtwdog_cm33" name="rtwdog_cm33" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rtwdog" path="examples/evkmimxrt1180/driver_examples/rtwdog/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/rtwdog/cm33" type="xml">
            <files mask="rtwdog_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_adc_cm33" name="lpit_adc_cm33" brief="The lpit_adc example shows how to use LPIT to generate ADC triggers. On top of the basic counter, to use the ADC trigger, simply enable the &quot;milestone&quot; of the ADC trigger and set it with a user-defined value. When the LPIT counter is on, when the count passes the &quot;milestone&quot;, a pre-trigger of the ADC is generated and sent to the ADC module. In this example, the ADC is configured with hardware triggering and conversion complete interrupt enabled. Once it gets a trigger from the LPIT, the transition occurs and then the ISR is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc/lpit_adc" path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm33" type="xml">
            <files mask="lpit_adc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tpm_timer_cm33" name="tpm_timer_cm33" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm33" type="xml">
            <files mask="tpm_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_polling_cm33" name="lpadc_polling_cm33" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm33" type="xml">
            <files mask="lpadc_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_interrupt_cm33" name="lpadc_interrupt_cm33" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm33" type="xml">
            <files mask="lpadc_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_dual_single_ended_conversion_cm33" name="lpadc_dual_single_ended_conversion_cm33" brief="The lpadc_dual_single_ended_conversion example shows how to use two channel with LPADC driver. In this example, user should indicate two channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input, Channel B does not need to be paired with Channel A, Channel B is user selectable.When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm33" type="xml">
            <files mask="lpadc_dual_single_ended_conversion_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_s3mu_cm33" name="s3mu_cm33" brief="The S3MU Example project is a demonstration program that uses the MCUX SDK software to show basic communication with EdgeLock Enclave (ELE) and usage of its services with direct use of S3MU driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/s3mu" path="examples/evkmimxrt1180/driver_examples/s3mu/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/s3mu/cm33" type="xml">
            <files mask="s3mu_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_hsm_cm33" name="ele_crypto_hsm_cm33" brief="The ELE Crypto Example project is a demonstration program that uses the MCUX SDK software to perform crypto operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm33" type="xml">
            <files mask="ele_crypto_hsm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_common_cm33" name="ele_crypto_common_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm33" type="xml">
            <files mask="ele_crypto_common_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_hash_cm33" name="ele_crypto_generic_hash_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm33" type="xml">
            <files mask="ele_crypto_generic_hash_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_cm33" name="erpc_matrix_multiply_mu_cm33" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_mu_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm33" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm33" name="erpc_matrix_multiply_mu_rtos_cm33" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm33" name="erpc_matrix_multiply_rpmsg_cm33" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm33" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm33" name="erpc_matrix_multiply_rpmsg_rtos_cm33" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm33" name="erpc_two_way_rpc_rpmsg_rtos_cm33" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_message_buffers_cm33" name="freertos_message_buffers_cm33" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_freertos_message_buffers_cm7" path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm33" type="xml">
            <files mask="freertos_message_buffers_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_cm33" name="hello_world_cm33" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_hello_world_cm7" path="examples/evkmimxrt1180/multicore_examples/hello_world/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/hello_world/cm33" type="xml">
            <files mask="hello_world_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_cm33" name="rpmsg_lite_pingpong_cm33" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_rpmsg_lite_pingpong_cm7" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm33" type="xml">
            <files mask="rpmsg_lite_pingpong_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm33" name="rpmsg_lite_pingpong_rtos_cm33" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm33">
          <external path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm33" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sema42_dual_core_core0" name="sema42_dual_core_core0" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sema42" linked_projects="evkmimxrt1180_sema42_dual_core_core1" path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core0">
          <external path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core0" type="xml">
            <files mask="sema42_dual_core_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_polling_core0" name="mu_polling_core0" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" linked_projects="evkmimxrt1180_mu_polling_core1" path="examples/evkmimxrt1180/driver_examples/mu/polling/core0">
          <external path="examples/evkmimxrt1180/driver_examples/mu/polling/core0" type="xml">
            <files mask="mu_polling_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_interrupt_core0" name="mu_interrupt_core0" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" linked_projects="evkmimxrt1180_mu_interrupt_core1" path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core0">
          <external path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core0" type="xml">
            <files mask="mu_interrupt_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_psi_vsi_message_cm33" name="netc_psi_vsi_message_cm33" brief="The Multicore NETC PSI-VSI demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core use NETC PSI to send/receive frames. It also releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running and uses NETC VSI to send/receive frames." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" linked_projects="evkmimxrt1180_netc_psi_vsi_message_cm7" path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm33" type="xml">
            <files mask="netc_psi_vsi_message_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_cm33" name="ele_crypto_nvm_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm33" type="xml">
            <files mask="ele_crypto_nvm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_generic_cm33" name="ele_crypto_nvm_generic_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm33" type="xml">
            <files mask="ele_crypto_nvm_generic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_aes_cm33" name="ele_crypto_generic_aes_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm33" type="xml">
            <files mask="ele_crypto_generic_aes_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_rsa_cm33" name="ele_crypto_generic_rsa_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm33" type="xml">
            <files mask="ele_crypto_generic_rsa_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_baseline_api_cm33" name="ele_crypto_baseline_api_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm33" type="xml">
            <files mask="ele_crypto_baseline_api_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_p2p_out_edma_cm33" name="asrc_p2p_out_edma_cm33" brief="The asrc_p2p_out_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm33" type="xml">
            <files mask="asrc_p2p_out_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_edma_cm33" name="asrc_m2m_edma_cm33" brief="The asrc_m2m_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm33" type="xml">
            <files mask="asrc_m2m_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_cm33" name="sai_interrupt_cm33" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm33" type="xml">
            <files mask="sai_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_record_playback_cm33" name="sai_interrupt_record_playback_cm33" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm33" type="xml">
            <files mask="sai_interrupt_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_transfer_cm33" name="sai_interrupt_transfer_cm33" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm33" type="xml">
            <files mask="sai_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_transfer_cm33" name="sai_edma_transfer_cm33" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm33" type="xml">
            <files mask="sai_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_record_playback_cm33" name="sai_edma_record_playback_cm33" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm33" type="xml">
            <files mask="sai_edma_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_half_interrupt_cm33" name="sai_edma_ping_pong_buffer_half_interrupt_cm33" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm33" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_cm33" name="sai_edma_ping_pong_buffer_cm33" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm33" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_record_playback_cm33" name="sai_edma_tdm_record_playback_cm33" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm33" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_cm33" name="sai_edma_tdm_cm33" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm33" type="xml">
            <files mask="sai_edma_tdm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_usb_bm_cm33" name="lwip_dhcp_usb_bm_cm33" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/bm/cm33" type="xml">
            <files mask="lwip_dhcp_usb_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_usb_freertos_cm33" name="lwip_dhcp_usb_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/freertos/cm33" type="xml">
            <files mask="lwip_dhcp_usb_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_bm_cm33" name="lwip_dhcp_bm_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm33" type="xml">
            <files mask="lwip_dhcp_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_freertos_cm33" name="lwip_dhcp_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm33" type="xml">
            <files mask="lwip_dhcp_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_mqtt_freertos_cm33" name="lwip_mqtt_freertos_cm33" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm33" type="xml">
            <files mask="lwip_mqtt_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_bm_cm33" name="lwip_httpsrv_bm_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm33" type="xml">
            <files mask="lwip_httpsrv_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_freertos_cm33" name="lwip_httpsrv_freertos_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm33" type="xml">
            <files mask="lwip_httpsrv_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_bm_cm33" name="lwip_httpssrv_mbedTLS_bm_cm33" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm33" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_freertos_cm33" name="lwip_httpssrv_mbedTLS_freertos_cm33" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm33" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_iperf_bm_cm33" name="lwip_iperf_bm_cm33" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm33" type="xml">
            <files mask="lwip_iperf_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ipv4_ipv6_echo_freertos_cm33" name="lwip_ipv4_ipv6_echo_freertos_cm33" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm33" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_bm_cm33" name="lwip_ping_bm_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm33" type="xml">
            <files mask="lwip_ping_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_freertos_cm33" name="lwip_ping_freertos_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm33">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm33" type="xml">
            <files mask="lwip_ping_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_interrupt_cm33" name="pdm_interrupt_cm33" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm33" type="xml">
            <files mask="pdm_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_edma_transfer_cm33" name="pdm_edma_transfer_cm33" brief="pdm_edma_transfer" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm33" type="xml">
            <files mask="pdm_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_standalone_transfer_edma_cm33" name="pdm_standalone_transfer_edma_cm33" brief="pdm_standalone_transfer_edma" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm33" type="xml">
            <files mask="pdm_standalone_transfer_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_cm33" name="pdm_sai_interrupt_cm33" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm33" type="xml">
            <files mask="pdm_sai_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_transfer_cm33" name="pdm_sai_interrupt_transfer_cm33" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm33" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_edma_cm33" name="pdm_sai_edma_cm33" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm33" type="xml">
            <files mask="pdm_sai_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_multi_channel_edma_cm33" name="pdm_sai_multi_channel_edma_cm33" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm33" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_polling_cm33" name="sdcard_polling_cm33" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_polling" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm33">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm33" type="xml">
            <files mask="sdcard_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_interrupt_cm33" name="sdcard_interrupt_cm33" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_interrupt" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm33">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm33" type="xml">
            <files mask="sdcard_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_freertos_cm33" name="sdcard_freertos_cm33" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm33">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm33" type="xml">
            <files mask="sdcard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_cm33" name="sdcard_fatfs_cm33" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm33">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm33" type="xml">
            <files mask="sdcard_fatfs_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_freertos_cm33" name="sdcard_fatfs_freertos_cm33" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm33">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm33" type="xml">
            <files mask="sdcard_fatfs_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_kpp_cm33" name="kpp_cm33" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/kpp" path="examples/evkmimxrt1180/driver_examples/kpp/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/kpp/cm33" type="xml">
            <files mask="kpp_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sinc_adc_cm33" name="sinc_adc_cm33" brief="The sinc adc example shows how to use SINC driver to configure SINC module as single conversion mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sinc" path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm33" type="xml">
            <files mask="sinc_adc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_master_cm33" name="cmsis_lpi2c_edma_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_slave_cm33" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_master_cm33" name="cmsis_lpi2c_int_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_slave_cm33" name="cmsis_lpi2c_int_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_master_cm33" name="cmsis_lpspi_edma_b2b_transfer_master_cm33" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_slave_cm33" name="cmsis_lpspi_edma_b2b_transfer_slave_cm33" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_master_cm33" name="cmsis_lpspi_int_b2b_transfer_master_cm33" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_slave_cm33" name="cmsis_lpspi_int_b2b_transfer_slave_cm33" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_fsl_romapi_cm33" name="fsl_romapi_cm33" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi" path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm33" type="xml">
            <files mask="fsl_romapi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_cli_cm33" name="wifi_cli_cm33" brief="wifi_cli" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm33" type="xml">
            <files mask="wifi_cli_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_wpa_supplicant_cm33" name="wifi_wpa_supplicant_cm33" brief="wifi_wpa_supplicant" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_wpa_supplicant/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_wpa_supplicant/cm33" type="xml">
            <files mask="wifi_wpa_supplicant_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_setup_cm33" name="wifi_setup_cm33" brief="The wifi_setup demo implements a simple Wi-Fi station setup. The application will automatically scan local wireless networks at startup, then the user will be able to connect to one of the available networks and setup a ping task that will test the connection." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_setup/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_setup/cm33" type="xml">
            <files mask="wifi_setup_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_test_mode_cm33" name="wifi_test_mode_cm33" brief="wifi_test_mode" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_test_mode/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_test_mode/cm33" type="xml">
            <files mask="wifi_test_mode_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_ipv4_ipv6_echo_cm33" name="wifi_ipv4_ipv6_echo_cm33" brief="The wifi_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_ipv4_ipv6_echo/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_ipv4_ipv6_echo/cm33" type="xml">
            <files mask="wifi_ipv4_ipv6_echo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_selftest_cm33" name="mbedtls_selftest_cm33" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm33">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm33" type="xml">
            <files mask="mbedtls_selftest_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_benchmark_cm33" name="mbedtls_benchmark_cm33" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm33">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm33" type="xml">
            <files mask="mbedtls_benchmark_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cm33" name="mbedtls_ele_ecc_opaque_key_cm33" brief="The mbedTLS ECC opaque key demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm33">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm33" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cert_cm33" name="mbedtls_ele_ecc_opaque_key_cert_cm33" brief="The mbedTLS ECC write certificate demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair to self-sign an X509 certificate." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm33">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm33" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cert_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_semc_cm33" name="semc_cm33" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/semc" path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm33" type="xml">
            <files mask="semc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tempsensor_cm33" name="tempsensor_cm33" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tempsensor" path="examples/evkmimxrt1180/driver_examples/tempsensor/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/tempsensor/cm33" type="xml">
            <files mask="tempsensor_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_webconfig_cm33" name="wifi_webconfig_cm33" brief="Simple AP to Client configuration over web." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_webconfig/cm33">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_webconfig/cm33" type="xml">
            <files mask="wifi_webconfig_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_power_mode_switch_bm_dcdc_core0" name="power_mode_switch_bm_dcdc_core0" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" linked_projects="evkmimxrt1180_power_mode_switch_bm_dcdc_core1" path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core0">
          <external path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core0" type="xml">
            <files mask="power_mode_switch_bm_dcdc_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_digital_io_cm33" name="ecat_examples_digital_io_cm33" brief="An EtherCAT device example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_examples" path="examples/evkmimxrt1180/ecat_examples/digital_io/cm33">
          <external path="examples/evkmimxrt1180/ecat_examples/digital_io/cm33" type="xml">
            <files mask="ecat_examples_digital_io_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_eoe_cm33" name="ecat_examples_eoe_cm33" brief="An EtherCAT EOE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_eoe" path="examples/evkmimxrt1180/ecat_examples/eoe/cm33">
          <external path="examples/evkmimxrt1180/ecat_examples/eoe/cm33" type="xml">
            <files mask="ecat_examples_eoe_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_foe_cm33" name="ecat_examples_foe_cm33" brief="An EtherCAT FoE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_foe" path="examples/evkmimxrt1180/ecat_examples/foe/cm33">
          <external path="examples/evkmimxrt1180/ecat_examples/foe/cm33" type="xml">
            <files mask="ecat_examples_foe_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_polling_transfer_cm33" name="flexio_uart_polling_transfer_cm33" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm33" type="xml">
            <files mask="flexio_uart_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_interrupt_transfer_cm33" name="flexio_uart_interrupt_transfer_cm33" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm33" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_int_rb_transfer_cm33" name="flexio_uart_int_rb_transfer_cm33" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm33" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_input_interrupt_cm33" name="flexio_pin_input_interrupt_cm33" brief="The FLEXIO PIN Example project is a demonstration program that uses the FLEXIO software to manipulate the flexio-pin as input function.The example uses FLEXIO-PIN input to capture the edge of other gpio pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm33" type="xml">
            <files mask="flexio_pin_input_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_led_output_cm33" name="flexio_pin_led_output_cm33" brief="The FLEXIO led project is a demonstration program that uses the FELXIO software to manipulate the felxio-pin.The example is supported by the set, clear, and toggle write-only registers for each flexio output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm33" type="xml">
            <files mask="flexio_pin_led_output_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_edma_transfer_cm33" name="flexio_uart_edma_transfer_cm33" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm33" type="xml">
            <files mask="flexio_uart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_interrupt_lpi2c_transfer_cm33" name="flexio_i2c_interrupt_lpi2c_transfer_cm33" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_read_accel_value_transfer_cm33" name="flexio_i2c_read_accel_value_transfer_cm33" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm33" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_interrupt_transfer_cm33" name="flexio_i2s_interrupt_transfer_cm33" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm33" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_edma_transfer_cm33" name="flexio_i2s_edma_transfer_cm33" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm33" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ewm_cm33" name="ewm_cm33" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/evkmimxrt1180/driver_examples/ewm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/ewm/cm33" type="xml">
            <files mask="ewm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_polling_cm33" name="acmp_polling_cm33" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm33" type="xml">
            <files mask="acmp_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_interrupt_cm33" name="acmp_interrupt_cm33" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm33" type="xml">
            <files mask="acmp_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_master_cm33" name="flexio_spi_edma_lpspi_transfer_master_cm33" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_cm33" name="flexio_spi_edma_lpspi_transfer_slave_cm33" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_master_cm33" name="flexio_spi_int_lpspi_transfer_master_cm33" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_slave_cm33" name="flexio_spi_int_lpspi_transfer_slave_cm33" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_polling_lpspi_transfer_master_cm33" name="flexio_spi_polling_lpspi_transfer_master_cm33" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pwm_cm33" name="flexio_pwm_cm33" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm33" type="xml">
            <files mask="flexio_pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mcuboot_opensource_cm33" name="mcuboot_opensource_cm33" brief="MCUboot bootloader" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/mcuboot_opensource/cm33">
          <external path="examples/evkmimxrt1180/ota_examples/mcuboot_opensource/cm33" type="xml">
            <files mask="mcuboot_opensource_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_basic_cm33" name="ota_mcuboot_basic_cm33" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_basic/cm33">
          <external path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_basic/cm33" type="xml">
            <files mask="ota_mcuboot_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_server_enet_cm33" name="ota_mcuboot_server_enet_cm33" brief="This ota_mcuboot_server application demonstrates OTA update using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/enet/cm33">
          <external path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/enet/cm33" type="xml">
            <files mask="ota_mcuboot_server_enet_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_server_wifi_cm33" name="ota_mcuboot_server_wifi_cm33" brief="This ota_mcuboot_server application demonstrates OTA using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/wifi/cm33">
          <external path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/wifi/cm33" type="xml">
            <files mask="ota_mcuboot_server_wifi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_trdc_cm33" name="trdc_cm33" brief="The Multicore TRDC demo application demonstrates how to use TRDC on a multicore system to control the access policy of the memory block checker(MBC) and memory region checker(MRC), and how to configure the domain access control(DAC) for bus masters to access both secure and non-secure domains. First, the primary core example uses 1 domain for secure access demo. The primary core which is secure first sets a MRC memory region and a MBC memory block to non-secure access only, then trys to access the memory which triggers the hardfault. In hardfault the access control is changed to secure access to resolve the error. Then, the primary core releases the secondary core from the reset. The secondary core example uses 2 domains, one is for secure access and the other is for non-secure access. By enabling different DAC configuration, different domain is used for the access control. The secure access process is the same as the primary core. In the non-secure access demo, the secondary core sets a MRC memory region and a MBC memory block to secure access only, and switch to the non-secure DAC configuration which force the core to be non-secure. Then trys to access the memory which triggers the hardfault. In hardfault certain flags stored in flash is set to let primary core know and update the configuration to non-secure access to resolve the error, because the TRDC is secure access only." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" linked_projects="evkmimxrt1180_trdc_cm7" path="examples/evkmimxrt1180/driver_examples/trdc/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/trdc/cm33" type="xml">
            <files mask="trdc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pwm_cm33" name="pwm_cm33" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pwm" path="examples/evkmimxrt1180/driver_examples/pwm/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/pwm/cm33" type="xml">
            <files mask="pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_basic_cm33" name="eqdc_basic_cm33" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm33" type="xml">
            <files mask="eqdc_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_index_interrupt_cm33" name="eqdc_index_interrupt_cm33" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm33" type="xml">
            <files mask="eqdc_index_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_basic_cm33" name="dac12_basic_cm33" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm33" type="xml">
            <files mask="dac12_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_fifo_interrupt_cm33" name="dac12_fifo_interrupt_cm33" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm33" type="xml">
            <files mask="dac12_fifo_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_manager_cm33" name="ele_crypto_nvm_manager_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_manager/cm33">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_manager/cm33" type="xml">
            <files mask="ele_crypto_nvm_manager_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_shell_cm33" name="shell_cm33" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/shell/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/shell/cm33" type="xml">
            <files mask="shell_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_littlefs_shell_cm33" name="littlefs_shell_cm33" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="littlefs_examples" path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm33">
          <external path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm33" type="xml">
            <files mask="littlefs_shell_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_cm33" name="sai_cm33" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/sai/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/sai/cm33" type="xml">
            <files mask="sai_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_hyper_ram_polling_transfer_cm33" name="flexspi_hyper_ram_polling_transfer_cm33" brief="The flexspi_hyper_ram_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper RAM connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Read Data and Write Data.Example will first Write 256 bytes of data from the start of Hyper ram, then read the data back. at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm33" type="xml">
            <files mask="flexspi_hyper_ram_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_polling_transfer_cm33" name="flexspi_octal_polling_transfer_cm33" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm33" type="xml">
            <files mask="flexspi_octal_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_edma_transfer_cm33" name="flexspi_octal_edma_transfer_cm33" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm33" type="xml">
            <files mask="flexspi_octal_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_nor_flexspi_cm33" name="flash_component_nor_flexspi_cm33" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_nor" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm33">
          <external path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm33" type="xml">
            <files mask="flash_component_nor_flexspi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_octal_flexspi_cm33" name="flash_component_octal_flexspi_cm33" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_octal" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm33">
          <external path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm33" type="xml">
            <files mask="flash_component_octal_flexspi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_xbar_aoi_cm33" name="xbar_aoi_cm33" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm33" type="xml">
            <files mask="xbar_aoi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_server_matrix_multiply_uart_cm33" name="erpc_server_matrix_multiply_uart_cm33" brief="This example demonstrates usage of eRPC between PC and board using UART transport layer.Board acts like a server and the PC as client. When client starts, it generates two randommatrixes and sends them to server. Server then performs matrix multiplication and sendsresult data back to client. Result matrix is then printed on the PC side.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io PC Side Setup (Python)1. Make sure you have Python installed on your PC2. Install eRPC module to Python by executing setup.py located in: middleware/multicore/erpc/erpc_python3. Install serial module by executing following command in command line: &quot;python -m pip install pyserial&quot;Usage of run_uart.pyusage: run_uart.py [-h] [-c] [-s] [-p PORT] [-b BD]eRPC Matrix Multiply exampleoptional arguments:  -h, --help            show this help message an  -c, --client          Run client  -s, --server          Run server  -p PORT, --port PORT  Serial port  -b BD, --bd BD        Baud rate (default value is 115200)Either server or client has to be selected to runExample:To run PC side as a client with a board connected as a server to COM3 execute:&quot;run_uart.py --client --port COM3&quot;" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multiprocessor_examples" path="examples/evkmimxrt1180/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33">
          <external path="examples/evkmimxrt1180/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33" type="xml">
            <files mask="erpc_server_matrix_multiply_uart_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_single_error_cm33" name="mecc_single_error_cm33" brief="The MECC Single Error project is a simple demonstration program of the SDK MECC driver. It supports Single Error Correction ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm33" type="xml">
            <files mask="mecc_single_error_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_multie_error_cm33" name="mecc_multie_error_cm33" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm33" type="xml">
            <files mask="mecc_multie_error_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_sample_rate_count_cm33" name="lpadc_sample_rate_count_cm33" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm33" type="xml">
            <files mask="lpadc_sample_rate_count_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_high_sample_rate_sample_signal_cm33" name="lpadc_high_sample_rate_sample_signal_cm33" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm33" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_src_global_reset_cm33" name="src_global_reset_cm33" brief="The src_global_reset example shows how to reset the selected slice via software.s" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/src" path="examples/evkmimxrt1180/driver_examples/src/src_global_reset/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/src/src_global_reset/cm33" type="xml">
            <files mask="src_global_reset_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_iee_apc_cm33" name="iee_apc_cm33" brief="The IEE APC demo application demonstrates usage of the IEE and IEE APC driver. The Inline Encryption Engine (IEE) together with IEE APC provides a means to perform inline encryption and decryption of information transferred over memory interfaces. This demo application configures region 0 to perform AES XTS encryption and decryption while region 1 to perform AES-CTR decryption from external QSPI FLASH memory. Then data are written into RAM memory (region 0), after that encryption is disabled and encrypted data read. After the successful read, encryption is enabled and memory read again to see that data matches the original written value. Another encrypted data are programmed into FLASH memory (region 1) and after encryption is enabled data are read and compared with expected data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/iee_apc/cm33">
          <external path="examples/evkmimxrt1180/demo_apps/iee_apc/cm33" type="xml">
            <files mask="iee_apc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_interrupt_transfer_cm33" name="spdif_interrupt_transfer_cm33" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm33" type="xml">
            <files mask="spdif_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_edma_transfer_cm33" name="spdif_edma_transfer_cm33" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm33">
          <external path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm33" type="xml">
            <files mask="spdif_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tee_fault_core0" name="tee_fault_core0" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps/tee_fault" linked_projects="evkmimxrt1180_tee_fault_core1" path="examples/evkmimxrt1180/demo_apps/tee_fault/core0">
          <external path="examples/evkmimxrt1180/demo_apps/tee_fault/core0" type="xml">
            <files mask="tee_fault_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_bm_cm33" name="log_bm_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/bm/cm33">
          <external path="examples/evkmimxrt1180/component_examples/log/bm/cm33" type="xml">
            <files mask="log_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_freertos_cm33" name="log_freertos_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/freertos/cm33">
          <external path="examples/evkmimxrt1180/component_examples/log/freertos/cm33" type="xml">
            <files mask="log_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_flash_operation_cm33" name="freertos_hello_flash_operation_cm33" brief="The FreeRTOS hello world flash operation project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates two tasks called flash_operation_task and hello_task . First task operate flash and suspend itself, second task print &quot;Hello world.&quot;   message periodically via debug console utility." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm33" type="xml">
            <files mask="freertos_hello_flash_operation_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_cm33" name="freertos_hello_cm33" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm33" type="xml">
            <files mask="freertos_hello_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_generic_cm33" name="freertos_generic_cm33" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm33" type="xml">
            <files mask="freertos_generic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_event_cm33" name="freertos_event_cm33" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm33" type="xml">
            <files mask="freertos_event_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_queue_cm33" name="freertos_queue_cm33" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm33" type="xml">
            <files mask="freertos_queue_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_cm33" name="freertos_sem_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm33" type="xml">
            <files mask="freertos_sem_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_mutex_cm33" name="freertos_mutex_cm33" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm33" type="xml">
            <files mask="freertos_mutex_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_static_cm33" name="freertos_sem_static_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm33" type="xml">
            <files mask="freertos_sem_static_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_swtimer_cm33" name="freertos_swtimer_cm33" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm33" type="xml">
            <files mask="freertos_swtimer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_tickless_rgpio_cm33" name="freertos_tickless_rgpio_cm33" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm33">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm33" type="xml">
            <files mask="freertos_tickless_rgpio_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_cifar10_cm33" name="tflm_cifar10_cm33" brief="CIFAR-10 example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_cifar10">
          <external path="examples/evkmimxrt1180/eiq_examples/tflm_cifar10" type="xml">
            <files mask="tflm_cifar10_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_label_image_cm33" name="tflm_label_image_cm33" brief="Label image example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_label_image">
          <external path="examples/evkmimxrt1180/eiq_examples/tflm_label_image" type="xml">
            <files mask="tflm_label_image_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_kws_cm33" name="tflm_kws_cm33" brief="Keyword spotting example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_kws">
          <external path="examples/evkmimxrt1180/eiq_examples/tflm_kws" type="xml">
            <files mask="tflm_kws_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_freertos_cm7" name="host_hid_mouse_freertos_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm7">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm7" type="xml">
            <files mask="host_hid_mouse_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_bm_cm7" name="host_hid_mouse_bm_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm7">
          <external path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm7" type="xml">
            <files mask="host_hid_mouse_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_freertos_cm7" name="dev_hid_mouse_freertos_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm7">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm7" type="xml">
            <files mask="dev_hid_mouse_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_bm_cm7" name="dev_hid_mouse_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm7">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_lite_bm_cm7" name="dev_hid_mouse_lite_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm7">
          <external path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_demo_cm7" name="hello_world_demo_cm7" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/hello_world/cm7" type="xml">
            <files mask="hello_world_demo_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_virtual_com_cm7" name="hello_world_virtual_com_cm7" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm7" type="xml">
            <files mask="hello_world_virtual_com_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rled_blinky_demo_cm7" name="rled_blinky_demo_cm7" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/led_blinky/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/led_blinky/cm7" type="xml">
            <files mask="rled_blinky_demo_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_bm_cm7" name="log_bm_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/bm/cm7">
          <external path="examples/evkmimxrt1180/component_examples/log/bm/cm7" type="xml">
            <files mask="log_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_freertos_cm7" name="log_freertos_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/freertos/cm7">
          <external path="examples/evkmimxrt1180/component_examples/log/freertos/cm7" type="xml">
            <files mask="log_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_bubble_peripheral_cm7" name="bubble_peripheral_cm7" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm7" type="xml">
            <files mask="bubble_peripheral_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cache_cm7" name="cache_cm7" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/cache" path="examples/evkmimxrt1180/driver_examples/cache/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/cache/cm7" type="xml">
            <files mask="cache_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_interrupt_transfer_cm7" name="canfd_interrupt_transfer_cm7" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm7" type="xml">
            <files mask="canfd_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_cm7" name="canfd_loopback_cm7" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm7" type="xml">
            <files mask="canfd_loopback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_transfer_cm7" name="canfd_loopback_transfer_cm7" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm7" type="xml">
            <files mask="canfd_loopback_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_ping_pong_buffer_transfer_cm7" name="canfd_ping_pong_buffer_transfer_cm7" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_interrupt_transfer_cm7" name="cmsis_lpuart_interrupt_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_edma_transfer_cm7" name="cmsis_lpuart_edma_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma3_memory_to_memory_cm7" name="edma3_memory_to_memory_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma3" path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm7" type="xml">
            <files mask="edma3_memory_to_memory_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_scatter_gather_cm7" name="edma4_scatter_gather_cm7" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm7" type="xml">
            <files mask="edma4_scatter_gather_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_cm7" name="edma4_memory_to_memory_cm7" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm7" type="xml">
            <files mask="edma4_memory_to_memory_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_transfer_cm7" name="edma4_memory_to_memory_transfer_cm7" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm7" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memset_cm7" name="edma4_memset_cm7" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm7" type="xml">
            <files mask="edma4_memset_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_channel_link_cm7" name="edma4_channel_link_cm7" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm7" type="xml">
            <files mask="edma4_channel_link_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_wrap_transfer_cm7" name="edma4_wrap_transfer_cm7" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm7" type="xml">
            <files mask="edma4_wrap_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_ping_pong_transfer_cm7" name="edma4_ping_pong_transfer_cm7" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm7" type="xml">
            <files mask="edma4_ping_pong_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_interleave_transfer_cm7" name="edma4_interleave_transfer_cm7" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm7" type="xml">
            <files mask="edma4_interleave_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_interrupt_transfer_cm7" name="flexcan_interrupt_transfer_cm7" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm7" type="xml">
            <files mask="flexcan_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_cm7" name="flexcan_loopback_cm7" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm7" type="xml">
            <files mask="flexcan_loopback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_transfer_cm7" name="flexcan_loopback_transfer_cm7" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm7" type="xml">
            <files mask="flexcan_loopback_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_ping_pong_buffer_transfer_cm7" name="flexcan_ping_pong_buffer_transfer_cm7" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_edma_transfer_cm7" name="flexcan_loopback_edma_transfer_cm7" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm7" type="xml">
            <files mask="flexcan_loopback_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_edma_transfer_cm7" name="flexcan_efifo_edma_transfer_cm7" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm7" type="xml">
            <files mask="flexcan_efifo_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_interrupt_transfer_cm7" name="flexcan_efifo_interrupt_transfer_cm7" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm7" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_polling_transfer_cm7" name="flexspi_nor_polling_transfer_cm7" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm7" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_edma_transfer_cm7" name="flexspi_nor_edma_transfer_cm7" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm7" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tstmr_cm7" name="tstmr_cm7" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/evkmimxrt1180/driver_examples/tstmr/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/tstmr/cm7" type="xml">
            <files mask="tstmr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sysctr_cm7" name="sysctr_cm7" brief="The sysctr example shows the usage of System Counter driver in application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sysctr" path="examples/evkmimxrt1180/driver_examples/sysctr/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sysctr/cm7" type="xml">
            <files mask="sysctr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_timer_cm7" name="gpt_timer_cm7" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm7" type="xml">
            <files mask="gpt_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_compare_cm7" name="gpt_compare_cm7" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm7" type="xml">
            <files mask="gpt_compare_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_master_read_sensor_lsm6dso_cm7" name="i3c_master_read_sensor_lsm6dso_cm7" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm7" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_master_cm7" name="i3c_polling_b2b_transfer_master_cm7" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_slave_cm7" name="i3c_polling_b2b_transfer_slave_cm7" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_master_cm7" name="i3c_interrupt_b2b_transfer_master_cm7" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_slave_cm7" name="i3c_interrupt_b2b_transfer_slave_cm7" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_master_cm7" name="i3c_edma_b2b_transfer_master_cm7" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_slave_cm7" name="i3c_edma_b2b_transfer_slave_cm7" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_cm7" name="lpi2c_interrupt_cm7" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm7" type="xml">
            <files mask="lpi2c_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_master_cm7" name="lpi2c_interrupt_b2b_transfer_master_cm7" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_slave_cm7" name="lpi2c_interrupt_b2b_transfer_slave_cm7" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_master_cm7" name="lpi2c_polling_b2b_master_cm7" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_slave_cm7" name="lpi2c_polling_b2b_slave_cm7" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_master_cm7" name="lpi2c_edma_b2b_transfer_master_cm7" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_slave_cm7" name="lpi2c_edma_b2b_transfer_slave_cm7" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_single_channel_cm7" name="lpit_single_channel_cm7" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm7" type="xml">
            <files mask="lpit_single_channel_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_pwm_cm7" name="lpit_pwm_cm7" brief="This example show how to use SDK drivers to implement the PWM feature by LPIT IP module in dualperiodcounter mode.You can set up PWM singal frequency and duty in this example.Connect PWM singal output pin to oscilloscope, you will see PWM wave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm7" type="xml">
            <files mask="lpit_pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_master_cm7" name="lpspi_interrupt_b2b_master_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_slave_cm7" name="lpspi_interrupt_b2b_slave_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_master_cm7" name="lpspi_edma_b2b_transfer_master_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_slave_cm7" name="lpspi_edma_b2b_transfer_slave_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_master_cm7" name="lpspi_polling_b2b_transfer_master_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_slave_cm7" name="lpspi_polling_b2b_transfer_slave_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lptmr_cm7" name="lptmr_cm7" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/evkmimxrt1180/driver_examples/lptmr/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lptmr/cm7" type="xml">
            <files mask="lptmr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_cm7" name="lpuart_interrupt_cm7" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm7" type="xml">
            <files mask="lpuart_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_edma_transfer_cm7" name="lpuart_edma_transfer_cm7" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="lpuart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_cm7" name="lpuart_interrupt_transfer_cm7" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_rb_transfer_cm7" name="lpuart_interrupt_rb_transfer_cm7" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_cm7" name="lpuart_polling_cm7" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm7" type="xml">
            <files mask="lpuart_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_9bit_interrupt_transfer_cm7" name="lpuart_9bit_interrupt_transfer_cm7" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_seven_bits_cm7" name="lpuart_interrupt_transfer_seven_bits_cm7" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_seven_bits_cm7" name="lpuart_polling_seven_bits_cm7" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm7" type="xml">
            <files mask="lpuart_polling_seven_bits_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_timer_cm7" name="qtmr_timer_cm7" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm7" type="xml">
            <files mask="qtmr_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_cm7" name="qtmr_inputcapture_outputpwm_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_dma_cm7" name="qtmr_inputcapture_outputpwm_dma_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_input_interrupt_cm7" name="rgpio_input_interrupt_cm7" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm7" type="xml">
            <files mask="rgpio_input_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_led_output_cm7" name="rgpio_led_output_cm7" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm7" type="xml">
            <files mask="rgpio_led_output_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_adc_cm7" name="lpit_adc_cm7" brief="The lpit_adc example shows how to use LPIT to generate ADC triggers. On top of the basic counter, to use the ADC trigger, simply enable the &quot;milestone&quot; of the ADC trigger and set it with a user-defined value. When the LPIT counter is on, when the count passes the &quot;milestone&quot;, a pre-trigger of the ADC is generated and sent to the ADC module. In this example, the ADC is configured with hardware triggering and conversion complete interrupt enabled. Once it gets a trigger from the LPIT, the transition occurs and then the ISR is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc/lpit_adc" path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm7" type="xml">
            <files mask="lpit_adc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_txrx_transfer_cm7" name="netc_txrx_transfer_cm7" brief="The example shows the way to use NETC driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the NETC. 2. How to get the time stamp of the PTP 1588 timer. 3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm7" type="xml">
            <files mask="netc_txrx_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_switch_cm7" name="netc_switch_cm7" brief="The example shows the way to use NETC driver to act as a switch. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/switch/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/netc/switch/cm7" type="xml">
            <files mask="netc_switch_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tpm_timer_cm7" name="tpm_timer_cm7" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm7" type="xml">
            <files mask="tpm_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_polling_cm7" name="lpadc_polling_cm7" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm7" type="xml">
            <files mask="lpadc_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_interrupt_cm7" name="lpadc_interrupt_cm7" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm7" type="xml">
            <files mask="lpadc_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_dual_single_ended_conversion_cm7" name="lpadc_dual_single_ended_conversion_cm7" brief="The lpadc_dual_single_ended_conversion example shows how to use two channel with LPADC driver. In this example, user should indicate two channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input, Channel B does not need to be paired with Channel A, Channel B is user selectable.When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm7" type="xml">
            <files mask="lpadc_dual_single_ended_conversion_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_cm7" name="erpc_matrix_multiply_mu_cm7" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm7" name="erpc_matrix_multiply_mu_rtos_cm7" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm7" name="erpc_matrix_multiply_rpmsg_cm7" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm7" name="erpc_matrix_multiply_rpmsg_rtos_cm7" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm7" name="erpc_two_way_rpc_rpmsg_rtos_cm7" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_message_buffers_cm7" name="freertos_message_buffers_cm7" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm7" type="xml">
            <files mask="freertos_message_buffers_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_cm7" name="hello_world_cm7" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/hello_world/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/hello_world/cm7" type="xml">
            <files mask="hello_world_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_cm7" name="rpmsg_lite_pingpong_cm7" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm7" name="rpmsg_lite_pingpong_rtos_cm7" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm7">
          <external path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_psi_vsi_message_cm7" name="netc_psi_vsi_message_cm7" brief="The Multicore NETC PSI-VSI demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core use NETC PSI to send/receive frames. It also releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running and uses NETC VSI to send/receive frames." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm7" type="xml">
            <files mask="netc_psi_vsi_message_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sema42_dual_core_core1" name="sema42_dual_core_core1" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sema42" path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core1">
          <external path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core1" type="xml">
            <files mask="sema42_dual_core_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_polling_core1" name="mu_polling_core1" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" path="examples/evkmimxrt1180/driver_examples/mu/polling/core1">
          <external path="examples/evkmimxrt1180/driver_examples/mu/polling/core1" type="xml">
            <files mask="mu_polling_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_interrupt_core1" name="mu_interrupt_core1" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core1">
          <external path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core1" type="xml">
            <files mask="mu_interrupt_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_p2p_out_edma_cm7" name="asrc_p2p_out_edma_cm7" brief="The asrc_p2p_out_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm7" type="xml">
            <files mask="asrc_p2p_out_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_edma_cm7" name="asrc_m2m_edma_cm7" brief="The asrc_m2m_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm7" type="xml">
            <files mask="asrc_m2m_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_interrupt_cm7" name="asrc_m2m_interrupt_cm7" brief="The asrc_m2m_interrupt example shows how to use asrc driver with interrupt:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_interrupt/cm7" type="xml">
            <files mask="asrc_m2m_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_polling_cm7" name="asrc_m2m_polling_cm7" brief="The asrc_m2m_polling example shows how to use asrc driver with polling:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_polling/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_polling/cm7" type="xml">
            <files mask="asrc_m2m_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_cm7" name="sai_interrupt_cm7" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm7" type="xml">
            <files mask="sai_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_record_playback_cm7" name="sai_interrupt_record_playback_cm7" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm7" type="xml">
            <files mask="sai_interrupt_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_transfer_cm7" name="sai_interrupt_transfer_cm7" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm7" type="xml">
            <files mask="sai_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_transfer_cm7" name="sai_edma_transfer_cm7" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm7" type="xml">
            <files mask="sai_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_record_playback_cm7" name="sai_edma_record_playback_cm7" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm7" type="xml">
            <files mask="sai_edma_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_half_interrupt_cm7" name="sai_edma_ping_pong_buffer_half_interrupt_cm7" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_cm7" name="sai_edma_ping_pong_buffer_cm7" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_record_playback_cm7" name="sai_edma_tdm_record_playback_cm7" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm7" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_cm7" name="sai_edma_tdm_cm7" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm7" type="xml">
            <files mask="sai_edma_tdm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_bm_cm7" name="lwip_dhcp_bm_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm7" type="xml">
            <files mask="lwip_dhcp_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_freertos_cm7" name="lwip_dhcp_freertos_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm7" type="xml">
            <files mask="lwip_dhcp_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_mqtt_freertos_cm7" name="lwip_mqtt_freertos_cm7" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm7" type="xml">
            <files mask="lwip_mqtt_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_bm_cm7" name="lwip_httpsrv_bm_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm7" type="xml">
            <files mask="lwip_httpsrv_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_freertos_cm7" name="lwip_httpsrv_freertos_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm7" type="xml">
            <files mask="lwip_httpsrv_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_bm_cm7" name="lwip_httpssrv_mbedTLS_bm_cm7" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_freertos_cm7" name="lwip_httpssrv_mbedTLS_freertos_cm7" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_iperf_bm_cm7" name="lwip_iperf_bm_cm7" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm7" type="xml">
            <files mask="lwip_iperf_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ipv4_ipv6_echo_freertos_cm7" name="lwip_ipv4_ipv6_echo_freertos_cm7" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_bm_cm7" name="lwip_ping_bm_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm7" type="xml">
            <files mask="lwip_ping_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_freertos_cm7" name="lwip_ping_freertos_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm7">
          <external path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm7" type="xml">
            <files mask="lwip_ping_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_interrupt_cm7" name="pdm_interrupt_cm7" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm7" type="xml">
            <files mask="pdm_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_edma_transfer_cm7" name="pdm_edma_transfer_cm7" brief="pdm_edma_transfer" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm7" type="xml">
            <files mask="pdm_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_standalone_transfer_edma_cm7" name="pdm_standalone_transfer_edma_cm7" brief="pdm_standalone_transfer_edma" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm7" type="xml">
            <files mask="pdm_standalone_transfer_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_cm7" name="pdm_sai_interrupt_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm7" type="xml">
            <files mask="pdm_sai_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_transfer_cm7" name="pdm_sai_interrupt_transfer_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm7" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_edma_cm7" name="pdm_sai_edma_cm7" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm7" type="xml">
            <files mask="pdm_sai_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_multi_channel_edma_cm7" name="pdm_sai_multi_channel_edma_cm7" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm7" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_polling_cm7" name="sdcard_polling_cm7" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_polling" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm7">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm7" type="xml">
            <files mask="sdcard_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_interrupt_cm7" name="sdcard_interrupt_cm7" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_interrupt" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm7">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm7" type="xml">
            <files mask="sdcard_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_freertos_cm7" name="sdcard_freertos_cm7" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm7">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm7" type="xml">
            <files mask="sdcard_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_cm7" name="sdcard_fatfs_cm7" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm7">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm7" type="xml">
            <files mask="sdcard_fatfs_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_freertos_cm7" name="sdcard_fatfs_freertos_cm7" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm7">
          <external path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm7" type="xml">
            <files mask="sdcard_fatfs_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_kpp_cm7" name="kpp_cm7" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/kpp" path="examples/evkmimxrt1180/driver_examples/kpp/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/kpp/cm7" type="xml">
            <files mask="kpp_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sinc_adc_cm7" name="sinc_adc_cm7" brief="The sinc adc example shows how to use SINC driver to configure SINC module as single conversion mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sinc" path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm7" type="xml">
            <files mask="sinc_adc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_master_cm7" name="cmsis_lpi2c_edma_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_slave_cm7" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_master_cm7" name="cmsis_lpi2c_int_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_slave_cm7" name="cmsis_lpi2c_int_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_master_cm7" name="cmsis_lpspi_edma_b2b_transfer_master_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_slave_cm7" name="cmsis_lpspi_edma_b2b_transfer_slave_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_master_cm7" name="cmsis_lpspi_int_b2b_transfer_master_cm7" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_slave_cm7" name="cmsis_lpspi_int_b2b_transfer_slave_cm7" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_fsl_romapi_cm7" name="fsl_romapi_cm7" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi" path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm7" type="xml">
            <files mask="fsl_romapi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_semc_cm7" name="semc_cm7" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/semc" path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm7" type="xml">
            <files mask="semc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tempsensor_cm7" name="tempsensor_cm7" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tempsensor" path="examples/evkmimxrt1180/driver_examples/tempsensor/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/tempsensor/cm7" type="xml">
            <files mask="tempsensor_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_power_mode_switch_bm_dcdc_core1" name="power_mode_switch_bm_dcdc_core1" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core1">
          <external path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core1" type="xml">
            <files mask="power_mode_switch_bm_dcdc_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_digital_io_cm7" name="ecat_examples_digital_io_cm7" brief="An EtherCAT device example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_examples" path="examples/evkmimxrt1180/ecat_examples/digital_io/cm7">
          <external path="examples/evkmimxrt1180/ecat_examples/digital_io/cm7" type="xml">
            <files mask="ecat_examples_digital_io_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_eoe_cm7" name="ecat_examples_eoe_cm7" brief="An EtherCAT EOE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_eoe" path="examples/evkmimxrt1180/ecat_examples/eoe/cm7">
          <external path="examples/evkmimxrt1180/ecat_examples/eoe/cm7" type="xml">
            <files mask="ecat_examples_eoe_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_polling_transfer_cm7" name="flexio_uart_polling_transfer_cm7" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm7" type="xml">
            <files mask="flexio_uart_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_interrupt_transfer_cm7" name="flexio_uart_interrupt_transfer_cm7" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_int_rb_transfer_cm7" name="flexio_uart_int_rb_transfer_cm7" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm7" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_input_interrupt_cm7" name="flexio_pin_input_interrupt_cm7" brief="The FLEXIO PIN Example project is a demonstration program that uses the FLEXIO software to manipulate the flexio-pin as input function.The example uses FLEXIO-PIN input to capture the edge of other gpio pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm7" type="xml">
            <files mask="flexio_pin_input_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_led_output_cm7" name="flexio_pin_led_output_cm7" brief="The FLEXIO led project is a demonstration program that uses the FELXIO software to manipulate the felxio-pin.The example is supported by the set, clear, and toggle write-only registers for each flexio output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm7" type="xml">
            <files mask="flexio_pin_led_output_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_edma_transfer_cm7" name="flexio_uart_edma_transfer_cm7" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm7" type="xml">
            <files mask="flexio_uart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_interrupt_lpi2c_transfer_cm7" name="flexio_i2c_interrupt_lpi2c_transfer_cm7" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_read_accel_value_transfer_cm7" name="flexio_i2c_read_accel_value_transfer_cm7" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm7" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_interrupt_transfer_cm7" name="flexio_i2s_interrupt_transfer_cm7" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_edma_transfer_cm7" name="flexio_i2s_edma_transfer_cm7" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm7" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ewm_cm7" name="ewm_cm7" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/evkmimxrt1180/driver_examples/ewm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/ewm/cm7" type="xml">
            <files mask="ewm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_polling_cm7" name="acmp_polling_cm7" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm7" type="xml">
            <files mask="acmp_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_interrupt_cm7" name="acmp_interrupt_cm7" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm7" type="xml">
            <files mask="acmp_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_master_cm7" name="flexio_spi_edma_lpspi_transfer_master_cm7" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_cm7" name="flexio_spi_edma_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_master_cm7" name="flexio_spi_int_lpspi_transfer_master_cm7" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_slave_cm7" name="flexio_spi_int_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_polling_lpspi_transfer_master_cm7" name="flexio_spi_polling_lpspi_transfer_master_cm7" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pwm_cm7" name="flexio_pwm_cm7" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm7" type="xml">
            <files mask="flexio_pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_trdc_cm7" name="trdc_cm7" brief="The Multicore TRDC demo application demonstrates how to use TRDC on a multicore system to control the access policy of the memory block checker(MBC) and memory region checker(MRC), and how to configure the domain access control(DAC) for bus masters to access both secure and non-secure domains. First, the primary core example uses 1 domain for secure access demo. The primary core which is secure first sets a MRC memory region and a MBC memory block to non-secure access only, then trys to access the memory which triggers the hardfault. In hardfault the access control is changed to secure access to resolve the error. Then, the primary core releases the secondary core from the reset. The secondary core example uses 2 domains, one is for secure access and the other is for non-secure access. By enabling different DAC configuration, different domain is used for the access control. The secure access process is the same as the primary core. In the non-secure access demo, the secondary core sets a MRC memory region and a MBC memory block to secure access only, and switch to the non-secure DAC configuration which force the core to be non-secure. Then trys to access the memory which triggers the hardfault. In hardfault certain flags stored in flash is set to let primary core know and update the configuration to non-secure access to resolve the error, because the TRDC is secure access only." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/evkmimxrt1180/driver_examples/trdc/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/trdc/cm7" type="xml">
            <files mask="trdc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pwm_cm7" name="pwm_cm7" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pwm" path="examples/evkmimxrt1180/driver_examples/pwm/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/pwm/cm7" type="xml">
            <files mask="pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_basic_cm7" name="eqdc_basic_cm7" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm7" type="xml">
            <files mask="eqdc_basic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_index_interrupt_cm7" name="eqdc_index_interrupt_cm7" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm7" type="xml">
            <files mask="eqdc_index_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_basic_cm7" name="dac12_basic_cm7" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm7" type="xml">
            <files mask="dac12_basic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_fifo_interrupt_cm7" name="dac12_fifo_interrupt_cm7" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm7" type="xml">
            <files mask="dac12_fifo_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_shell_cm7" name="shell_cm7" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/shell/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/shell/cm7" type="xml">
            <files mask="shell_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_littlefs_shell_cm7" name="littlefs_shell_cm7" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="littlefs_examples" path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm7">
          <external path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm7" type="xml">
            <files mask="littlefs_shell_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_cm7" name="sai_cm7" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/sai/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/sai/cm7" type="xml">
            <files mask="sai_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_hsm_cm7" name="ele_crypto_hsm_cm7" brief="The ELE Crypto Example project is a demonstration program that uses the MCUX SDK software to perform crypto operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm7" type="xml">
            <files mask="ele_crypto_hsm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_common_cm7" name="ele_crypto_common_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm7" type="xml">
            <files mask="ele_crypto_common_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_hash_cm7" name="ele_crypto_generic_hash_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm7" type="xml">
            <files mask="ele_crypto_generic_hash_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_selftest_cm7" name="mbedtls_selftest_cm7" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm7">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm7" type="xml">
            <files mask="mbedtls_selftest_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_benchmark_cm7" name="mbedtls_benchmark_cm7" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm7">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm7" type="xml">
            <files mask="mbedtls_benchmark_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_cm7" name="ele_crypto_nvm_cm7" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm7" type="xml">
            <files mask="ele_crypto_nvm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_generic_cm7" name="ele_crypto_nvm_generic_cm7" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm7" type="xml">
            <files mask="ele_crypto_nvm_generic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_aes_cm7" name="ele_crypto_generic_aes_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm7" type="xml">
            <files mask="ele_crypto_generic_aes_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_rsa_cm7" name="ele_crypto_generic_rsa_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm7" type="xml">
            <files mask="ele_crypto_generic_rsa_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_baseline_api_cm7" name="ele_crypto_baseline_api_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm7">
          <external path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm7" type="xml">
            <files mask="ele_crypto_baseline_api_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cm7" name="mbedtls_ele_ecc_opaque_key_cm7" brief="The mbedTLS ECC opaque key demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm7">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm7" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cert_cm7" name="mbedtls_ele_ecc_opaque_key_cert_cm7" brief="The mbedTLS ECC write certificate demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair to self-sign an X509 certificate." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm7">
          <external path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm7" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cert_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_hyper_ram_polling_transfer_cm7" name="flexspi_hyper_ram_polling_transfer_cm7" brief="The flexspi_hyper_ram_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper RAM connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Read Data and Write Data.Example will first Write 256 bytes of data from the start of Hyper ram, then read the data back. at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm7" type="xml">
            <files mask="flexspi_hyper_ram_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_polling_transfer_cm7" name="flexspi_octal_polling_transfer_cm7" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm7" type="xml">
            <files mask="flexspi_octal_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_edma_transfer_cm7" name="flexspi_octal_edma_transfer_cm7" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm7" type="xml">
            <files mask="flexspi_octal_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_nor_flexspi_cm7" name="flash_component_nor_flexspi_cm7" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_nor" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm7">
          <external path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm7" type="xml">
            <files mask="flash_component_nor_flexspi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_octal_flexspi_cm7" name="flash_component_octal_flexspi_cm7" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_octal" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm7">
          <external path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm7" type="xml">
            <files mask="flash_component_octal_flexspi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_xbar_aoi_cm7" name="xbar_aoi_cm7" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm7" type="xml">
            <files mask="xbar_aoi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_cli_cm7" name="wifi_cli_cm7" brief="wifi_cli" toolchain="armgcc" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm7">
          <external path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm7" type="xml">
            <files mask="wifi_cli_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_single_error_cm7" name="mecc_single_error_cm7" brief="The MECC Single Error project is a simple demonstration program of the SDK MECC driver. It supports Single Error Correction ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm7" type="xml">
            <files mask="mecc_single_error_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_multie_error_cm7" name="mecc_multie_error_cm7" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm7" type="xml">
            <files mask="mecc_multie_error_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_sample_rate_count_cm7" name="lpadc_sample_rate_count_cm7" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7" type="xml">
            <files mask="lpadc_sample_rate_count_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_high_sample_rate_sample_signal_cm7" name="lpadc_high_sample_rate_sample_signal_cm7" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm7">
          <external path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm7" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_interrupt_transfer_cm7" name="spdif_interrupt_transfer_cm7" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm7" type="xml">
            <files mask="spdif_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_edma_transfer_cm7" name="spdif_edma_transfer_cm7" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm7">
          <external path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm7" type="xml">
            <files mask="spdif_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tee_fault_core1" name="tee_fault_core1" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps/tee_fault" path="examples/evkmimxrt1180/demo_apps/tee_fault/core1">
          <external path="examples/evkmimxrt1180/demo_apps/tee_fault/core1" type="xml">
            <files mask="tee_fault_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_flash_operation_cm7" name="freertos_hello_flash_operation_cm7" brief="The FreeRTOS hello world flash operation project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates two tasks called flash_operation_task and hello_task . First task operate flash and suspend itself, second task print &quot;Hello world.&quot;   message periodically via debug console utility." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm7" type="xml">
            <files mask="freertos_hello_flash_operation_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_cm7" name="freertos_hello_cm7" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm7" type="xml">
            <files mask="freertos_hello_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_generic_cm7" name="freertos_generic_cm7" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm7" type="xml">
            <files mask="freertos_generic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_event_cm7" name="freertos_event_cm7" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm7" type="xml">
            <files mask="freertos_event_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_queue_cm7" name="freertos_queue_cm7" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm7" type="xml">
            <files mask="freertos_queue_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_cm7" name="freertos_sem_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm7" type="xml">
            <files mask="freertos_sem_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_mutex_cm7" name="freertos_mutex_cm7" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm7" type="xml">
            <files mask="freertos_mutex_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_static_cm7" name="freertos_sem_static_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm7" type="xml">
            <files mask="freertos_sem_static_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_swtimer_cm7" name="freertos_swtimer_cm7" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm7" type="xml">
            <files mask="freertos_swtimer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_tickless_rgpio_cm7" name="freertos_tickless_rgpio_cm7" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm7">
          <external path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm7" type="xml">
            <files mask="freertos_tickless_rgpio_cm7_v3_14.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.connect.script.debug.mcuxpresso.evkmimxrt1180" name="internal.connect.script" value="RT1180_connect_M33_wake_M7_ITC.scp"/>
          </params>
          <drivers>
            <driver id_refs="BOARD_FLASH_evkmimxrt1180">
              <driverBinary path="core/devices/MIMXRT1189/mcuxpresso" type="binary">
                <files mask="MIMXRT1180_SFDP_FlexSPI1_A_QSPI.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT1189xxxxx" name="MIMXRT1189" version="1.0.0" full_name="MIMXRT1189xxxxx" family="MIMXRT1180" platform="i.MX">
      <description>i.MX RT1180</description>
      <metadataSet>
        <metadata key="compatible_device.pemicro" value="IMXRT1189"/>
        <metadata key="server.APLimit" value="4"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm33_MIMXRT1189xxxxx" name="cm33" fpu="true" type="cm33" boot_role="primary" dsp="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1189xxx8_M33"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_DTC_cm33_MIMXRT1189xxxxx" name="SRAM_DTC_cm33" addr="20000000" size="00020000" type="RAM" access="RW"/>
          <memoryBlock id="M7_ITCM_ALIAS_MIMXRT1189xxxxx" name="M7_ITCM_ALIAS" addr="203c0000" size="00040000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_ITC_cm33_MIMXRT1189xxxxx" name="SRAM_ITC_cm33" addr="0ffe0000" size="00020000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1189xxxx.core_cm33.MIMXRT1189xxxxx" name="misc.options" value="--no-packed --dapstride short --cachelib libahb_xcache.so"/>
            </params>
          </debug_configuration>
          <debug_configuration id_refs="com.nxp.mcuxpresso.core.debug.support.segger.debug com.nxp.mcuxpresso.core.debug.support.segger.release">
            <params>
              <params id="com.nxp.mcuxpresso.segger.reset.core_cm33.MIMXRT1189xxxxx" name="com.nxp.mcuxpresso.segger.reset" value="false;"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <core id="cm7_MIMXRT1189xxxxx" name="cm7" fpu="true" type="cm7" slave_roles="M7SLAVE" boot_role="secondary" dsp="false">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1189xxx8_M7"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_ITC_cm7_MIMXRT1189xxxxx" name="SRAM_ITC_cm7" addr="00000000" size="00040000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_DTC_cm7_MIMXRT1189xxxxx" name="SRAM_DTC_cm7" addr="20000000" size="00040000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1189xxxx.core_cm7.MIMXRT1189xxxxx" name="misc.options" value="--no-packed --dapstride short --cachelib libm7_cache.so"/>
              <params id="internal.core.index.MIMXRT1189xxxx.core_cm7.MIMXRT1189xxxxx" name="internal.core.index" value="2"/>
            </params>
          </debug_configuration>
          <debug_configuration id_refs="com.nxp.mcuxpresso.core.debug.support.segger.debug com.nxp.mcuxpresso.core.debug.support.segger.release">
            <params>
              <params id="com.nxp.mcuxpresso.segger.reset.core_cm7.MIMXRT1189xxxxx" name="com.nxp.mcuxpresso.segger.reset" value="false;"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <memory>
        <memoryBlock id="SRAM_OC1_MIMXRT1189xxxxx" name="SRAM_OC1" addr="20484000" size="0007c000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC2_MIMXRT1189xxxxx" name="SRAM_OC2" addr="20500000" size="00040000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="1536"/>
      <package id="MIMXRT1189CVM8B" name="MIMXRT1189CVM8B"/>
      <package id="MIMXRT1189XVM8B" name="MIMXRT1189XVM8B"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt1180"/>
      </evaluation_boards>
      <toolchainSettings>
        <toolchainSetting id_refs="com.nxp.mcuxpresso">
          <buildSteps>
            <postBuildStep>[ ! -f ../scripts/image_hash_tool.py ] &amp;&amp; : || ( echo "${OsType}" | grep -q win* &amp;&amp; py -3 ../scripts/image_hash_tool.py -a sha512 -x .boot_hdr -x .ARM.exidx -s .boot_hdr -o 0x1030 -l 64 -p 0x00 "${BuildArtifactFileName}" || python3 ../scripts/image_hash_tool.py -a sha512 -x .boot_hdr -x .ARM.exidx -s .boot_hdr -o 0x1030 -l 64 -p 0x00 "${BuildArtifactFileName}" )</postBuildStep>
          </buildSteps>
        </toolchainSetting>
      </toolchainSettings>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT1189xxxxx" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1189xxxxx" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT1189xxxxx" name="internal.connect.script" value="RT1180_connect_M33_wake_M7_ITC.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="utility.xmcd.evkmimxrt1180.MIMXRT1189" name="Utility_evkmimxrt1180_xmcd" brief="Utility evkmimxrt1180_xmcd" version="1.0.0" full_name="Utility evkmimxrt1180_xmcd" category="Device/Misc" user_visible="true" type="other" package_base_path="core/boards/evkmimxrt1180/xmcd" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="hyperram_xmc_auto_detect.bin"/>
        <files mask="semc_sdram_xmc_166MHz_32MB_16bits.bin"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_xmcd_evkmimxrt1180.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.jlinkscript.evkmimxrt1180.MIMXRT1189" name="Utility_evkmimxrt1180_jlinkscript" brief="Utility evkmimxrt1180_jlinkscript" version="1.0.0" full_name="Utility evkmimxrt1180_jlinkscript" category="Device/Misc" user_visible="true" type="other" package_base_path="core/boards/evkmimxrt1180/jlinkscript" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="evkmimxrt1180_cm33.jlinkscript"/>
        <files mask="evkmimxrt1180_cm7.jlinkscript"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_jlinkscript_evkmimxrt1180.cmake" hidden="true"/>
      </source>
    </component>
    <component id="project_template.evkmimxrt1180.MIMXRT1189" name="evkmimxrt1180" brief="Board_project_template evkmimxrt1180" version="1.0.0" full_name="Board_project_template evkmimxrt1180" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/boards/evkmimxrt1180/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1189"/>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT1189"/>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT1189"/>
              <component_dependency value="platform.utilities.assert.MIMXRT1189"/>
              <component_dependency value="component.serial_manager.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT1189"/>
            </all>
          </any_of>
          <component_dependency value="platform.devices.MIMXRT1189_startup.MIMXRT1189"/>
          <component_dependency value="platform.devices.MIMXRT1189_mcux_scripts.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1189"/>
          <component_dependency value="platform.drivers.rgpio.MIMXRT1189"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.misc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1189"/>
          <component_dependency value="platform.drivers.dcdc_soc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1189"/>
          <component_dependency value="platform.drivers.xip_board.evkmimxrt1180.MIMXRT1189"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="pin_mux.h"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="src" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="pin_mux.c"/>
      </source>
      <source relative_path="cm33" project_relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="pin_mux.h"/>
      </source>
      <source relative_path="cm33" project_relative_path="./" type="src" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="pin_mux.c"/>
      </source>
      <source relative_path="project_template" project_relative_path="./" type="c_include">
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="project_template" project_relative_path="./" type="src">
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="BOARD_Project_Template_evkmimxrt1180.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="cm7" project_relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx"/>
        <include_path relative_path="cm33" project_relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_board.evkmimxrt1180.MIMXRT1189" name="xip_board" brief="XIP Board Driver" version="2.0.1" full_name="XIP Board Driver" category="Board Support/SDK Drivers" user_visible="true" type="board_component" package_base_path="core/boards/evkmimxrt1180/xip" project_base_path="xip">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="evkmimxrt1180_flexspi_nor_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="evkmimxrt1180_flexspi_nor_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xip_board_evkmimxrt1180.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.template.MIMXRT1189" name="maestro_framework_template" brief="maestro_framework template" version="1.0.0" full_name="maestro_framework template configuration" category="Audio/Framework" user_visible="false" type="project_template" package_base_path="middleware/maestro" project_base_path="maestro">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="streamer_pcm.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="streamer_pcm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.doc.MIMXRT1189" name="maestro_framework" brief="MCU Maestro Audio Framework Doc" version="1.7.0" full_name="Maestro Audio Framework Middleware Doc" category="Audio/Framework" user_visible="false" type="middleware" package_base_path="middleware/maestro" project_base_path="maestro">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source exclude="true" relative_path="docs" type="doc">
        <files mask="index.html"/>
      </source>
      <source exclude="true" relative_path="docs/src" type="doc">
        <files mask="LVC__Types_8h.html" hidden="true"/>
        <files mask="LVC__Types_8h.js" hidden="true"/>
        <files mask="aacdec_start.html" hidden="true"/>
        <files mask="annotated.html" hidden="true"/>
        <files mask="annotated_dup.js" hidden="true"/>
        <files mask="audio__proc_8c.html" hidden="true"/>
        <files mask="audio__proc_8c.js" hidden="true"/>
        <files mask="audio__proc_8h.html" hidden="true"/>
        <files mask="audio__proc_8h.js" hidden="true"/>
        <files mask="audio__sink_8c.html" hidden="true"/>
        <files mask="audio__sink_8c.js" hidden="true"/>
        <files mask="audio__sink_8h.html" hidden="true"/>
        <files mask="audio__sink_8h.js" hidden="true"/>
        <files mask="audio__sink__pcmrtos_8c.html" hidden="true"/>
        <files mask="audio__sink__pcmrtos_8c.js" hidden="true"/>
        <files mask="audio__sink__pcmrtos_8h.html" hidden="true"/>
        <files mask="audio__sink__pcmrtos_8h.js" hidden="true"/>
        <files mask="audio__src_8c.html" hidden="true"/>
        <files mask="audio__src_8c.js" hidden="true"/>
        <files mask="audio__src_8h.html" hidden="true"/>
        <files mask="audio__src_8h.js" hidden="true"/>
        <files mask="audio__src__pcmrtos_8c.html" hidden="true"/>
        <files mask="audio__src__pcmrtos_8c.js" hidden="true"/>
        <files mask="audio__src__pcmrtos_8h.html" hidden="true"/>
        <files mask="audio__src__pcmrtos_8h.js" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bc_sd.png" hidden="true"/>
        <files mask="cci__codec__type__conversion_8c.html" hidden="true"/>
        <files mask="cci__codec__type__conversion_8c.js" hidden="true"/>
        <files mask="cci__metadata_8h.html" hidden="true"/>
        <files mask="cci__metadata_8h.js" hidden="true"/>
        <files mask="ccidec_8c.html" hidden="true"/>
        <files mask="ccidec_8c.js" hidden="true"/>
        <files mask="ccidec_8h.html" hidden="true"/>
        <files mask="ccidec_8h.js" hidden="true"/>
        <files mask="cei_8h.html" hidden="true"/>
        <files mask="cei_8h.js" hidden="true"/>
        <files mask="cei__enctypes_8h.html" hidden="true"/>
        <files mask="cei__enctypes_8h.js" hidden="true"/>
        <files mask="cei__table_8h.html" hidden="true"/>
        <files mask="cei__table_8h.js" hidden="true"/>
        <files mask="classes.html" hidden="true"/>
        <files mask="clipboard.js" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="codec__interface_8c.html" hidden="true"/>
        <files mask="codec__interface_8c.js" hidden="true"/>
        <files mask="codec__interface_8h.html" hidden="true"/>
        <files mask="codec__interface_8h.js" hidden="true"/>
        <files mask="codec__interface__public__api_8h.html" hidden="true"/>
        <files mask="codec__interface__public__api_8h.js" hidden="true"/>
        <files mask="codec_flow.png" hidden="true"/>
        <files mask="codecextractmetadata_8c.html" hidden="true"/>
        <files mask="codecextractmetadata_8c.js" hidden="true"/>
        <files mask="communication.svg" hidden="true"/>
        <files mask="cookie.js" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="decoder_8c.html" hidden="true"/>
        <files mask="decoder_8c.js" hidden="true"/>
        <files mask="decoder_8h.html" hidden="true"/>
        <files mask="decoder_8h.js" hidden="true"/>
        <files mask="decoder__pads_8c.html" hidden="true"/>
        <files mask="decoder__pads_8c.js" hidden="true"/>
        <files mask="decoder__pads_8h.html" hidden="true"/>
        <files mask="decoder__pads_8h.js" hidden="true"/>
        <files mask="dir_09c368f94a4ceb2a0ab51c686fa3f34a.html" hidden="true"/>
        <files mask="dir_09c368f94a4ceb2a0ab51c686fa3f34a.js" hidden="true"/>
        <files mask="dir_27572bb7135b2aed50a12b695ac102f7.html" hidden="true"/>
        <files mask="dir_3011f417f47a2f1757a119bb2b6678f7.html" hidden="true"/>
        <files mask="dir_31b2f1d6653e3410a2de348edc054f4b.html" hidden="true"/>
        <files mask="dir_6343cdd224fb18bab339c25e250c0ab5.html" hidden="true"/>
        <files mask="dir_6343cdd224fb18bab339c25e250c0ab5.js" hidden="true"/>
        <files mask="dir_72ccead873c9c44a43b71eb584d84baf.html" hidden="true"/>
        <files mask="dir_7d4bffc30d6bb72c004c672b0b15a03f.html" hidden="true"/>
        <files mask="dir_7d4bffc30d6bb72c004c672b0b15a03f.js" hidden="true"/>
        <files mask="dir_7f27e557e2b5ccf3e7af2c250dae6925.html" hidden="true"/>
        <files mask="dir_8da1243e135ad2073cfde7cf1f60b0f9.html" hidden="true"/>
        <files mask="dir_8da1243e135ad2073cfde7cf1f60b0f9.js" hidden="true"/>
        <files mask="dir_a0ca4d96eaffbbc747c3e40a45a7dda3.html" hidden="true"/>
        <files mask="dir_a0ca4d96eaffbbc747c3e40a45a7dda3.js" hidden="true"/>
        <files mask="dir_ac63662da0d688fa8bd4f66397a3bf04.html" hidden="true"/>
        <files mask="dir_ac63662da0d688fa8bd4f66397a3bf04.js" hidden="true"/>
        <files mask="dir_b80bfe80509f7be30c69d6b8307c8ce5.html" hidden="true"/>
        <files mask="dir_b80bfe80509f7be30c69d6b8307c8ce5.js" hidden="true"/>
        <files mask="dir_bb14acadcc9c6e0b0efab3b339a130cb.html" hidden="true"/>
        <files mask="dir_bb14acadcc9c6e0b0efab3b339a130cb.js" hidden="true"/>
        <files mask="dir_be7de2811e7b2903a1c63c530e2329f8.html" hidden="true"/>
        <files mask="dir_be7de2811e7b2903a1c63c530e2329f8.js" hidden="true"/>
        <files mask="dir_bf14883e86cd277860239a84004d696e.html" hidden="true"/>
        <files mask="dir_bf14883e86cd277860239a84004d696e.js" hidden="true"/>
        <files mask="dir_bfccd401955b95cf8c75461437045ac0.html" hidden="true"/>
        <files mask="dir_bfccd401955b95cf8c75461437045ac0.js" hidden="true"/>
        <files mask="dir_c10f813485221bef8c5a72414f9e2bee.html" hidden="true"/>
        <files mask="dir_cdad1f4fa813539d4a2cca747b2f86bd.html" hidden="true"/>
        <files mask="dir_cdad1f4fa813539d4a2cca747b2f86bd.js" hidden="true"/>
        <files mask="dir_e4fd4aec6719dce5076d59c812fc0a62.html" hidden="true"/>
        <files mask="dir_e4fd4aec6719dce5076d59c812fc0a62.js" hidden="true"/>
        <files mask="dir_f5879de724d6c7af5db22be3d4d2d409.html" hidden="true"/>
        <files mask="dir_f5879de724d6c7af5db22be3d4d2d409.js" hidden="true"/>
        <files mask="doc.svg" hidden="true"/>
        <files mask="docd.svg" hidden="true"/>
        <files mask="doxygen.svg" hidden="true"/>
        <files mask="doxygen_crawl.html" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="elements.svg" hidden="true"/>
        <files mask="error_8h.html" hidden="true"/>
        <files mask="error_8h.js" hidden="true"/>
        <files mask="errordefs_8h.html" hidden="true"/>
        <files mask="errordefs_8h.js" hidden="true"/>
        <files mask="file__sink_8c.html" hidden="true"/>
        <files mask="file__sink_8c.js" hidden="true"/>
        <files mask="file__sink_8h.html" hidden="true"/>
        <files mask="file__sink_8h.js" hidden="true"/>
        <files mask="file__src__freertos_8c.html" hidden="true"/>
        <files mask="file__src__freertos_8c.js" hidden="true"/>
        <files mask="file__src__freertos_8h.html" hidden="true"/>
        <files mask="file__src__freertos_8h.js" hidden="true"/>
        <files mask="file__utils_8c.html" hidden="true"/>
        <files mask="file__utils_8c.js" hidden="true"/>
        <files mask="file__utils_8h.html" hidden="true"/>
        <files mask="file__utils_8h.js" hidden="true"/>
        <files mask="files.html" hidden="true"/>
        <files mask="files_dup.js" hidden="true"/>
        <files mask="flacdec_start.html" hidden="true"/>
        <files mask="folderclosed.svg" hidden="true"/>
        <files mask="folderclosedd.svg" hidden="true"/>
        <files mask="folderopen.svg" hidden="true"/>
        <files mask="folderopend.svg" hidden="true"/>
        <files mask="fs_logo.svg" hidden="true"/>
        <files mask="functions.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="functions_dup.js" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="functions_func.html" hidden="true"/>
        <files mask="functions_g.html" hidden="true"/>
        <files mask="functions_h.html" hidden="true"/>
        <files mask="functions_i.html" hidden="true"/>
        <files mask="functions_k.html" hidden="true"/>
        <files mask="functions_l.html" hidden="true"/>
        <files mask="functions_m.html" hidden="true"/>
        <files mask="functions_n.html" hidden="true"/>
        <files mask="functions_o.html" hidden="true"/>
        <files mask="functions_p.html" hidden="true"/>
        <files mask="functions_q.html" hidden="true"/>
        <files mask="functions_r.html" hidden="true"/>
        <files mask="functions_s.html" hidden="true"/>
        <files mask="functions_t.html" hidden="true"/>
        <files mask="functions_u.html" hidden="true"/>
        <files mask="functions_v.html" hidden="true"/>
        <files mask="functions_vars.html" hidden="true"/>
        <files mask="functions_vars.js" hidden="true"/>
        <files mask="functions_vars_b.html" hidden="true"/>
        <files mask="functions_vars_c.html" hidden="true"/>
        <files mask="functions_vars_d.html" hidden="true"/>
        <files mask="functions_vars_e.html" hidden="true"/>
        <files mask="functions_vars_f.html" hidden="true"/>
        <files mask="functions_vars_g.html" hidden="true"/>
        <files mask="functions_vars_h.html" hidden="true"/>
        <files mask="functions_vars_i.html" hidden="true"/>
        <files mask="functions_vars_k.html" hidden="true"/>
        <files mask="functions_vars_l.html" hidden="true"/>
        <files mask="functions_vars_m.html" hidden="true"/>
        <files mask="functions_vars_n.html" hidden="true"/>
        <files mask="functions_vars_o.html" hidden="true"/>
        <files mask="functions_vars_p.html" hidden="true"/>
        <files mask="functions_vars_q.html" hidden="true"/>
        <files mask="functions_vars_r.html" hidden="true"/>
        <files mask="functions_vars_s.html" hidden="true"/>
        <files mask="functions_vars_t.html" hidden="true"/>
        <files mask="functions_vars_u.html" hidden="true"/>
        <files mask="functions_vars_v.html" hidden="true"/>
        <files mask="functions_vars_w.html" hidden="true"/>
        <files mask="functions_vars_y.html" hidden="true"/>
        <files mask="functions_w.html" hidden="true"/>
        <files mask="functions_y.html" hidden="true"/>
        <files mask="general__utils_8c.html" hidden="true"/>
        <files mask="general__utils_8c.js" hidden="true"/>
        <files mask="general__utils_8h.html" hidden="true"/>
        <files mask="general__utils_8h.js" hidden="true"/>
        <files mask="globals.html" hidden="true"/>
        <files mask="globals_a.html" hidden="true"/>
        <files mask="globals_b.html" hidden="true"/>
        <files mask="globals_c.html" hidden="true"/>
        <files mask="globals_d.html" hidden="true"/>
        <files mask="globals_defs.html" hidden="true"/>
        <files mask="globals_defs.js" hidden="true"/>
        <files mask="globals_defs_a.html" hidden="true"/>
        <files mask="globals_defs_b.html" hidden="true"/>
        <files mask="globals_defs_c.html" hidden="true"/>
        <files mask="globals_defs_d.html" hidden="true"/>
        <files mask="globals_defs_e.html" hidden="true"/>
        <files mask="globals_defs_f.html" hidden="true"/>
        <files mask="globals_defs_g.html" hidden="true"/>
        <files mask="globals_defs_i.html" hidden="true"/>
        <files mask="globals_defs_l.html" hidden="true"/>
        <files mask="globals_defs_m.html" hidden="true"/>
        <files mask="globals_defs_n.html" hidden="true"/>
        <files mask="globals_defs_p.html" hidden="true"/>
        <files mask="globals_defs_q.html" hidden="true"/>
        <files mask="globals_defs_r.html" hidden="true"/>
        <files mask="globals_defs_s.html" hidden="true"/>
        <files mask="globals_defs_t.html" hidden="true"/>
        <files mask="globals_defs_v.html" hidden="true"/>
        <files mask="globals_defs_w.html" hidden="true"/>
        <files mask="globals_defs_x.html" hidden="true"/>
        <files mask="globals_defs_y.html" hidden="true"/>
        <files mask="globals_dup.js" hidden="true"/>
        <files mask="globals_e.html" hidden="true"/>
        <files mask="globals_enum.html" hidden="true"/>
        <files mask="globals_eval.html" hidden="true"/>
        <files mask="globals_eval.js" hidden="true"/>
        <files mask="globals_eval_b.html" hidden="true"/>
        <files mask="globals_eval_c.html" hidden="true"/>
        <files mask="globals_eval_d.html" hidden="true"/>
        <files mask="globals_eval_e.html" hidden="true"/>
        <files mask="globals_eval_f.html" hidden="true"/>
        <files mask="globals_eval_i.html" hidden="true"/>
        <files mask="globals_eval_l.html" hidden="true"/>
        <files mask="globals_eval_m.html" hidden="true"/>
        <files mask="globals_eval_p.html" hidden="true"/>
        <files mask="globals_eval_s.html" hidden="true"/>
        <files mask="globals_eval_t.html" hidden="true"/>
        <files mask="globals_eval_v.html" hidden="true"/>
        <files mask="globals_f.html" hidden="true"/>
        <files mask="globals_func.html" hidden="true"/>
        <files mask="globals_func.js" hidden="true"/>
        <files mask="globals_func_a.html" hidden="true"/>
        <files mask="globals_func_c.html" hidden="true"/>
        <files mask="globals_func_d.html" hidden="true"/>
        <files mask="globals_func_e.html" hidden="true"/>
        <files mask="globals_func_f.html" hidden="true"/>
        <files mask="globals_func_g.html" hidden="true"/>
        <files mask="globals_func_i.html" hidden="true"/>
        <files mask="globals_func_l.html" hidden="true"/>
        <files mask="globals_func_m.html" hidden="true"/>
        <files mask="globals_func_n.html" hidden="true"/>
        <files mask="globals_func_o.html" hidden="true"/>
        <files mask="globals_func_p.html" hidden="true"/>
        <files mask="globals_func_q.html" hidden="true"/>
        <files mask="globals_func_r.html" hidden="true"/>
        <files mask="globals_func_s.html" hidden="true"/>
        <files mask="globals_func_u.html" hidden="true"/>
        <files mask="globals_func_v.html" hidden="true"/>
        <files mask="globals_g.html" hidden="true"/>
        <files mask="globals_h.html" hidden="true"/>
        <files mask="globals_i.html" hidden="true"/>
        <files mask="globals_l.html" hidden="true"/>
        <files mask="globals_m.html" hidden="true"/>
        <files mask="globals_n.html" hidden="true"/>
        <files mask="globals_o.html" hidden="true"/>
        <files mask="globals_p.html" hidden="true"/>
        <files mask="globals_q.html" hidden="true"/>
        <files mask="globals_r.html" hidden="true"/>
        <files mask="globals_s.html" hidden="true"/>
        <files mask="globals_t.html" hidden="true"/>
        <files mask="globals_type.html" hidden="true"/>
        <files mask="globals_u.html" hidden="true"/>
        <files mask="globals_v.html" hidden="true"/>
        <files mask="globals_vars.html" hidden="true"/>
        <files mask="globals_w.html" hidden="true"/>
        <files mask="globals_x.html" hidden="true"/>
        <files mask="globals_y.html" hidden="true"/>
        <files mask="group__asi__dffi.html" hidden="true"/>
        <files mask="group__asi__dffi.js" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="index.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="maestro.svg" hidden="true"/>
        <files mask="maestroApp.svg" hidden="true"/>
        <files mask="maestro__logging_8h.html" hidden="true"/>
        <files mask="maestro__logging_8h.js" hidden="true"/>
        <files mask="md_CeiEncoder.html" hidden="true"/>
        <files mask="md_ProgrammersGuide.html" hidden="true"/>
        <files mask="md_maestro__playback.html" hidden="true"/>
        <files mask="md_maestro__record.html" hidden="true"/>
        <files mask="md_maestro__sync.html" hidden="true"/>
        <files mask="md_maestro__usb__mic.html" hidden="true"/>
        <files mask="md_maestro__usb__speaker.html" hidden="true"/>
        <files mask="md_processing__time.html" hidden="true"/>
        <files mask="md_supported__features.html" hidden="true"/>
        <files mask="md_wavdec.html" hidden="true"/>
        <files mask="mem__sink_8c.html" hidden="true"/>
        <files mask="mem__sink_8c.js" hidden="true"/>
        <files mask="mem__sink_8h.html" hidden="true"/>
        <files mask="mem__sink_8h.js" hidden="true"/>
        <files mask="mem__src_8c.html" hidden="true"/>
        <files mask="mem__src_8c.js" hidden="true"/>
        <files mask="mem__src_8h.html" hidden="true"/>
        <files mask="mem__src_8h.js" hidden="true"/>
        <files mask="menu.js" hidden="true"/>
        <files mask="menudata.js" hidden="true"/>
        <files mask="mic_speaker_1ch_elements_without_fileread.svg" hidden="true"/>
        <files mask="mic_speaker_2ch_elements_without_fileread.svg" hidden="true"/>
        <files mask="mic_vit_elements.svg" hidden="true"/>
        <files mask="mic_vs_vit_elements.svg" hidden="true"/>
        <files mask="minus.svg" hidden="true"/>
        <files mask="minusd.svg" hidden="true"/>
        <files mask="mp3_44kHz_with_fileread.svg" hidden="true"/>
        <files mask="mp3_44kHz_without_fileread.svg" hidden="true"/>
        <files mask="mp3_48kHz_with_fileread.svg" hidden="true"/>
        <files mask="mp3_48kHz_without_fileread.svg" hidden="true"/>
        <files mask="mp3dec_start.html" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_fd.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nav_hd.png" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreeindex1.js" hidden="true"/>
        <files mask="navtreeindex2.js" hidden="true"/>
        <files mask="navtreeindex3.js" hidden="true"/>
        <files mask="navtreeindex4.js" hidden="true"/>
        <files mask="navtreeindex5.js" hidden="true"/>
        <files mask="navtreeindex6.js" hidden="true"/>
        <files mask="navtreeindex7.js" hidden="true"/>
        <files mask="navtreeindex8.js" hidden="true"/>
        <files mask="netbuf__src_8c.html" hidden="true"/>
        <files mask="netbuf__src_8c.js" hidden="true"/>
        <files mask="netbuf__src_8h.html" hidden="true"/>
        <files mask="netbuf__src_8h.js" hidden="true"/>
        <files mask="new_stylesheet.css" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="pad_8c.html" hidden="true"/>
        <files mask="pad_8c.js" hidden="true"/>
        <files mask="pad_8h.html" hidden="true"/>
        <files mask="pad_8h.js" hidden="true"/>
        <files mask="pages.html" hidden="true"/>
        <files mask="pipeline_8c.html" hidden="true"/>
        <files mask="pipeline_8c.js" hidden="true"/>
        <files mask="pipeline_8h.html" hidden="true"/>
        <files mask="pipeline_8h.js" hidden="true"/>
        <files mask="playback.svg" hidden="true"/>
        <files mask="playback_streamer2.svg" hidden="true"/>
        <files mask="plus.svg" hidden="true"/>
        <files mask="plusd.svg" hidden="true"/>
        <files mask="record.svg" hidden="true"/>
        <files mask="record_streamer2.svg" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="ringbuffer_8c.html" hidden="true"/>
        <files mask="ringbuffer_8c.js" hidden="true"/>
        <files mask="ringbuffer_8h.html" hidden="true"/>
        <files mask="ringbuffer_8h.js" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="splitbard.png" hidden="true"/>
        <files mask="streamer_8c.html" hidden="true"/>
        <files mask="streamer_8c.js" hidden="true"/>
        <files mask="streamer_8h.html" hidden="true"/>
        <files mask="streamer_8h.js" hidden="true"/>
        <files mask="streamer__api_8h.html" hidden="true"/>
        <files mask="streamer__api_8h.js" hidden="true"/>
        <files mask="streamer__element_8c.html" hidden="true"/>
        <files mask="streamer__element_8c.js" hidden="true"/>
        <files mask="streamer__element_8h.html" hidden="true"/>
        <files mask="streamer__element_8h.js" hidden="true"/>
        <files mask="streamer__element__properties_8h.html" hidden="true"/>
        <files mask="streamer__element__properties_8h.js" hidden="true"/>
        <files mask="streamer__message_8h.html" hidden="true"/>
        <files mask="streamer__message_8h.js" hidden="true"/>
        <files mask="streamer__msg_8c.html" hidden="true"/>
        <files mask="streamer__msg_8c.js" hidden="true"/>
        <files mask="structAUDSRC__SET__NAME__T.html" hidden="true"/>
        <files mask="structAUDSRC__SET__NAME__T.js" hidden="true"/>
        <files mask="structAlbumArt.html" hidden="true"/>
        <files mask="structAlbumArt.js" hidden="true"/>
        <files mask="structAudioPacketHeader.html" hidden="true"/>
        <files mask="structAudioPacketHeader.js" hidden="true"/>
        <files mask="structAudioRefData__t.html" hidden="true"/>
        <files mask="structAudioRefData__t.js" hidden="true"/>
        <files mask="structAudioSinkPadDeviceIOFuncType.html" hidden="true"/>
        <files mask="structAudioSinkPadDeviceIOFuncType.js" hidden="true"/>
        <files mask="structAudioSrcBufferQueue__t.html" hidden="true"/>
        <files mask="structBufferInfo.html" hidden="true"/>
        <files mask="structBufferInfo.js" hidden="true"/>
        <files mask="structCCIDecInfo.html" hidden="true"/>
        <files mask="structCCIDecInfo.js" hidden="true"/>
        <files mask="structCCI__Ctx.html" hidden="true"/>
        <files mask="structCCI__Ctx.js" hidden="true"/>
        <files mask="structCeiBitstreamInfo.html" hidden="true"/>
        <files mask="structCeiBitstreamInfo.js" hidden="true"/>
        <files mask="structCeiEncoderFunctions.html" hidden="true"/>
        <files mask="structCeiEncoderFunctions.js" hidden="true"/>
        <files mask="structCeiOpusConfig.html" hidden="true"/>
        <files mask="structCeiOpusConfig.js" hidden="true"/>
        <files mask="structDecoderHandlersType.html" hidden="true"/>
        <files mask="structDecoderHandlersType.js" hidden="true"/>
        <files mask="structELEMENT__PROPERTY__T.html" hidden="true"/>
        <files mask="structELEMENT__PROPERTY__T.js" hidden="true"/>
        <files mask="structEXT__AUDIOELEMENT__DESC__T.html" hidden="true"/>
        <files mask="structEXT__AUDIOELEMENT__DESC__T.js" hidden="true"/>
        <files mask="structEXT__PROCESS__DESC__T.html" hidden="true"/>
        <files mask="structEXT__PROCESS__DESC__T.js" hidden="true"/>
        <files mask="structEXT__PROCESS__REFDAT__DESC__T.html" hidden="true"/>
        <files mask="structEXT__PROCESS__REFDAT__DESC__T.js" hidden="true"/>
        <files mask="structElementEncoder.html" hidden="true"/>
        <files mask="structElementEncoder.js" hidden="true"/>
        <files mask="structElementInit.html" hidden="true"/>
        <files mask="structElementInit.js" hidden="true"/>
        <files mask="structElementNetbufSrc.html" hidden="true"/>
        <files mask="structElementNetbufSrc.js" hidden="true"/>
        <files mask="structElementPropertyLookup.html" hidden="true"/>
        <files mask="structElementPropertyLookup.js" hidden="true"/>
        <files mask="structElementTypeLookup.html" hidden="true"/>
        <files mask="structElementTypeLookup.js" hidden="true"/>
        <files mask="structFileDump.html" hidden="true"/>
        <files mask="structFileDump.js" hidden="true"/>
        <files mask="structFile__Fs__Rec.html" hidden="true"/>
        <files mask="structFile__Fs__Rec.js" hidden="true"/>
        <files mask="structLVM__BPMModuleStats__st.html" hidden="true"/>
        <files mask="structLVM__BPMModuleStats__st.js" hidden="true"/>
        <files mask="structLVM__ContextTable__st.html" hidden="true"/>
        <files mask="structLVM__ContextTable__st.js" hidden="true"/>
        <files mask="structLVM__MemoryRegion__st.html" hidden="true"/>
        <files mask="structLVM__MemoryRegion__st.js" hidden="true"/>
        <files mask="structLVM__MemoryTable__st.html" hidden="true"/>
        <files mask="structLVM__MemoryTable__st.js" hidden="true"/>
        <files mask="structMEMSRC__SET__BUFFER__T.html" hidden="true"/>
        <files mask="structMEMSRC__SET__BUFFER__T.js" hidden="true"/>
        <files mask="structPCMRtosDeviceInfo.html" hidden="true"/>
        <files mask="structPCMRtosDeviceInfo.js" hidden="true"/>
        <files mask="structPCMSinkDeviceInfo.html" hidden="true"/>
        <files mask="structPCMSinkDeviceInfo.js" hidden="true"/>
        <files mask="structPacketHeader.html" hidden="true"/>
        <files mask="structPacketHeader.js" hidden="true"/>
        <files mask="structPipelineElements.html" hidden="true"/>
        <files mask="structQUEUE__SET__BUFFER__T.html" hidden="true"/>
        <files mask="structQUEUE__SET__BUFFER__T.js" hidden="true"/>
        <files mask="structRawPacketHeader.html" hidden="true"/>
        <files mask="structRawPacketHeader.js" hidden="true"/>
        <files mask="structSET__BUFFER__DESC__T.html" hidden="true"/>
        <files mask="structSET__BUFFER__DESC__T.js" hidden="true"/>
        <files mask="structSSRC__Instance__t.html" hidden="true"/>
        <files mask="structSSRC__Params__t.html" hidden="true"/>
        <files mask="structSTREAMER__CREATE__PARAM.html" hidden="true"/>
        <files mask="structSTREAMER__CREATE__PARAM.js" hidden="true"/>
        <files mask="structSTREAMER__MSG__HANDLER__T.html" hidden="true"/>
        <files mask="structSTREAMER__MSG__HANDLER__T.js" hidden="true"/>
        <files mask="structSTREAMER__MSG__T.html" hidden="true"/>
        <files mask="structSTREAMER__MSG__T.js" hidden="true"/>
        <files mask="structSTREAMER__T.html" hidden="true"/>
        <files mask="structSTREAMER__T.js" hidden="true"/>
        <files mask="structSTRING__DESC__T.html" hidden="true"/>
        <files mask="structSTRING__DESC__T.js" hidden="true"/>
        <files mask="structStreamBuffer.html" hidden="true"/>
        <files mask="structStreamBuffer.js" hidden="true"/>
        <files mask="structStreamEvent.html" hidden="true"/>
        <files mask="structStreamEvent.js" hidden="true"/>
        <files mask="structStreamImageType.html" hidden="true"/>
        <files mask="structStreamImageType.js" hidden="true"/>
        <files mask="structStreamMessage.html" hidden="true"/>
        <files mask="structStreamMessage.js" hidden="true"/>
        <files mask="structStreamQuery.html" hidden="true"/>
        <files mask="structStreamQuery.js" hidden="true"/>
        <files mask="structStreamStringType.html" hidden="true"/>
        <files mask="structStreamStringType.js" hidden="true"/>
        <files mask="structStreamerFileSrcConfig.html" hidden="true"/>
        <files mask="structStreamerFileSrcConfig.js" hidden="true"/>
        <files mask="structTrackInfo.html" hidden="true"/>
        <files mask="structTrackInfo.js" hidden="true"/>
        <files mask="struct__ElementAudioProc.html" hidden="true"/>
        <files mask="struct__ElementAudioProc.js" hidden="true"/>
        <files mask="struct__ElementAudioSink.html" hidden="true"/>
        <files mask="struct__ElementAudioSink.js" hidden="true"/>
        <files mask="struct__ElementAudioSrc.html" hidden="true"/>
        <files mask="struct__ElementAudioSrc.js" hidden="true"/>
        <files mask="struct__ElementDecoder.html" hidden="true"/>
        <files mask="struct__ElementDecoder.js" hidden="true"/>
        <files mask="struct__ElementFileSink.html" hidden="true"/>
        <files mask="struct__ElementFileSink.js" hidden="true"/>
        <files mask="struct__ElementFileSrc.html" hidden="true"/>
        <files mask="struct__ElementFileSrc.js" hidden="true"/>
        <files mask="struct__ElementMemSink.html" hidden="true"/>
        <files mask="struct__ElementMemSink.js" hidden="true"/>
        <files mask="struct__ElementMemSrc.html" hidden="true"/>
        <files mask="struct__ElementMemSrc.js" hidden="true"/>
        <files mask="struct__ElementVitSink.html" hidden="true"/>
        <files mask="struct__ElementVitSink.js" hidden="true"/>
        <files mask="struct__PadSink.html" hidden="true"/>
        <files mask="struct__PadSink.js" hidden="true"/>
        <files mask="struct__PadSrc.html" hidden="true"/>
        <files mask="struct__PadSrc.js" hidden="true"/>
        <files mask="struct__Pipeline.html" hidden="true"/>
        <files mask="struct__Pipeline.js" hidden="true"/>
        <files mask="struct__StreamElement.html" hidden="true"/>
        <files mask="struct__StreamElement.js" hidden="true"/>
        <files mask="struct__StreamPad.html" hidden="true"/>
        <files mask="struct__StreamPad.js" hidden="true"/>
        <files mask="structcodec__interface__function__table__t.html" hidden="true"/>
        <files mask="structcodec__interface__function__table__t.js" hidden="true"/>
        <files mask="structdecoder__callback__FunctionTable__t.html" hidden="true"/>
        <files mask="structdecoder__callback__FunctionTable__t.js" hidden="true"/>
        <files mask="structext__proc__args.html" hidden="true"/>
        <files mask="structext__proc__args.js" hidden="true"/>
        <files mask="structfile__meta__data__t.html" hidden="true"/>
        <files mask="structfile__meta__data__t.js" hidden="true"/>
        <files mask="structringbuf.html" hidden="true"/>
        <files mask="structringbuf.js" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_ad.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_bd.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_hd.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="tab_sd.png" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="test_48khz_16bit_2ch.wav" hidden="true"/>
        <files mask="topics.html" hidden="true"/>
        <files mask="topics.js" hidden="true"/>
        <files mask="unionStreamData.html" hidden="true"/>
        <files mask="unionStreamData.js" hidden="true"/>
        <files mask="vit__sink_8c.html" hidden="true"/>
        <files mask="vit__sink_8c.js" hidden="true"/>
        <files mask="vit__sink_8h.html" hidden="true"/>
        <files mask="vit__sink_8h.js" hidden="true"/>
        <files mask="wav_44kHz.svg" hidden="true"/>
        <files mask="wav_48kHz.svg" hidden="true"/>
      </source>
      <source exclude="true" relative_path="docs/src/search" type="doc">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_10.js" hidden="true"/>
        <files mask="all_11.js" hidden="true"/>
        <files mask="all_12.js" hidden="true"/>
        <files mask="all_13.js" hidden="true"/>
        <files mask="all_14.js" hidden="true"/>
        <files mask="all_15.js" hidden="true"/>
        <files mask="all_16.js" hidden="true"/>
        <files mask="all_17.js" hidden="true"/>
        <files mask="all_18.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="all_b.js" hidden="true"/>
        <files mask="all_c.js" hidden="true"/>
        <files mask="all_d.js" hidden="true"/>
        <files mask="all_e.js" hidden="true"/>
        <files mask="all_f.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="classes_1.js" hidden="true"/>
        <files mask="classes_2.js" hidden="true"/>
        <files mask="classes_3.js" hidden="true"/>
        <files mask="classes_4.js" hidden="true"/>
        <files mask="classes_5.js" hidden="true"/>
        <files mask="classes_6.js" hidden="true"/>
        <files mask="classes_7.js" hidden="true"/>
        <files mask="classes_8.js" hidden="true"/>
        <files mask="classes_9.js" hidden="true"/>
        <files mask="classes_a.js" hidden="true"/>
        <files mask="classes_b.js" hidden="true"/>
        <files mask="classes_c.js" hidden="true"/>
        <files mask="classes_d.js" hidden="true"/>
        <files mask="close.svg" hidden="true"/>
        <files mask="defines_0.js" hidden="true"/>
        <files mask="defines_1.js" hidden="true"/>
        <files mask="defines_10.js" hidden="true"/>
        <files mask="defines_11.js" hidden="true"/>
        <files mask="defines_12.js" hidden="true"/>
        <files mask="defines_13.js" hidden="true"/>
        <files mask="defines_14.js" hidden="true"/>
        <files mask="defines_2.js" hidden="true"/>
        <files mask="defines_3.js" hidden="true"/>
        <files mask="defines_4.js" hidden="true"/>
        <files mask="defines_5.js" hidden="true"/>
        <files mask="defines_6.js" hidden="true"/>
        <files mask="defines_7.js" hidden="true"/>
        <files mask="defines_8.js" hidden="true"/>
        <files mask="defines_9.js" hidden="true"/>
        <files mask="defines_a.js" hidden="true"/>
        <files mask="defines_b.js" hidden="true"/>
        <files mask="defines_c.js" hidden="true"/>
        <files mask="defines_d.js" hidden="true"/>
        <files mask="defines_e.js" hidden="true"/>
        <files mask="defines_f.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="enums_2.js" hidden="true"/>
        <files mask="enums_3.js" hidden="true"/>
        <files mask="enums_4.js" hidden="true"/>
        <files mask="enums_5.js" hidden="true"/>
        <files mask="enums_6.js" hidden="true"/>
        <files mask="enums_7.js" hidden="true"/>
        <files mask="enums_8.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="enumvalues_1.js" hidden="true"/>
        <files mask="enumvalues_2.js" hidden="true"/>
        <files mask="enumvalues_3.js" hidden="true"/>
        <files mask="enumvalues_4.js" hidden="true"/>
        <files mask="enumvalues_5.js" hidden="true"/>
        <files mask="enumvalues_6.js" hidden="true"/>
        <files mask="enumvalues_7.js" hidden="true"/>
        <files mask="enumvalues_8.js" hidden="true"/>
        <files mask="enumvalues_9.js" hidden="true"/>
        <files mask="enumvalues_a.js" hidden="true"/>
        <files mask="enumvalues_b.js" hidden="true"/>
        <files mask="enumvalues_c.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="files_1.js" hidden="true"/>
        <files mask="files_2.js" hidden="true"/>
        <files mask="files_3.js" hidden="true"/>
        <files mask="files_4.js" hidden="true"/>
        <files mask="files_5.js" hidden="true"/>
        <files mask="files_6.js" hidden="true"/>
        <files mask="files_7.js" hidden="true"/>
        <files mask="files_8.js" hidden="true"/>
        <files mask="files_9.js" hidden="true"/>
        <files mask="files_a.js" hidden="true"/>
        <files mask="files_b.js" hidden="true"/>
        <files mask="files_c.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="functions_1.js" hidden="true"/>
        <files mask="functions_10.js" hidden="true"/>
        <files mask="functions_11.js" hidden="true"/>
        <files mask="functions_2.js" hidden="true"/>
        <files mask="functions_3.js" hidden="true"/>
        <files mask="functions_4.js" hidden="true"/>
        <files mask="functions_5.js" hidden="true"/>
        <files mask="functions_6.js" hidden="true"/>
        <files mask="functions_7.js" hidden="true"/>
        <files mask="functions_8.js" hidden="true"/>
        <files mask="functions_9.js" hidden="true"/>
        <files mask="functions_a.js" hidden="true"/>
        <files mask="functions_b.js" hidden="true"/>
        <files mask="functions_c.js" hidden="true"/>
        <files mask="functions_d.js" hidden="true"/>
        <files mask="functions_e.js" hidden="true"/>
        <files mask="functions_f.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="mag.svg" hidden="true"/>
        <files mask="mag_d.svg" hidden="true"/>
        <files mask="mag_sel.svg" hidden="true"/>
        <files mask="mag_seld.svg" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="pages_1.js" hidden="true"/>
        <files mask="pages_2.js" hidden="true"/>
        <files mask="pages_3.js" hidden="true"/>
        <files mask="pages_4.js" hidden="true"/>
        <files mask="pages_5.js" hidden="true"/>
        <files mask="pages_6.js" hidden="true"/>
        <files mask="pages_7.js" hidden="true"/>
        <files mask="pages_8.js" hidden="true"/>
        <files mask="pages_9.js" hidden="true"/>
        <files mask="pages_a.js" hidden="true"/>
        <files mask="pages_b.js" hidden="true"/>
        <files mask="pages_c.js" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="typedefs_1.js" hidden="true"/>
        <files mask="typedefs_2.js" hidden="true"/>
        <files mask="typedefs_3.js" hidden="true"/>
        <files mask="typedefs_4.js" hidden="true"/>
        <files mask="typedefs_5.js" hidden="true"/>
        <files mask="typedefs_6.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_10.js" hidden="true"/>
        <files mask="variables_11.js" hidden="true"/>
        <files mask="variables_12.js" hidden="true"/>
        <files mask="variables_13.js" hidden="true"/>
        <files mask="variables_14.js" hidden="true"/>
        <files mask="variables_15.js" hidden="true"/>
        <files mask="variables_16.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
        <files mask="variables_8.js" hidden="true"/>
        <files mask="variables_9.js" hidden="true"/>
        <files mask="variables_a.js" hidden="true"/>
        <files mask="variables_b.js" hidden="true"/>
        <files mask="variables_c.js" hidden="true"/>
        <files mask="variables_d.js" hidden="true"/>
        <files mask="variables_e.js" hidden="true"/>
        <files mask="variables_f.js" hidden="true"/>
      </source>
      <source exclude="true" relative_path="mcu-audio/ssrc/doc" type="doc">
        <files mask="Synchronous_Sample_Rate_Converter_User_Guide.pdf"/>
      </source>
      <source exclude="true" relative_path="mcu-audio/asrc/doc" type="doc">
        <files mask="UG10087_Asynchronous Sample Rate Converter_UG.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1189_debugger.MIMXRT1189" name="Device MIMXRT1189_debugger" brief="Device MIMXRT1189_debugger" version="1.0.0" full_name="Device MIMXRT1189_debugger" category="Board Support/SDK Project Template" user_visible="true" type="debugger" package_base_path="svd/MIMXRT1189" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="xml" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189_cm33.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189_cm7.xml"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1189" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/misc_utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
        <files mask="fsl_syscall_stub.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="./" type="asm_include" device_cores="cm33_MIMXRT1189xxxxx cm7_MIMXRT1189xxxxx">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MIMXRT1189.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT1189" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/misc_utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MIMXRT1189.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMXRT1189" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" category="Device/SDK Utilities" user_visible="true" type="OS" package_base_path="middleware/bm" project_base_path="middleware/bm">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_baremetal.MIMXRT1189.cmake" hidden="true"/>
      </source>
    </component>
    <component id="tools.MIMXRT1189" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="core/tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
      </source>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT1189" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.9.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="core_cm7.h"/>
        <files mask="cachel1_armv7.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT1189" name="MIMXRT1189" version="1.0.0" package_base_path="core/CMSIS" project_base_path="./">
  <source relative_path="./" type="src">
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_NAND.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_USBD.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_WiFi.c"/>
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="BasicMathFunctionsF16.c"/>
    <files mask="arm_abs_f16.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_abs_f64.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_add_f16.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_add_f64.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_and_u16.c"/>
    <files mask="arm_and_u32.c"/>
    <files mask="arm_and_u8.c"/>
    <files mask="arm_clip_f16.c"/>
    <files mask="arm_clip_f32.c"/>
    <files mask="arm_clip_q15.c"/>
    <files mask="arm_clip_q31.c"/>
    <files mask="arm_clip_q7.c"/>
    <files mask="arm_dot_prod_f16.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_dot_prod_f64.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_mult_f16.c"/>
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_mult_f64.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_negate_f16.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_negate_f64.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_not_u16.c"/>
    <files mask="arm_not_u32.c"/>
    <files mask="arm_not_u8.c"/>
    <files mask="arm_offset_f16.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_offset_f64.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="arm_or_u16.c"/>
    <files mask="arm_or_u32.c"/>
    <files mask="arm_or_u8.c"/>
    <files mask="arm_scale_f16.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_scale_f64.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_scale_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_sub_f16.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_f64.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_xor_u16.c"/>
    <files mask="arm_xor_u32.c"/>
    <files mask="arm_xor_u8.c"/>
    <files mask="BayesFunctions.c"/>
    <files mask="BayesFunctionsF16.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
    <files mask="CommonTables.c"/>
    <files mask="CommonTablesF16.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_common_tables_f16.c"/>
    <files mask="arm_const_structs.c"/>
    <files mask="arm_const_structs_f16.c"/>
    <files mask="arm_mve_tables.c"/>
    <files mask="arm_mve_tables_f16.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="ComplexMathFunctionsF16.c"/>
    <files mask="arm_cmplx_conj_f16.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f16.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_mag_f16.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_mag_f64.c"/>
    <files mask="arm_cmplx_mag_fast_q15.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_mag_squared_f16.c"/>
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_mag_squared_f64.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f16.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="arm_cmplx_mult_cmplx_f64.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f16.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_pid_init_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="DistanceFunctions.c"/>
    <files mask="DistanceFunctionsF16.c"/>
    <files mask="arm_boolean_distance.c"/>
    <files mask="arm_braycurtis_distance_f16.c"/>
    <files mask="arm_braycurtis_distance_f32.c"/>
    <files mask="arm_canberra_distance_f16.c"/>
    <files mask="arm_canberra_distance_f32.c"/>
    <files mask="arm_chebyshev_distance_f16.c"/>
    <files mask="arm_chebyshev_distance_f32.c"/>
    <files mask="arm_chebyshev_distance_f64.c"/>
    <files mask="arm_cityblock_distance_f16.c"/>
    <files mask="arm_cityblock_distance_f32.c"/>
    <files mask="arm_cityblock_distance_f64.c"/>
    <files mask="arm_correlation_distance_f16.c"/>
    <files mask="arm_correlation_distance_f32.c"/>
    <files mask="arm_cosine_distance_f16.c"/>
    <files mask="arm_cosine_distance_f32.c"/>
    <files mask="arm_cosine_distance_f64.c"/>
    <files mask="arm_dice_distance.c"/>
    <files mask="arm_dtw_distance_f32.c"/>
    <files mask="arm_dtw_init_window_q7.c"/>
    <files mask="arm_dtw_path_f32.c"/>
    <files mask="arm_euclidean_distance_f16.c"/>
    <files mask="arm_euclidean_distance_f32.c"/>
    <files mask="arm_euclidean_distance_f64.c"/>
    <files mask="arm_hamming_distance.c"/>
    <files mask="arm_jaccard_distance.c"/>
    <files mask="arm_jensenshannon_distance_f16.c"/>
    <files mask="arm_jensenshannon_distance_f32.c"/>
    <files mask="arm_kulsinski_distance.c"/>
    <files mask="arm_minkowski_distance_f16.c"/>
    <files mask="arm_minkowski_distance_f32.c"/>
    <files mask="arm_rogerstanimoto_distance.c"/>
    <files mask="arm_russellrao_distance.c"/>
    <files mask="arm_sokalmichener_distance.c"/>
    <files mask="arm_sokalsneath_distance.c"/>
    <files mask="arm_yule_distance.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="FastMathFunctionsF16.c"/>
    <files mask="arm_atan2_f16.c"/>
    <files mask="arm_atan2_f32.c"/>
    <files mask="arm_atan2_q15.c"/>
    <files mask="arm_atan2_q31.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_cos_q31.c"/>
    <files mask="arm_divide_q15.c"/>
    <files mask="arm_divide_q31.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_sqrt_q31.c"/>
    <files mask="arm_vexp_f16.c"/>
    <files mask="arm_vexp_f32.c"/>
    <files mask="arm_vexp_f64.c"/>
    <files mask="arm_vinverse_f16.c"/>
    <files mask="arm_vlog_f16.c"/>
    <files mask="arm_vlog_f32.c"/>
    <files mask="arm_vlog_f64.c"/>
    <files mask="arm_vlog_q15.c"/>
    <files mask="arm_vlog_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="FilteringFunctionsF16.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
    <files mask="arm_biquad_cascade_df1_f16.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f16.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f16.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_correlate_f16.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_correlate_f64.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_f16.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_f64.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_fir_init_f16.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_init_f64.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_levinson_durbin_f16.c"/>
    <files mask="arm_levinson_durbin_f32.c"/>
    <files mask="arm_levinson_durbin_q31.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="InterpolationFunctions.c"/>
    <files mask="InterpolationFunctionsF16.c"/>
    <files mask="arm_bilinear_interp_f16.c"/>
    <files mask="arm_bilinear_interp_f32.c"/>
    <files mask="arm_bilinear_interp_q15.c"/>
    <files mask="arm_bilinear_interp_q31.c"/>
    <files mask="arm_bilinear_interp_q7.c"/>
    <files mask="arm_linear_interp_f16.c"/>
    <files mask="arm_linear_interp_f32.c"/>
    <files mask="arm_linear_interp_q15.c"/>
    <files mask="arm_linear_interp_q31.c"/>
    <files mask="arm_linear_interp_q7.c"/>
    <files mask="arm_spline_interp_f32.c"/>
    <files mask="arm_spline_interp_init_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="MatrixFunctionsF16.c"/>
    <files mask="arm_householder_f16.c"/>
    <files mask="arm_householder_f32.c"/>
    <files mask="arm_householder_f64.c"/>
    <files mask="arm_mat_add_f16.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="arm_mat_add_q15.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_cholesky_f16.c"/>
    <files mask="arm_mat_cholesky_f32.c"/>
    <files mask="arm_mat_cholesky_f64.c"/>
    <files mask="arm_mat_cmplx_mult_f16.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_cmplx_trans_f16.c"/>
    <files mask="arm_mat_cmplx_trans_f32.c"/>
    <files mask="arm_mat_cmplx_trans_q15.c"/>
    <files mask="arm_mat_cmplx_trans_q31.c"/>
    <files mask="arm_mat_init_f16.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_init_f64.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_inverse_f16.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_ldlt_f32.c"/>
    <files mask="arm_mat_ldlt_f64.c"/>
    <files mask="arm_mat_mult_f16.c"/>
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_f64.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_mult_opt_q31.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_mult_q7.c"/>
    <files mask="arm_mat_qr_f16.c"/>
    <files mask="arm_mat_qr_f32.c"/>
    <files mask="arm_mat_qr_f64.c"/>
    <files mask="arm_mat_scale_f16.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_solve_lower_triangular_f16.c"/>
    <files mask="arm_mat_solve_lower_triangular_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f16.c"/>
    <files mask="arm_mat_solve_upper_triangular_f32.c"/>
    <files mask="arm_mat_solve_upper_triangular_f64.c"/>
    <files mask="arm_mat_sub_f16.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_sub_f64.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_trans_f16.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_trans_f64.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_trans_q7.c"/>
    <files mask="arm_mat_vec_mult_f16.c"/>
    <files mask="arm_mat_vec_mult_f32.c"/>
    <files mask="arm_mat_vec_mult_q15.c"/>
    <files mask="arm_mat_vec_mult_q31.c"/>
    <files mask="arm_mat_vec_mult_q7.c"/>
    <files mask="QuaternionMathFunctions.c"/>
    <files mask="arm_quaternion2rotation_f32.c"/>
    <files mask="arm_quaternion_conjugate_f32.c"/>
    <files mask="arm_quaternion_inverse_f32.c"/>
    <files mask="arm_quaternion_norm_f32.c"/>
    <files mask="arm_quaternion_normalize_f32.c"/>
    <files mask="arm_quaternion_product_f32.c"/>
    <files mask="arm_quaternion_product_single_f32.c"/>
    <files mask="arm_rotation2quaternion_f32.c"/>
    <files mask="SVMFunctions.c"/>
    <files mask="SVMFunctionsF16.c"/>
    <files mask="arm_svm_linear_init_f16.c"/>
    <files mask="arm_svm_linear_init_f32.c"/>
    <files mask="arm_svm_linear_predict_f16.c"/>
    <files mask="arm_svm_linear_predict_f32.c"/>
    <files mask="arm_svm_polynomial_init_f16.c"/>
    <files mask="arm_svm_polynomial_init_f32.c"/>
    <files mask="arm_svm_polynomial_predict_f16.c"/>
    <files mask="arm_svm_polynomial_predict_f32.c"/>
    <files mask="arm_svm_rbf_init_f16.c"/>
    <files mask="arm_svm_rbf_init_f32.c"/>
    <files mask="arm_svm_rbf_predict_f16.c"/>
    <files mask="arm_svm_rbf_predict_f32.c"/>
    <files mask="arm_svm_sigmoid_init_f16.c"/>
    <files mask="arm_svm_sigmoid_init_f32.c"/>
    <files mask="arm_svm_sigmoid_predict_f16.c"/>
    <files mask="arm_svm_sigmoid_predict_f32.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="StatisticsFunctionsF16.c"/>
    <files mask="arm_absmax_f16.c"/>
    <files mask="arm_absmax_f32.c"/>
    <files mask="arm_absmax_f64.c"/>
    <files mask="arm_absmax_no_idx_f16.c"/>
    <files mask="arm_absmax_no_idx_f32.c"/>
    <files mask="arm_absmax_no_idx_f64.c"/>
    <files mask="arm_absmax_no_idx_q15.c"/>
    <files mask="arm_absmax_no_idx_q31.c"/>
    <files mask="arm_absmax_no_idx_q7.c"/>
    <files mask="arm_absmax_q15.c"/>
    <files mask="arm_absmax_q31.c"/>
    <files mask="arm_absmax_q7.c"/>
    <files mask="arm_absmin_f16.c"/>
    <files mask="arm_absmin_f32.c"/>
    <files mask="arm_absmin_f64.c"/>
    <files mask="arm_absmin_no_idx_f16.c"/>
    <files mask="arm_absmin_no_idx_f32.c"/>
    <files mask="arm_absmin_no_idx_f64.c"/>
    <files mask="arm_absmin_no_idx_q15.c"/>
    <files mask="arm_absmin_no_idx_q31.c"/>
    <files mask="arm_absmin_no_idx_q7.c"/>
    <files mask="arm_absmin_q15.c"/>
    <files mask="arm_absmin_q31.c"/>
    <files mask="arm_absmin_q7.c"/>
    <files mask="arm_accumulate_f16.c"/>
    <files mask="arm_accumulate_f32.c"/>
    <files mask="arm_accumulate_f64.c"/>
    <files mask="arm_entropy_f16.c"/>
    <files mask="arm_entropy_f32.c"/>
    <files mask="arm_entropy_f64.c"/>
    <files mask="arm_kullback_leibler_f16.c"/>
    <files mask="arm_kullback_leibler_f32.c"/>
    <files mask="arm_kullback_leibler_f64.c"/>
    <files mask="arm_logsumexp_dot_prod_f16.c"/>
    <files mask="arm_logsumexp_dot_prod_f32.c"/>
    <files mask="arm_logsumexp_f16.c"/>
    <files mask="arm_logsumexp_f32.c"/>
    <files mask="arm_max_f16.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_max_f64.c"/>
    <files mask="arm_max_no_idx_f16.c"/>
    <files mask="arm_max_no_idx_f32.c"/>
    <files mask="arm_max_no_idx_f64.c"/>
    <files mask="arm_max_no_idx_q15.c"/>
    <files mask="arm_max_no_idx_q31.c"/>
    <files mask="arm_max_no_idx_q7.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_mean_f16.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_mean_f64.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_min_f16.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_min_f64.c"/>
    <files mask="arm_min_no_idx_f16.c"/>
    <files mask="arm_min_no_idx_f32.c"/>
    <files mask="arm_min_no_idx_f64.c"/>
    <files mask="arm_min_no_idx_q15.c"/>
    <files mask="arm_min_no_idx_q31.c"/>
    <files mask="arm_min_no_idx_q7.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_mse_f16.c"/>
    <files mask="arm_mse_f32.c"/>
    <files mask="arm_mse_f64.c"/>
    <files mask="arm_mse_q15.c"/>
    <files mask="arm_mse_q31.c"/>
    <files mask="arm_mse_q7.c"/>
    <files mask="arm_power_f16.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_power_f64.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_rms_f16.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_std_f16.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_std_f64.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_var_f16.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_var_f64.c"/>
    <files mask="arm_var_q15.c"/>
    <files mask="arm_var_q31.c"/>
    <files mask="SupportFunctions.c"/>
    <files mask="SupportFunctionsF16.c"/>
    <files mask="arm_barycenter_f16.c"/>
    <files mask="arm_barycenter_f32.c"/>
    <files mask="arm_bitonic_sort_f32.c"/>
    <files mask="arm_bubble_sort_f32.c"/>
    <files mask="arm_copy_f16.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_copy_f64.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_f16_to_f64.c"/>
    <files mask="arm_f16_to_float.c"/>
    <files mask="arm_f16_to_q15.c"/>
    <files mask="arm_f64_to_f16.c"/>
    <files mask="arm_f64_to_float.c"/>
    <files mask="arm_f64_to_q15.c"/>
    <files mask="arm_f64_to_q31.c"/>
    <files mask="arm_f64_to_q7.c"/>
    <files mask="arm_fill_f16.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_fill_f64.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_float_to_f16.c"/>
    <files mask="arm_float_to_f64.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_float_to_q31.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_heap_sort_f32.c"/>
    <files mask="arm_insertion_sort_f32.c"/>
    <files mask="arm_merge_sort_f32.c"/>
    <files mask="arm_merge_sort_init_f32.c"/>
    <files mask="arm_q15_to_f16.c"/>
    <files mask="arm_q15_to_f64.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_q31_to_f64.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_q7_to_f64.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_quick_sort_f32.c"/>
    <files mask="arm_selection_sort_f32.c"/>
    <files mask="arm_sort_f32.c"/>
    <files mask="arm_sort_init_f32.c"/>
    <files mask="arm_weighted_sum_f16.c"/>
    <files mask="arm_weighted_sum_f32.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="TransformFunctionsF16.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_bitreversal_f16.c"/>
    <files mask="arm_cfft_f16.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_cfft_f64.c"/>
    <files mask="arm_cfft_init_f16.c"/>
    <files mask="arm_cfft_init_f32.c"/>
    <files mask="arm_cfft_init_f64.c"/>
    <files mask="arm_cfft_init_q15.c"/>
    <files mask="arm_cfft_init_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_radix2_f16.c"/>
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_cfft_radix2_init_f16.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_cfft_radix4_f16.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_cfft_radix4_init_f16.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_radix8_f16.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_mfcc_f16.c"/>
    <files mask="arm_mfcc_f32.c"/>
    <files mask="arm_mfcc_init_f16.c"/>
    <files mask="arm_mfcc_init_f32.c"/>
    <files mask="arm_mfcc_init_q15.c"/>
    <files mask="arm_mfcc_init_q31.c"/>
    <files mask="arm_mfcc_q15.c"/>
    <files mask="arm_mfcc_q31.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_rfft_fast_f16.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_rfft_fast_f64.c"/>
    <files mask="arm_rfft_fast_init_f16.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_rfft_fast_init_f64.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="WindowFunctions.c"/>
    <files mask="arm_bartlett_f32.c"/>
    <files mask="arm_bartlett_f64.c"/>
    <files mask="arm_blackman_harris_92db_f32.c"/>
    <files mask="arm_blackman_harris_92db_f64.c"/>
    <files mask="arm_hamming_f32.c"/>
    <files mask="arm_hamming_f64.c"/>
    <files mask="arm_hanning_f32.c"/>
    <files mask="arm_hanning_f64.c"/>
    <files mask="arm_hft116d_f32.c"/>
    <files mask="arm_hft116d_f64.c"/>
    <files mask="arm_hft144d_f32.c"/>
    <files mask="arm_hft144d_f64.c"/>
    <files mask="arm_hft169d_f32.c"/>
    <files mask="arm_hft169d_f64.c"/>
    <files mask="arm_hft196d_f32.c"/>
    <files mask="arm_hft196d_f64.c"/>
    <files mask="arm_hft223d_f32.c"/>
    <files mask="arm_hft223d_f64.c"/>
    <files mask="arm_hft248d_f32.c"/>
    <files mask="arm_hft248d_f64.c"/>
    <files mask="arm_hft90d_f32.c"/>
    <files mask="arm_hft90d_f64.c"/>
    <files mask="arm_hft95_f32.c"/>
    <files mask="arm_hft95_f64.c"/>
    <files mask="arm_nuttall3_f32.c"/>
    <files mask="arm_nuttall3_f64.c"/>
    <files mask="arm_nuttall3a_f32.c"/>
    <files mask="arm_nuttall3a_f64.c"/>
    <files mask="arm_nuttall3b_f32.c"/>
    <files mask="arm_nuttall3b_f64.c"/>
    <files mask="arm_nuttall4_f32.c"/>
    <files mask="arm_nuttall4_f64.c"/>
    <files mask="arm_nuttall4a_f32.c"/>
    <files mask="arm_nuttall4a_f64.c"/>
    <files mask="arm_nuttall4b_f32.c"/>
    <files mask="arm_nuttall4b_f64.c"/>
    <files mask="arm_nuttall4c_f32.c"/>
    <files mask="arm_nuttall4c_f64.c"/>
    <files mask="arm_welch_f32.c"/>
    <files mask="arm_welch_f64.c"/>
  </source>
  <source relative_path="./" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="cmsis_vio.h"/>
    <files mask="arm_boolean_distance_template.h"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="cmsis_vio.scvd"/>
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
    <files mask="CMSIS_v3.yml"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
</component>-->
    <component id="CMSIS_DSP_Include.MIMXRT1189" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.15.0" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="core/CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT1189" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.15.0" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="core/CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_sum_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_sum_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT1189" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_USART.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT1189" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_CAN.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT1189" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT1189" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_ETH_MAC.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT1189" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_ETH_PHY.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT1189" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_Flash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT1189" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_I2C.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT1189" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_MCI.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT1189" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_NAND.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT1189" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_SAI.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT1189" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_SPI.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT1189" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_USBD.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT1189" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_USBH.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT1189" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="DriverTemplates" template="true" type="src">
        <files mask="Driver_WiFi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT1189" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT1189" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.edgelock_firmware.MIMXRT1189" name="edgelock_firmware" brief="i.MX Sentinel firmware" version="0.1.1" full_name="Edgelock Firmware" category="Board Support/SDK Project Template" user_visible="true" type="software_component" package_base_path="core/firmware/edgelock" project_base_path="firmware/edgelock">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="mxrt1180b0-1c00-ahab-container.img"/>
        <files mask="mxrt1180b0-ahab-container.img"/>
        <files mask="mxrt1180b0alt-1c00-ahab-container.img"/>
        <files mask="mxrt1180b0alt-ahab-container.img"/>
        <files mask="mxrt1180b0el2goprov-1c00-ahab-container.img"/>
        <files mask="mxrt1180b0el2goprov-ahab-container.img"/>
        <files mask="mxrt1180b0oemprov-1c00-ahab-container.img"/>
        <files mask="mxrt1180b0oemprov-ahab-container.img"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="Readme_rt1180.md"/>
        <files mask="SCR.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_edgelock_firmware.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT1189" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.template.MIMXRT1189" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="false" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template/ARM_CM33_3_priority_bits" project_relative_path="../../source" config="true" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM4F_4_priority_bits" project_relative_path="../../source" config="true" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" project_relative_path="../../source" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
        <include_path relative_path="template/ARM_CM4F_4_priority_bits" project_relative_path="../../source" type="c_include" device_cores="cm7_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT1189" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="core/components/wifi_bt_module/template" project_base_path="wifi/template">
      <defines>
        <define name="SDIO_ENABLED" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT1189" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.USB.MIMXRT1189" name="USB" brief="Docs usb" version="1.0.0" full_name="Docs usb" category="docs/USB" user_visible="true" type="documentation" package_base_path="middleware/usb/docs" project_base_path="USB">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source condition="middleware.usb.host.stack.MIMXRT1189 middleware.usb.device.controller.driver.MIMXRT1189" relative_path="./" type="doc">
        <files mask="MCUXpresso SDK USB Stack User's Guide.pdf"/>
      </source>
      <source condition="middleware.usb.host.stack.MIMXRT1189" relative_path="./" type="doc">
        <files mask="MCUXpresso SDK USB Stack Host Reference Manual.pdf"/>
        <files mask="MCUXpresso SDK USB Stack Composite Host User's Guide.pdf"/>
      </source>
      <source condition="middleware.usb.device.controller.driver.MIMXRT1189" relative_path="./" type="doc">
        <files mask="MCUXpresso SDK USB Stack Device Reference Manual.pdf"/>
        <files mask="MCUXpresso SDK USB Stack Composite Device User's Guide.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="Enable More USB Examples on M4 Core for RT1170 or M7 Core for RT1180.pdf"/>
      </source>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT1189" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.10.1" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="output/npw/dcd_config/phydcd" project_relative_path="generated" config="true" type="c_include">
        <files mask="usb_phydcd_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phydcd_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/dcd_config/phydcd" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT1189" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.10.1" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="output/npw/dcd_config/hsdcd" project_relative_path="generated" config="true" type="c_include">
        <files mask="usb_hsdcd_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/dcd_config/hsdcd" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1189" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT1189" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT1189" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT1189" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.MIMXRT1189" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source condition="middleware.baremetal.MIMXRT1189" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.MIMXRT1189" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.xos.MIMXRT1189" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <defines>
        <define name="FSL_RTOS_XOS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/xos" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="env/xos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/xos" project_relative_path="include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/xos" project_relative_path="include/environment/xos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.azurertos.MIMXRT1189" name="rpmsg_lite" brief="RPMsg-Lite Azure RTOS environment sources" version="5.1.2" full_name="RPMsg-Lite Azure RTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <defines>
        <define name="FSL_RTOS_THREADX" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/threadx" project_relative_path="include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_azurertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/threadx" project_relative_path="include/environment/threadx" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.MIMXRT1189" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mmcau.mmcau_files.MIMXRT1189" name="mmcau" brief="MMCAU security function library source files" version="2.0.4" full_name="Kinetis MMCAU security function library source files" category="MMCAU Security/MMCAU library" user_visible="false" type="middleware" package_base_path="core/middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="README.txt"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="other" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="cau2_defines.hdr"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="asm_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="mmcau_aes_functions.s"/>
        <files mask="mmcau_des_functions.s"/>
        <files mask="mmcau_md5_functions.s"/>
        <files mask="mmcau_sha1_functions.s"/>
        <files mask="mmcau_sha256_functions.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_mmcau_files.cmake" hidden="true"/>
      </source>
    </component>
    <!--<component id="middleware.mmcau.unused_files.MIMXRT1189" name="MMCAU_unused_files" version="2.0.4" package_base_path="core/middleware/mmcau" project_base_path="mmcau">
  <source exclude="true" relative_path="./" type="other">
    <files mask="fsl_mmcau.dox" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.MIMXRT1189" name="mcuboot" brief="mcuboot" version="2.0.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="other">
        <files mask="LICENSE" hidden="true"/>
        <files mask="NOTICE" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot.cmake" hidden="true"/>
      </source>
    </component>
    <!--<component id="middleware.mcuboot.docs.MIMXRT1189" name="mcuboot_docs" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot"/>-->
    <!--<component id="middleware.mcuboot.scripts.MIMXRT1189" name="mcuboot_scripts" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="./" type="script">
    <files mask="assemble.py"/>
    <files mask="flash.sh"/>
    <files mask="gdb-boot.sh"/>
    <files mask="imgtool.py"/>
    <files mask="jgdb.sh"/>
    <files mask="jl.sh"/>
    <files mask="setup.py"/>
    <files mask="__init__.py"/>
    <files mask="boot_record.py"/>
    <files mask="dumpinfo.py"/>
    <files mask="image.py"/>
    <files mask="main.py"/>
    <files mask="version.py"/>
    <files mask="__init__.py"/>
    <files mask="ecdsa.py"/>
    <files mask="ecdsa_test.py"/>
    <files mask="ed25519.py"/>
    <files mask="ed25519_test.py"/>
    <files mask="general.py"/>
    <files mask="privatebytes.py"/>
    <files mask="rsa.py"/>
    <files mask="rsa_test.py"/>
    <files mask="x25519.py"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="imgtool.nix"/>
    <files mask="mcubin.bt"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="requirements.txt"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.tinycrypt.MIMXRT1189" name="mcuboot_tinycrypt" brief="TinyCrypt fork in MCUBoot repository" version="0.2.8" full_name="mcuboot_tinycrypt_fork" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/tinycrypt/lib" project_base_path="tinycrypt">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_tinycrypt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.encrypted_xip.MIMXRT1189" name="mcuboot_encrypted_xip" brief="Encrypted XIP abstraction for MCUBoot" version="1.0.0" full_name="mcuboot_encrypted_xip" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/nxp_encrypted_xip" project_base_path="encrypted_xip">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="mcuboot_enc_support.h"/>
        <files mask="platform_enc_common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="mcuboot_enc_support.c"/>
        <files mask="platform_enc_bee.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="mcuboot_encrypted_xip.md"/>
      </source>
      <source relative_path="enc_xip_images" type="image">
        <files mask="bee_metadata.jpg"/>
        <files mask="bee_rom_layout.jpg"/>
        <files mask="device_fleet_graph.jpg"/>
        <files mask="general_metadata.jpg"/>
        <files mask="keys_scheme.jpg"/>
        <files mask="overwrite_only.jpg"/>
        <files mask="overwrite_only_flow.jpg"/>
        <files mask="three_slot.jpg"/>
        <files mask="three_slot_flow.jpg"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_encrypted_xip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.mbedtls-asn1.MIMXRT1189" name="mcuboot_mbedtls_asn1" brief="MCUBoot's subset of MbedTLS for ASN.1 parsing" version="2.0.0" full_name="mcuboot_mbedtls-asn1" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/mbedtls-asn1" project_base_path="mbedtls-asn1">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="check_config.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecp.h"/>
        <files mask="error.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="oid.h"/>
        <files mask="pk.h"/>
        <files mask="platform.h"/>
        <files mask="platform_util.h"/>
        <files mask="private_access.h"/>
        <files mask="rsa.h"/>
        <files mask="threading.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="asn1parse.c"/>
        <files mask="platform_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_mbedtls-asn1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.unused_files.MIMXRT1189" name="mcuboot_unused_files" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="./" type="other">
    <files mask=".gitignore"/>
    <files mask=".gitmodules"/>
    <files mask=".mbedignore"/>
    <files mask=".travis.yml-disabled"/>
    <files mask="CODE_OF_CONDUCT.md"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
    <files mask="NOTICE"/>
    <files mask="README.md"/>
    <files mask="enc-aes128kw.b64"/>
    <files mask="enc-aes256kw.b64"/>
    <files mask="enc-ec256-priv.pem"/>
    <files mask="enc-ec256-pub.pem"/>
    <files mask="enc-rsa2048-priv.pem"/>
    <files mask="enc-rsa2048-pub.pem"/>
    <files mask="enc-x25519-priv.pem"/>
    <files mask="enc-x25519-pub.pem"/>
    <files mask="go.mod"/>
    <files mask="project.yml"/>
    <files mask="repository.yml"/>
    <files mask="root-ec-p256-pkcs8.pem"/>
    <files mask="root-ec-p256.pem"/>
    <files mask="root-ec-p384-pkcs8.pem"/>
    <files mask="root-ec-p384.pem"/>
    <files mask="root-ed25519.pem"/>
    <files mask="root-rsa-2048.pem"/>
    <files mask="root-rsa-3072.pem"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
    <files mask="SW-Content-Register.txt"/>
  </source>
</component>-->
    <component id="component.psa_crypto_driver.osal.MIMXRT1189" name="psa_crypto_driver osal" brief="OS Abstraction Layer for PSA crypto driver" version="1.0.0" full_name="PSA crypto driver osal layer" category="psa_crypto_driver/psa_crypto_driver_osal" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="osal" type="c_include">
        <files mask="osal_mutex.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.mbedtls_thread_alt.MIMXRT1189" name="psa_crypto_driver mbedtls_threading_alt" brief="Threading Alt implementation for mbedtls layer via PSA crypto driver" version="1.0.0" full_name="PSA crypto driver threading alt layer for mbedtls threading based" category="psa_crypto_driver/psa_dri_mbed_thrd_alt" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="mbedtls_thread_alt" type="src">
        <files mask="threading_alt.c"/>
      </source>
      <source relative_path="mbedtls_thread_alt" type="c_include">
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_mbedtls_thread_alt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mbedtls_thread_alt" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.rw61x.MIMXRT1189" name="psa_crypto_driver els_pkc_oracle_rw61x" brief="Key Recipes for rw61x for els_pkc" version="1.0.0" full_name="Key Recipes for rw61x for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc_oracle" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="els_pkc/oracle/platforms/rw61x" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle_rw61x.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/platforms/rw61x" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.mcxn.MIMXRT1189" name="psa_crypto_driver els_pkc_oracle_mxcn" brief="Key Recipes for mcxn for els_pkc" version="1.0.0" full_name="Key Recipes for mcxn for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc_oracle" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="els_pkc/oracle/platforms/mcxn" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes.h"/>
      </source>
      <source relative_path="els_pkc/oracle/platforms/mcxn" type="src">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle_mcxn.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/platforms/mcxn" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.common.MIMXRT1189" name="psa_crypto_driver els_pkc_common" brief="Common files of PSA crypto driver for els_pkc" version="1.0.0" full_name="Common files of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc_common" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="els_pkc/include/common" type="c_include">
        <files mask="mcux_psa_els_pkc_common_init.h"/>
        <files mask="mcux_psa_els_pkc_entropy.h"/>
      </source>
      <source relative_path="els_pkc/src/common" type="src">
        <files mask="mcux_psa_els_pkc_common_init.c"/>
        <files mask="mcux_psa_els_pkc_entropy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/common" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.transparent.MIMXRT1189" name="psa_crypto_driver els_pkc_transparent" brief="Transparent part of PSA crypto driver for els_pkc" version="1.0.0" full_name="Transparent part of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypt_dri_els_pkc_trans" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="els_pkc/include/transparent" type="c_include">
        <files mask="mcux_psa_els_pkc_aead.h"/>
        <files mask="mcux_psa_els_pkc_asymmetric_signature.h"/>
        <files mask="mcux_psa_els_pkc_cipher.h"/>
        <files mask="mcux_psa_els_pkc_hash.h"/>
        <files mask="mcux_psa_els_pkc_init.h"/>
        <files mask="mcux_psa_els_pkc_key_generation.h"/>
        <files mask="mcux_psa_els_pkc_mac.h"/>
      </source>
      <source relative_path="els_pkc/src/transparent" type="src">
        <files mask="mcux_psa_els_pkc_aead.c"/>
        <files mask="mcux_psa_els_pkc_asymmetric_signature.c"/>
        <files mask="mcux_psa_els_pkc_cipher.c"/>
        <files mask="mcux_psa_els_pkc_hash.c"/>
        <files mask="mcux_psa_els_pkc_init.c"/>
        <files mask="mcux_psa_els_pkc_key_generation.c"/>
        <files mask="mcux_psa_els_pkc_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_transparent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/transparent" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.opaque.MIMXRT1189" name="psa_crypto_driver els_pkc_opaque" brief="Opaque part of PSA crypto driver for els_pkc" version="1.0.0" full_name="Opaque part of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_dri_els_pkc_opaque" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="els_pkc/include/opaque" type="c_include">
        <files mask="mcux_psa_els_pkc_opaque_aead.h"/>
        <files mask="mcux_psa_els_pkc_opaque_asymmetric_signature.h"/>
        <files mask="mcux_psa_els_pkc_opaque_cipher.h"/>
        <files mask="mcux_psa_els_pkc_opaque_init.h"/>
        <files mask="mcux_psa_els_pkc_opaque_key_generation.h"/>
        <files mask="mcux_psa_els_pkc_opaque_mac.h"/>
      </source>
      <source relative_path="els_pkc/src/opaque" type="src">
        <files mask="mcux_psa_els_pkc_opaque_aead.c"/>
        <files mask="mcux_psa_els_pkc_opaque_asymmetric_signature.c"/>
        <files mask="mcux_psa_els_pkc_opaque_cipher.c"/>
        <files mask="mcux_psa_els_pkc_opaque_init.c"/>
        <files mask="mcux_psa_els_pkc_opaque_key_generation.c"/>
        <files mask="mcux_psa_els_pkc_opaque_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_opaque.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/opaque" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s200.common.MIMXRT1189" name="psa_crypto_driver_ele_s200_common" brief="Common files of PSA crypto driver for ele_s200" version="1.0.0" full_name="Common files of PSA crypto driver for ele_s200" category="psa_crypto_driver/psa_crypto_dri_ele_s200_common" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="ele_s200/include/common" type="c_include">
        <files mask="mcux_psa_s2xx_common_init.h"/>
        <files mask="mcux_psa_s2xx_entropy.h"/>
      </source>
      <source relative_path="ele_s200/src/common" type="src">
        <files mask="mcux_psa_s2xx_common_init.c"/>
        <files mask="mcux_psa_s2xx_entropy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s200_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s200/include/common" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s200.transparent.MIMXRT1189" name="psa_crypto_driver ele_s200_transparent" brief="Transparent part of PSA crypto driver for ele_s200" version="1.0.0" full_name="Transparent part of PSA crypto driver for ele_s200" category="psa_crypto_driver/psa_crypto_dri_ele_s200_trans" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="ele_s200/include/transparent" type="c_include">
        <files mask="mcux_psa_s2xx_aead.h"/>
        <files mask="mcux_psa_s2xx_cipher.h"/>
        <files mask="mcux_psa_s2xx_hash.h"/>
        <files mask="mcux_psa_s2xx_init.h"/>
        <files mask="mcux_psa_s2xx_mac.h"/>
      </source>
      <source relative_path="ele_s200/src/transparent" type="src">
        <files mask="mcux_psa_s2xx_aead.c"/>
        <files mask="mcux_psa_s2xx_cipher.c"/>
        <files mask="mcux_psa_s2xx_hash.c"/>
        <files mask="mcux_psa_s2xx_init.c"/>
        <files mask="mcux_psa_s2xx_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s200_transparent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s200/include/transparent" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="container.component.psa_crypto_driver.unused_files.MIMXRT1189" name="unused_files" version="1.0.0" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.template.MIMXRT1189" name="mbedtls_template" brief="mbedTLS Template" version="2.28.8" full_name="mbedTLS Template" category="Security/mbedTLS library" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="port/ksdk" config="true" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.els_pkc.config.MIMXRT1189" name="els_pkc_config" brief="els_pkc config" version="2.28.8" full_name="els_pkc config" category="Security/mbedTLS library" user_visible="false" type="software_component" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;els_pkc_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="port/pkc" config="true" type="c_include">
        <files mask="els_pkc_mbedtls_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_els_pkc_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pkc" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="container.middleware.mbedtls.unused_files.MIMXRT1189" name="unused_files" version="2.28.8" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
  <source exclude="true" relative_path="./" type="other">
    <files mask="issue_template.md" hidden="true"/>
    <files mask="pull_request_template.md" hidden="true"/>
    <files mask="00README.md" hidden="true"/>
    <files mask="index.rst" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
    <files mask="mbedtls.doxyfile" hidden="true"/>
    <files mask=".gitignore" hidden="true"/>
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="mbedcrypto.pc.in" hidden="true"/>
    <files mask="mbedtls.pc.in" hidden="true"/>
    <files mask="mbedx509.pc.in" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
    <files mask="rename.pl" hidden="true"/>
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2010-app-template.vcxproj" hidden="true"/>
    <files mask="vs2010-main-template.vcxproj" hidden="true"/>
    <files mask="vs2010-sln-template.sln" hidden="true"/>
    <files mask="vs6-app-template.dsp" hidden="true"/>
    <files mask="vs6-main-template.dsp" hidden="true"/>
    <files mask="vs6-workspace-template.dsw" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="Jenkinsfile" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
    <files mask="Readme" hidden="true"/>
    <files mask="Readme" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_arc4.data" hidden="true"/>
    <files mask="test_suite_arc4.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_blowfish.data" hidden="true"/>
    <files mask="test_suite_blowfish.function" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.arc4.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
    <files mask="test_suite_xtea.data" hidden="true"/>
    <files mask="test_suite_xtea.function" hidden="true"/>
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="gen_random_havege.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="add_mbedtls_v2.yml" hidden="true"/>
    <files mask="add_mbedtls_v3.yml" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="README.txt" hidden="true"/>
    <files mask="requirements.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
    <files mask="rename-1.3-2.0.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ChangeLogKSDK.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
    <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-mini-tls1_1.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
    <files mask="common.h" hidden="true"/>
    <files mask="ssl_test_lib.h" hidden="true"/>
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="conf.py" hidden="true"/>
    <files mask="JoinPaths.cmake" hidden="true"/>
    <files mask="demo_common.sh" hidden="true"/>
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
    <files mask="pre-commit.sh" hidden="true"/>
    <files mask="pre-push.sh" hidden="true"/>
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="src">
    <files mask="wince_main.c" hidden="true"/>
    <files mask="crypt_and_hash.c" hidden="true"/>
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
    <files mask="gen_random_havege.c" hidden="true"/>
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.tests.MIMXRT1189" name="mbedtls_tests" brief="mbedTLS test suite" version="2.28.8" full_name="MbedTLS open source Crypto library" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="random.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="arguments.h"/>
        <files mask="asn1_helpers.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.3rdparty.MIMXRT1189" name="mbedtls_3rdparty" brief="mbedTLS 3rdparty code" version="2.28.8" full_name="MbedTLS open source Crypto library 3rdparty" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="3rdparty/everest" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="everest.h"/>
        <files mask="kremlib.h"/>
        <files mask="x25519.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlib" type="c_include">
        <files mask="FStar_UInt128.h"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin" type="c_include">
        <files mask="c_endianness.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include">
        <files mask="builtin.h"/>
        <files mask="callconv.h"/>
        <files mask="compat.h"/>
        <files mask="debug.h"/>
        <files mask="target.h"/>
        <files mask="types.h"/>
        <files mask="wasmsupport.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/vs2010" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="inttypes.h"/>
        <files mask="stdbool.h"/>
      </source>
      <source relative_path="3rdparty/everest/library" type="src">
        <files mask="Hacl_Curve25519.c"/>
        <files mask="Hacl_Curve25519_joined.c"/>
        <files mask="everest.c"/>
        <files mask="x25519.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/kremlib" type="src">
        <files mask="FStar_UInt128_extracted.c"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/legacy" type="src">
        <files mask="Hacl_Curve25519.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_3rdparty.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="3rdparty/everest/include" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT1189" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="1" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT1189" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="1" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMXRT1189" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="./" type="other">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
    <files mask="ssi.shtml" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
    <files mask="init.h.cmake.in" hidden="true"/>
    <files mask="FILES" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="sockets_stresstest.h" hidden="true"/>
    <files mask="test_sockets.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
    <files mask="test_dhcp.h" hidden="true"/>
    <files mask="test_dhcp6.h" hidden="true"/>
    <files mask="test_etharp.h" hidden="true"/>
    <files mask="test_ip4.h" hidden="true"/>
    <files mask="test_ip6.h" hidden="true"/>
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="test_mdns.h" hidden="true"/>
    <files mask="test_mqtt.h" hidden="true"/>
    <files mask="test_pppos.h" hidden="true"/>
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
    <files mask="test_udp.h" hidden="true"/>
    <files mask="dhcp_extra_opts.h" hidden="true"/>
    <files mask="ip6_route_table.h" hidden="true"/>
    <files mask="dnssd.h" hidden="true"/>
    <files mask="tcp_isn.h" hidden="true"/>
    <files mask="tcp_md5.h" hidden="true"/>
    <files mask="chargen.h" hidden="true"/>
    <files mask="httpserver-netconn.h" hidden="true"/>
    <files mask="netio.h" hidden="true"/>
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
    <files mask="shell.h" hidden="true"/>
    <files mask="socket_examples.h" hidden="true"/>
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
    <files mask="cgi_example.h" hidden="true"/>
    <files mask="fs_example.h" hidden="true"/>
    <files mask="genfiles_example.h" hidden="true"/>
    <files mask="https_example.h" hidden="true"/>
    <files mask="ssi_example.h" hidden="true"/>
    <files mask="lwiperf_example.h" hidden="true"/>
    <files mask="mdns_example.h" hidden="true"/>
    <files mask="mqtt_example.h" hidden="true"/>
    <files mask="pppos_example.h" hidden="true"/>
    <files mask="snmp_example.h" hidden="true"/>
    <files mask="private_mib.h" hidden="true"/>
    <files mask="snmpv3_dummy.h" hidden="true"/>
    <files mask="sntp_example.h" hidden="true"/>
    <files mask="tftp_example.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="time.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
    <files mask="sockets_stresstest.c" hidden="true"/>
    <files mask="test_sockets.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
    <files mask="test_dhcp.c" hidden="true"/>
    <files mask="test_dhcp6.c" hidden="true"/>
    <files mask="test_etharp.c" hidden="true"/>
    <files mask="test_ip4.c" hidden="true"/>
    <files mask="test_ip6.c" hidden="true"/>
    <files mask="lwip_unittests.c" hidden="true"/>
    <files mask="test_mdns.c" hidden="true"/>
    <files mask="test_mqtt.c" hidden="true"/>
    <files mask="test_pppos.c" hidden="true"/>
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
    <files mask="test_udp.c" hidden="true"/>
    <files mask="dhcp_extra_opts.c" hidden="true"/>
    <files mask="ip6_route_table.c" hidden="true"/>
    <files mask="dnssd.c" hidden="true"/>
    <files mask="tcp_isn.c" hidden="true"/>
    <files mask="tcp_md5.c" hidden="true"/>
    <files mask="chargen.c" hidden="true"/>
    <files mask="httpserver-netconn.c" hidden="true"/>
    <files mask="netio.c" hidden="true"/>
    <files mask="rtp.c" hidden="true"/>
    <files mask="shell.c" hidden="true"/>
    <files mask="socket_examples.c" hidden="true"/>
    <files mask="coverity.c" hidden="true"/>
    <files mask="ethernetif.c" hidden="true"/>
    <files mask="test.c" hidden="true"/>
    <files mask="cgi_example.c" hidden="true"/>
    <files mask="examples_fsdata.c" hidden="true"/>
    <files mask="fs_example.c" hidden="true"/>
    <files mask="genfiles_example.c" hidden="true"/>
    <files mask="https_example.c" hidden="true"/>
    <files mask="post_example.c" hidden="true"/>
    <files mask="ssi_example.c" hidden="true"/>
    <files mask="lwiperf_example.c" hidden="true"/>
    <files mask="mdns_example.c" hidden="true"/>
    <files mask="mqtt_example.c" hidden="true"/>
    <files mask="pppos_example.c" hidden="true"/>
    <files mask="snmp_example.c" hidden="true"/>
    <files mask="lwip_prvmib.c" hidden="true"/>
    <files mask="snmpv3_dummy.c" hidden="true"/>
    <files mask="sntp_example.c" hidden="true"/>
    <files mask="tftp_example.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
    <files mask="default_netif.c" hidden="true"/>
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
    <files mask="time.c" hidden="true"/>
    <files mask="default_netif.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
    <files mask="netbiosns.c" hidden="true"/>
    <files mask="smtp.c" hidden="true"/>
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
    <files mask="icmp_ping.bin" hidden="true"/>
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
    <files mask="tcp_syn.bin" hidden="true"/>
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="iteropts.sh" hidden="true"/>
    <files mask="Uninstall.cmake" hidden="true"/>
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.littlefs.MIMXRT1189" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT1189" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_tx_pwr_limits.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT1189" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_config.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.template.MIMXRT1189" name="rtt_template" brief="RTT template configuration" version="7.22.0" full_name="rtt template configuration" category="Device/SDK Drivers" user_visible="false" type="project_template" package_base_path="core/components/rtt" project_base_path="rtt">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="SEGGER_RTT_Conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt_template.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-common.MIMXRT1189" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/phy" project_base_path="component/phy">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_phy-common.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT1189" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="core/components/pf5020" project_base_path="pmic_driver">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf5020.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_zephyr.MIMXRT1189" name="osa_zephyr" brief="Component osa_zephyr" version="1.0.0" full_name="Component osa_zephyr" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_zephyr.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.common.MIMXRT1189" name="mflash common" brief="mflash common" version="1.0.0" full_name="statically allocated file system for mflash" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="core/components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_common.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-common.MIMXRT1189" name="nand_flash-common" brief="Driver nand_flash-common" version="1.0.0" full_name="Driver nand_flash-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nand" project_base_path="nand_flash">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nand_flash-common.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-common.MIMXRT1189" name="nor_flash-common" brief="Driver nor_flash-common" version="1.0.0" full_name="Driver nor_flash-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nor" project_base_path="nor_flash">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nor_flash-common.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.config.template" brief="edgefast_bluetooth configuration template for LE audio" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.config.template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="output/templates/config" type="c_include">
        <files mask="edgefast_bluetooth_audio_config.h" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_config_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.cap.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.cap" brief="edgefast_bluetooth le_audio.cap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.cap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_cap.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="cap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_common.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="cap_stream.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="cap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_cap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.aics" brief="edgefast_bluetooth le_audio.aics" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.aics" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_aics.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="aics.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="aics.c"/>
        <files mask="aics_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="aics_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_aics.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.vocs" brief="edgefast_bluetooth le_audio.vocs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vocs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_vocs.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vocs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="vocs.c"/>
        <files mask="vocs_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="vocs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vocs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.csip.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.csip" brief="edgefast_bluetooth le_audio.csis" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.csip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_csip.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="csip.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="csip_crypto.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="csip_crypto.h"/>
        <files mask="csip_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_csip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.ccid" brief="edgefast_bluetooth le_audio.ccid" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.ccid" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="ccid_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="ccid.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bap.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.bap" brief="edgefast_bluetooth le_audio.baps" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_ascs.h"/>
        <files mask="config_bap.h"/>
        <files mask="config_pacs.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="audio.h"/>
        <files mask="bap_lc3_preset.h"/>
        <files mask="bap.h"/>
        <files mask="lc3.h"/>
        <files mask="pacs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="ascs_internal.h"/>
        <files mask="audio_internal.h"/>
        <files mask="bap_iso.h"/>
        <files mask="bap_endpoint.h"/>
        <files mask="pacs_internal.h"/>
        <files mask="bap_stream.h"/>
        <files mask="bap_unicast_client_internal.h"/>
        <files mask="bap_unicast_server.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="ascs.c"/>
        <files mask="bap_iso.c"/>
        <files mask="audio.c"/>
        <files mask="bap_base.c"/>
        <files mask="bap_broadcast_sink.c"/>
        <files mask="bap_broadcast_source.c"/>
        <files mask="codec.c"/>
        <files mask="pacs.c"/>
        <files mask="bap_stream.c"/>
        <files mask="bap_unicast_client.c"/>
        <files mask="bap_unicast_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" project_relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.has.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.has" brief="edgefast_bluetooth le_audio.has" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.has" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_has.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="has.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="has_client.c"/>
        <files mask="has.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="has_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_has.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tbs.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.tbs" brief="edgefast_bluetooth le_audio.tbs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tbs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_tbs.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tbs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="tbs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tbs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tmap.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.tmap" brief="edgefast_bluetooth le_audio.tmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_tmap.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tmap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="tmap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.gmap.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.gmap" brief="edgefast_bluetooth le_audio.gmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.gmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_gmap.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="gmap.h"/>
        <files mask="gmap_lc3_preset.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="gmap_client.c"/>
        <files mask="gmap_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_gmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.pbp.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.pbp" brief="edgefast_bluetooth le_audio.pbp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.pbp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_pbp.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="pbp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="pbp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_pbp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.config.template.MIMXRT1189" name="middleware.edgefast_bluetooth.config.template" brief="edgefast_bluetooth PAL configuration template" version="1.0.0" full_name="middleware.edgefast_bluetooth.config.template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="middleware/edgefast_bluetooth" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="output/templates/config" project_relative_path="./" config="true" type="c_include">
        <files mask="edgefast_bluetooth_config.h"/>
        <files mask="edgefast_bluetooth_debug_config.h"/>
      </source>
      <source relative_path="output/templates/app_bluetooth_config" project_relative_path="./" config="true" type="c_preinclude">
        <files mask="app_bluetooth_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/templates/config" project_relative_path="./" type="c_include"/>
        <include_path relative_path="output/templates/app_bluetooth_config" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.controller_ind_reset.MIMXRT1189" name="middleware.edgefast_bluetooth.controller_ind_reset" brief="edgefast_bluetooth ind_reset" version="1.0.0" full_name="middleware.edgefast_bluetooth.controller_ind_reset" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/ind_reset" project_relative_path="controller/ind_reset" type="src">
        <files mask="controller_ind_reset.c"/>
      </source>
      <source relative_path="source/impl/ethermind/controller/ind_reset" project_relative_path="controller/ind_reset" type="c_include">
        <files mask="controller_ind_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_controller_ind_reset.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" project_relative_path="controller/ind_reset" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.liblc3codec.MIMXRT1189" name="middleware.edgefast_bluetooth.liblc3codec" brief="edgefast_bluetooth liblc3codec" version="1.0.0" full_name="middleware.edgefast_bluetooth.liblc3codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="liblc3codec/include" type="c_include">
        <files mask="lc3.h"/>
        <files mask="lc3_private.h"/>
      </source>
      <source relative_path="liblc3codec/src" type="src">
        <files mask="attdet.c"/>
        <files mask="bits.c"/>
        <files mask="bwdet.c"/>
        <files mask="energy.c"/>
        <files mask="lc3.c"/>
        <files mask="ltpf.c"/>
        <files mask="mdct.c"/>
        <files mask="plc.c"/>
        <files mask="sns.c"/>
        <files mask="spec.c"/>
        <files mask="tables.c"/>
        <files mask="tns.c"/>
      </source>
      <source relative_path="liblc3codec/src" type="c_include">
        <files mask="attdet.h"/>
        <files mask="bits.h"/>
        <files mask="bwdet.h"/>
        <files mask="common.h"/>
        <files mask="energy.h"/>
        <files mask="ltpf.h"/>
        <files mask="mdct.h"/>
        <files mask="plc.h"/>
        <files mask="sns.h"/>
        <files mask="spec.h"/>
        <files mask="tables.h"/>
        <files mask="tns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_liblc3codec.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="liblc3codec/include" type="c_include"/>
        <include_path relative_path="liblc3codec" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.asrc_sw.MIMXRT1189" name="middleware.edgefast_bluetooth.asrc_sw" brief="edgefast_bluetooth asrc_sw" version="1.0.0" full_name="middleware.edgefast_bluetooth.asrc_sw" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="asrc_sw" type="c_include">
        <files mask="srCvtFrm.h"/>
      </source>
      <source relative_path="asrc_sw" type="src">
        <files mask="srCvtFrm.c"/>
      </source>
      <source relative_path="asrc_sw" type="other">
        <files mask="downSmplAllRates.dat"/>
        <files mask="upSmpl_32_32_rev.dat"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_asrc_sw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="asrc_sw/include" type="c_include"/>
        <include_path relative_path="asrc_sw" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.Edgefast.MIMXRT1189" name="Edgefast" brief="Docs edgefast bluetooth" version="1.0.0" full_name="Docs edgefast bluetooth" category="docs/Edgefast" user_visible="true" type="documentation" package_base_path="core/docs/wireless/bluetooth/edgefast_bluetooth" project_base_path="wireless/Edgefast">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="MCUXSDKEFBP_Abstraction Layer User Guide.pdf"/>
        <files mask="Hardware Rework Guide for EdgeFast BT PAL.pdf"/>
        <files mask="EFBTPALAPIRM.pdf"/>
      </source>
    </component>
    <component id="docs.ecatFoE.MIMXRT1189" name="ecatFoE documentation" brief="ecatFoE documentation" version="1.0.0" full_name="ecatFoE documentation" category="ecatFoE/docs" user_visible="true" type="documentation" package_base_path="core/docs/ecatFoE" project_base_path="foe">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="eCAT_FoE_Example_User_Guide.pdf"/>
      </source>
    </component>
    <component id="docs.ecatEoE.MIMXRT1189" name="ecatEoE documentation" brief="ecatEoE documentation" version="1.0.0" full_name="ecatEoE documentation" category="ecatEoE/docs" user_visible="true" type="documentation" package_base_path="core/docs/ecatEoE" project_base_path="eoe">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="eCAT_EoE_Example_User_Guide.pdf"/>
      </source>
    </component>
    <component id="docs.EcatDigitalIO.MIMXRT1189" name="EcatDigitalIO documentation" brief="EcatDigitalIO documentation" version="1.0.0" full_name="EcatDigitalIO documentation" category="EcatDigitalIO/docs" user_visible="true" type="documentation" package_base_path="core/docs/EcatDigitalIO" project_base_path="digital_io">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="ECAT_Digital_IO_Example_User_Guide.pdf"/>
      </source>
    </component>
    <component id="docs.eiq.MIMXRT1189" name="eiq" brief="Docs eiq" version="1.0.0" full_name="Docs eiq" category="docs/eiq" user_visible="true" type="documentation" package_base_path="middleware/eiq/doc" project_base_path="EIQ">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="eIQ DeepViewRT User's Guide.pdf"/>
        <files mask="eIQ Glow Ahead of Time User Guide.pdf"/>
        <files mask="eIQ TensorFlow Lite Library User's Guide.pdf"/>
        <files mask="eIQ_Media_Processing_Pipeline_Release_Notes.pdf"/>
        <files mask="eIQ_Media_Processing_Pipeline_User_Guide.pdf"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT1189" name="Flatbuffers" brief="Flatbuffers library" version="2.0.6" full_name="Flatbuffers library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="tensorflow-lite/third_party/flatbuffers" project_relative_path="third_party/flatbuffers" type="doc">
        <files mask="readme.md"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/flatbuffers/include/flatbuffers" project_relative_path="third_party/flatbuffers/include/flatbuffers" type="c_include">
        <files mask="allocator.h"/>
        <files mask="array.h"/>
        <files mask="base.h"/>
        <files mask="buffer.h"/>
        <files mask="buffer_ref.h"/>
        <files mask="default_allocator.h"/>
        <files mask="detached_buffer.h"/>
        <files mask="flatbuffer_builder.h"/>
        <files mask="flatbuffers.h"/>
        <files mask="flexbuffers.h"/>
        <files mask="stl_emulation.h"/>
        <files mask="strings.h"/>
        <files mask="struct.h"/>
        <files mask="table.h"/>
        <files mask="util.h"/>
        <files mask="vector.h"/>
        <files mask="vector_downward.h"/>
        <files mask="verifier.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_flatbuffers.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/flatbuffers/include" project_relative_path="third_party/flatbuffers/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT1189" name="Gemmlowp" brief="Gemmlowp library" version="1.0.0" full_name="Gemmlowp library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="tensorflow-lite/third_party/gemmlowp" project_relative_path="third_party/gemmlowp" type="doc">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/gemmlowp/fixedpoint" project_relative_path="third_party/gemmlowp/fixedpoint" type="c_include">
        <files mask="fixedpoint.h"/>
        <files mask="fixedpoint_neon.h"/>
        <files mask="fixedpoint_sse.h"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/gemmlowp/internal" project_relative_path="third_party/gemmlowp/internal" type="c_include">
        <files mask="detect_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_gemmlowp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/gemmlowp" project_relative_path="third_party/gemmlowp" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT1189" name="Ruy" brief="Ruy library" version="1.0.0" full_name="Ruy library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="tensorflow-lite/third_party/ruy" project_relative_path="third_party/ruy" type="doc">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/ruy/ruy/profiler" project_relative_path="third_party/ruy/ruy/profiler" type="c_include">
        <files mask="instrumentation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_ruy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/ruy" project_relative_path="third_party/ruy" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.fft2d.MIMXRT1189" name="FFT2D" brief="General Purpose FFT (Fast Fourier/Cosine/Sine Transform) Package" version="1.0.0" full_name="FFT2D library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="src">
        <files mask="fftsg.c"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="c_include">
        <files mask="fft.h"/>
        <files mask="fft2d.h"/>
      </source>
      <source relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="doc">
        <files mask="readme.txt"/>
        <files mask="LICENSE"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_fft2d.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tensorflow-lite/third_party/fft2d" project_relative_path="third_party/fft2d" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMXRT1189" name="Kiss FFT" brief="A mixed-radix Fast Fourier Transform library" version="1.3.0" full_name="Kiss FFT library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/kissfft" project_base_path="eiq/tensorflow-lite/third_party/kissfft">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="kiss_fft.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="_kiss_fft_guts.h"/>
        <files mask="kiss_fft.h"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="kissfft.hh"/>
      </source>
      <source relative_path="tools" type="src">
        <files mask="kfc.c"/>
        <files mask="kiss_fastfir.c"/>
        <files mask="kiss_fftnd.c"/>
        <files mask="kiss_fftndr.c"/>
        <files mask="kiss_fftr.c"/>
      </source>
      <source relative_path="tools" type="c_include">
        <files mask="kfc.h"/>
        <files mask="kiss_fftnd.h"/>
        <files mask="kiss_fftndr.h"/>
        <files mask="kiss_fftr.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="COPYING"/>
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_kissfft.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.ecatServoMotor.MIMXRT1189" name="ecatServoMotor documentation" brief="ecatServoMotor documentation" version="1.0.0" full_name="ecatServoMotor documentation" category="ecatServoMotor/docs" user_visible="true" type="documentation" package_base_path="core/docs/ecatServoMotor" project_base_path="servo_motor">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="eCAT_Servo_Motor_Example_User_Guide.pdf"/>
      </source>
    </component>
    <component id="middleware.maestro_framework.codecs.MIMXRT1189" name="maestro_framework_codecs" brief="MCU Maestro Audio Framework Codecs" version="1.7.0" full_name="Maestro Audio Framework Middleware Codecs" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/maestro" project_base_path="maestro">
      <dependencies>
        <all>
          <component_dependency value="middleware.maestro_framework.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libmp3.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libwav.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libaac.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libflac.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libssrc.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm33f/armgcc/release" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libmp3.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm33f/armgcc/release" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libwav.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm33f/armgcc/release" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libaac.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm33f/armgcc/release" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libflac.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm33f/armgcc/release" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libssrc.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_codecs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.maestro_framework.MIMXRT1189" name="maestro_framework_streamer_core" brief="MCU Maestro Audio Framework Streamer Core" version="1.7.0" full_name="Maestro Audio Framework Streamer Core" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/maestro" project_base_path="maestro">
      <defines>
        <define name="CASCFG_PLATFORM_FREERTOS" value=""/>
        <define name="FSL_OS_SELECTED" value="SDK_OS_FREERTOS"/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.maestro_framework.doc.MIMXRT1189"/>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="middleware.maestro_framework.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="error.h"/>
        <files mask="file_utils.h"/>
        <files mask="general_utils.h"/>
        <files mask="maestro_logging.h"/>
        <files mask="ringbuffer.h"/>
        <files mask="streamer_api.h"/>
        <files mask="streamer_element_properties.h"/>
        <files mask="streamer_message.h"/>
      </source>
      <source relative_path="config" type="c_include">
        <files mask="audio_cfg.h"/>
      </source>
      <source relative_path="streamer/cci/include" type="c_include">
        <files mask="LVC_Types.h"/>
        <files mask="cci_metadata.h"/>
        <files mask="codec_interface.h"/>
        <files mask="codec_interface_public_api.h"/>
        <files mask="errordefs.h"/>
        <files mask="ssrc_head.h"/>
      </source>
      <source relative_path="streamer/core" type="c_include">
        <files mask="pad.h"/>
        <files mask="pipeline.h"/>
        <files mask="streamer.h"/>
        <files mask="streamer_element.h"/>
      </source>
      <source relative_path="streamer/decoders/cci_dec" type="c_include">
        <files mask="ccidec.h"/>
      </source>
      <source relative_path="streamer/devices" type="c_include">
        <files mask="audio_sink_pcmrtos.h"/>
        <files mask="audio_src_pcmrtos.h"/>
      </source>
      <source relative_path="streamer/elements" type="c_include">
        <files mask="audio_proc.h"/>
        <files mask="audio_sink.h"/>
        <files mask="audio_src.h"/>
        <files mask="decoder.h"/>
        <files mask="decoder_pads.h"/>
        <files mask="encoder.h"/>
        <files mask="file_sink.h"/>
        <files mask="file_src_freertos.h"/>
        <files mask="mem_sink.h"/>
        <files mask="mem_src.h"/>
        <files mask="netbuf_src.h"/>
        <files mask="vit_sink.h"/>
      </source>
      <source relative_path="streamer/encoders/cei" type="c_include">
        <files mask="cei.h"/>
        <files mask="cei_enctypes.h"/>
        <files mask="cei_table.h"/>
      </source>
      <source relative_path="streamer/encoders/opus" type="c_include">
        <files mask="opusenc_cei.h"/>
      </source>
      <source relative_path="streamer/core" type="src">
        <files mask="pad.c"/>
        <files mask="pipeline.c"/>
        <files mask="streamer.c"/>
        <files mask="streamer_element.c"/>
        <files mask="streamer_msg.c"/>
      </source>
      <source relative_path="streamer/decoders/cci_dec" type="src">
        <files mask="ccidec.c"/>
        <files mask="codec_interface.c"/>
        <files mask="codecextractmetadata.c"/>
      </source>
      <source relative_path="streamer/devices" type="src">
        <files mask="audio_sink_pcmrtos.c"/>
        <files mask="audio_src_pcmrtos.c"/>
      </source>
      <source relative_path="streamer/elements" type="src">
        <files mask="audio_proc.c"/>
        <files mask="audio_sink.c"/>
        <files mask="audio_src.c"/>
        <files mask="decoder.c"/>
        <files mask="decoder_pads.c"/>
        <files mask="file_sink.c"/>
        <files mask="file_src_freertos.c"/>
        <files mask="mem_sink.c"/>
        <files mask="vit_sink.c"/>
        <files mask="mem_src.c"/>
        <files mask="netbuf_src.c"/>
        <files mask="encoder.c"/>
      </source>
      <source relative_path="streamer/parsers/cci" type="src">
        <files mask="cci_codec_type_conversion.c"/>
      </source>
      <source relative_path="streamer/encoders/opus" type="src">
        <files mask="opusenc_cei.c"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/mp3" type="src">
        <files mask="mp3_extractmetadata.c"/>
        <files mask="mp3_id3v2.c"/>
        <files mask="mp3_vbr.c"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/mp3" type="c_include">
        <files mask="mp3_id3v2.h"/>
        <files mask="mp3_id3v2_internal.h"/>
        <files mask="mp3_metadata.h"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/adpcm" type="src">
        <files mask="adpcm_extractmetadata.c"/>
        <files mask="wav_common.c"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/adpcm" type="c_include">
        <files mask="wav_metadata.h"/>
        <files mask="wavedata.h"/>
        <files mask="wavedefs.h"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/opus" type="src">
        <files mask="opus_extractmetadata.c"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/aac" type="src">
        <files mask="aac_extractmetadata.c"/>
      </source>
      <source relative_path="streamer/cci/metadata/src/flac" type="src">
        <files mask="flac_extractmetadata.c"/>
      </source>
      <source relative_path="streamer/utils" type="src">
        <files mask="file_utils.c"/>
        <files mask="general_utils.c"/>
        <files mask="maestro_logging.c"/>
        <files mask="ringbuffer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="streamer/cci/include" type="c_include"/>
        <include_path relative_path="streamer/core" type="c_include"/>
        <include_path relative_path="streamer/decoders/cci_dec" type="c_include"/>
        <include_path relative_path="streamer/devices" type="c_include"/>
        <include_path relative_path="streamer/elements" type="c_include"/>
        <include_path relative_path="streamer/encoders/opus" type="c_include"/>
        <include_path relative_path="streamer/encoders/cei" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.opus.MIMXRT1189" name="maestro_framework_opus" brief="MCU Maestro Audio Framework Opus" version="1.0.0" full_name="Maestro Audio Framework Opus" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/maestro/mcu-audio/opus" project_base_path="maestro/opus">
      <defines>
        <define name="HAVE_CONFIG_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.maestro_framework.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="celt" type="src">
        <files mask="bands.c"/>
        <files mask="celt.c"/>
        <files mask="celt_decoder.c"/>
        <files mask="celt_encoder.c"/>
        <files mask="celt_lpc.c"/>
        <files mask="cwrs.c"/>
        <files mask="entcode.c"/>
        <files mask="entdec.c"/>
        <files mask="entenc.c"/>
        <files mask="kiss_fft.c"/>
        <files mask="laplace.c"/>
        <files mask="mathops.c"/>
        <files mask="mdct.c"/>
        <files mask="modes.c"/>
        <files mask="pitch.c"/>
        <files mask="quant_bands.c"/>
        <files mask="rate.c"/>
        <files mask="vq.c"/>
      </source>
      <source relative_path="celt" type="c_include">
        <files mask="_kiss_fft_guts.h"/>
        <files mask="arch.h"/>
        <files mask="bands.h"/>
        <files mask="celt.h"/>
        <files mask="celt_lpc.h"/>
        <files mask="cpu_support.h"/>
        <files mask="cwrs.h"/>
        <files mask="ecintrin.h"/>
        <files mask="entcode.h"/>
        <files mask="entdec.h"/>
        <files mask="entenc.h"/>
        <files mask="fixed_c5x.h"/>
        <files mask="fixed_c6x.h"/>
        <files mask="fixed_debug.h"/>
        <files mask="fixed_generic.h"/>
        <files mask="float_cast.h"/>
        <files mask="kiss_fft.h"/>
        <files mask="laplace.h"/>
        <files mask="mathops.h"/>
        <files mask="mdct.h"/>
        <files mask="mfrngcod.h"/>
        <files mask="modes.h"/>
        <files mask="os_support.h"/>
        <files mask="pitch.h"/>
        <files mask="quant_bands.h"/>
        <files mask="rate.h"/>
        <files mask="stack_alloc.h"/>
        <files mask="static_modes_fixed.h"/>
        <files mask="static_modes_float.h"/>
        <files mask="vq.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="config.h"/>
        <files mask="opus.h"/>
        <files mask="opus_cci.h"/>
        <files mask="opus_cci_raw.h"/>
        <files mask="opus_custom.h"/>
        <files mask="opus_defines.h"/>
        <files mask="opus_multistream.h"/>
        <files mask="opus_projection.h"/>
        <files mask="opus_types.h"/>
        <files mask="test_opus_common.h"/>
      </source>
      <source relative_path="silk" type="src">
        <files mask="A2NLSF.c"/>
        <files mask="CNG.c"/>
        <files mask="HP_variable_cutoff.c"/>
        <files mask="LPC_analysis_filter.c"/>
        <files mask="LPC_fit.c"/>
        <files mask="LPC_inv_pred_gain.c"/>
        <files mask="LP_variable_cutoff.c"/>
        <files mask="NLSF2A.c"/>
        <files mask="NLSF_VQ.c"/>
        <files mask="NLSF_VQ_weights_laroia.c"/>
        <files mask="NLSF_decode.c"/>
        <files mask="NLSF_del_dec_quant.c"/>
        <files mask="NLSF_encode.c"/>
        <files mask="NLSF_stabilize.c"/>
        <files mask="NLSF_unpack.c"/>
        <files mask="NSQ.c"/>
        <files mask="NSQ_del_dec.c"/>
        <files mask="PLC.c"/>
        <files mask="VAD.c"/>
        <files mask="VQ_WMat_EC.c"/>
        <files mask="ana_filt_bank_1.c"/>
        <files mask="biquad_alt.c"/>
        <files mask="bwexpander.c"/>
        <files mask="bwexpander_32.c"/>
        <files mask="check_control_input.c"/>
        <files mask="code_signs.c"/>
        <files mask="control_SNR.c"/>
        <files mask="control_audio_bandwidth.c"/>
        <files mask="control_codec.c"/>
        <files mask="debug.c"/>
        <files mask="dec_API.c"/>
        <files mask="decode_core.c"/>
        <files mask="decode_frame.c"/>
        <files mask="decode_indices.c"/>
        <files mask="decode_parameters.c"/>
        <files mask="decode_pitch.c"/>
        <files mask="decode_pulses.c"/>
        <files mask="decoder_set_fs.c"/>
        <files mask="enc_API.c"/>
        <files mask="encode_indices.c"/>
        <files mask="encode_pulses.c"/>
        <files mask="gain_quant.c"/>
        <files mask="init_decoder.c"/>
        <files mask="init_encoder.c"/>
        <files mask="inner_prod_aligned.c"/>
        <files mask="interpolate.c"/>
        <files mask="lin2log.c"/>
        <files mask="log2lin.c"/>
        <files mask="pitch_est_tables.c"/>
        <files mask="process_NLSFs.c"/>
        <files mask="quant_LTP_gains.c"/>
        <files mask="resampler.c"/>
        <files mask="resampler_down2.c"/>
        <files mask="resampler_down2_3.c"/>
        <files mask="resampler_private_AR2.c"/>
        <files mask="resampler_private_IIR_FIR.c"/>
        <files mask="resampler_private_down_FIR.c"/>
        <files mask="resampler_private_up2_HQ.c"/>
        <files mask="resampler_rom.c"/>
        <files mask="shell_coder.c"/>
        <files mask="sigm_Q15.c"/>
        <files mask="sort.c"/>
        <files mask="stereo_LR_to_MS.c"/>
        <files mask="stereo_MS_to_LR.c"/>
        <files mask="stereo_decode_pred.c"/>
        <files mask="stereo_encode_pred.c"/>
        <files mask="stereo_find_predictor.c"/>
        <files mask="stereo_quant_pred.c"/>
        <files mask="sum_sqr_shift.c"/>
        <files mask="table_LSF_cos.c"/>
        <files mask="tables_LTP.c"/>
        <files mask="tables_NLSF_CB_NB_MB.c"/>
        <files mask="tables_NLSF_CB_WB.c"/>
        <files mask="tables_gain.c"/>
        <files mask="tables_other.c"/>
        <files mask="tables_pitch_lag.c"/>
        <files mask="tables_pulses_per_block.c"/>
      </source>
      <source relative_path="silk/fixed" type="src">
        <files mask="LTP_analysis_filter_FIX.c"/>
        <files mask="LTP_scale_ctrl_FIX.c"/>
        <files mask="apply_sine_window_FIX.c"/>
        <files mask="autocorr_FIX.c"/>
        <files mask="burg_modified_FIX.c"/>
        <files mask="corrMatrix_FIX.c"/>
        <files mask="encode_frame_FIX.c"/>
        <files mask="find_LPC_FIX.c"/>
        <files mask="find_LTP_FIX.c"/>
        <files mask="find_pitch_lags_FIX.c"/>
        <files mask="find_pred_coefs_FIX.c"/>
        <files mask="k2a_FIX.c"/>
        <files mask="k2a_Q16_FIX.c"/>
        <files mask="noise_shape_analysis_FIX.c"/>
        <files mask="pitch_analysis_core_FIX.c"/>
        <files mask="process_gains_FIX.c"/>
        <files mask="regularize_correlations_FIX.c"/>
        <files mask="residual_energy16_FIX.c"/>
        <files mask="residual_energy_FIX.c"/>
        <files mask="schur64_FIX.c"/>
        <files mask="schur_FIX.c"/>
        <files mask="vector_ops_FIX.c"/>
        <files mask="warped_autocorrelation_FIX.c"/>
      </source>
      <source relative_path="silk" type="c_include">
        <files mask="API.h"/>
        <files mask="Inlines.h"/>
        <files mask="MacroCount.h"/>
        <files mask="MacroDebug.h"/>
        <files mask="NSQ.h"/>
        <files mask="PLC.h"/>
        <files mask="SigProc_FIX.h"/>
        <files mask="control.h"/>
        <files mask="debug.h"/>
        <files mask="define.h"/>
        <files mask="errors.h"/>
        <files mask="macros.h"/>
        <files mask="main.h"/>
        <files mask="pitch_est_defines.h"/>
        <files mask="resampler_private.h"/>
        <files mask="resampler_rom.h"/>
        <files mask="resampler_structs.h"/>
        <files mask="structs.h"/>
        <files mask="tables.h"/>
        <files mask="tuning_parameters.h"/>
        <files mask="typedef.h"/>
      </source>
      <source relative_path="silk/fixed" type="c_include">
        <files mask="main_FIX.h"/>
        <files mask="structs_FIX.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="opus.c"/>
        <files mask="opus_cci.c"/>
        <files mask="opus_cci_raw.c"/>
        <files mask="opus_decoder.c"/>
        <files mask="opus_encoder.c"/>
        <files mask="opus_multistream.c"/>
        <files mask="opus_multistream_decoder.c"/>
        <files mask="opus_multistream_encoder.c"/>
        <files mask="repacketizer.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="analysis.h"/>
        <files mask="mlp.h"/>
        <files mask="opus_private.h"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="COPYING" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_opus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="celt" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="silk" type="c_include"/>
        <include_path relative_path="silk/fixed" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.opusfile.MIMXRT1189" name="maestro_framework_opusfile" brief="MCU Maestro Audio Framework Opusfile" version="1.0.0" full_name="Maestro Audio Framework Opusfile" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/maestro/mcu-audio/opusfile" project_base_path="maestro/opusfile">
      <defines>
        <define name="HAVE_CONFIG_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <component_dependency value="middleware.maestro_framework.opus.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src" type="src">
        <files mask="info.c"/>
        <files mask="internal.c"/>
        <files mask="opusfile.c"/>
        <files mask="stream.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="internal.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="opusfile.h"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="COPYING" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_opusfile.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.ogg.MIMXRT1189" name="maestro_framework_ogg" brief="MCU Maestro Audio Framework Ogg" version="1.0.0" full_name="Maestro Audio Framework Ogg" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/maestro/mcu-audio/ogg" project_base_path="maestro/ogg">
      <defines>
        <define name="HAVE_CONFIG_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <component_dependency value="middleware.maestro_framework.opus.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/ogg" type="c_include">
        <files mask="memory.h"/>
        <files mask="ogg.h"/>
        <files mask="os_types.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="framing.c"/>
        <files mask="memory.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="crctable.h"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="COPYING" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_ogg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.maestro_framework.asrc.MIMXRT1189" name="maestro_framework_asrc" brief="MCU Maestro Audio Framework ASRC" version="1.0.0" full_name="Maestro Audio Framework ASRC" category="Audio/Framework" user_visible="false" type="middleware" package_base_path="middleware/maestro/mcu-audio/asrc" project_base_path="maestro/asrc">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_DSP_Include.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="../../libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libasrc.a"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="ASRC.h"/>
        <files mask="PL_ITST.h"/>
        <files mask="PL_MEM_Copy.h"/>
        <files mask="PL_memoryRegion.h"/>
        <files mask="PL_platformTypes.h"/>
        <files mask="PL_platformTypes_CortexM.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="PL_InstAlloc.c"/>
        <files mask="PL_MEM_Copy.c"/>
        <files mask="PL_Mat_Utils.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="PL_InstAlloc.h"/>
        <files mask="PL_ModuleInterface.h"/>
        <files mask="PL_platformTypesPrivate.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_maestro_framework_asrc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.maestro.MIMXRT1189" name="maestro_rn" brief="Maestro SDK Release Notes" version="1.7.0" full_name="Maestro SDK Release Notes" category="docs/maestro" user_visible="true" type="documentation" package_base_path="middleware/maestro/docs" project_base_path="maestro">
      <dependencies>
        <all>
          <component_dependency value="middleware.maestro_framework.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Maestro_Release_Notes.pdf"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.sdio.template.evkmimxrt1180.MIMXRT1189" name="EdgeFast Bluetooth configuration template of SDIO" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template of SDIO" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="core/boards/evkmimxrt1180/edgefast_bluetooth_examples/template" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189"/>
          <component_dependency value="component.rgpio_adapter.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" project_relative_path="template" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_sdio_template_evkmimxrt1180.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.mcux.linker.template.evkmimxrt1180.MIMXRT1189" name="EdgeFast Bluetooth configuration template of MCUX Linker" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template of MCUX Linker" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="core/boards/evkmimxrt1180/edgefast_bluetooth_examples/template" project_base_path="source">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="./" project_relative_path="linkscripts" config="true" type="src">
        <files mask="data.ldt"/>
        <files mask="main_data.ldt"/>
        <files mask="bss.ldt"/>
        <files mask="main_bss.ldt"/>
        <files mask="main_text.ldt"/>
        <files mask="end_text.ldt"/>
        <files mask="symbols.ldt"/>
      </source>
      <source exclude="true" relative_path="./" project_relative_path="template" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_mcux_linker_template_evkmimxrt1180.cmake" hidden="true"/>
      </source>
    </component>
    <component id="project_template.MIMXRT1189.MIMXRT1189" name="MIMXRT1189" brief="Devices_project_template MIMXRT1189" version="1.0.0" full_name="Devices_project_template MIMXRT1189" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/MIMXRT1189/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1189"/>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT1189"/>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT1189"/>
              <component_dependency value="platform.utilities.assert.MIMXRT1189"/>
              <component_dependency value="component.serial_manager.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT1189"/>
            </all>
          </any_of>
          <component_dependency value="platform.devices.MIMXRT1189_startup.MIMXRT1189"/>
          <component_dependency value="platform.devices.MIMXRT1189_mcux_scripts.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1189"/>
          <component_dependency value="platform.drivers.rgpio.MIMXRT1189"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.misc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1189"/>
          <component_dependency value="platform.drivers.dcdc_soc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="DEVICES_Project_Template_MIMXRT1189.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1189_mcux_scripts.MIMXRT1189" name="MIMXRT1189_mcux_scripts" brief="Device MIMXRT1189_mcux_scripts" version="1.0.0" full_name="Device MIMXRT1189_mcux_scripts" category="Board Support/SDK Project Template" user_visible="true" type="other" package_base_path="core/devices/MIMXRT1189" project_base_path="scripts">
      <dependencies>
        <all>
          <component_dependency value="platform.devices.MIMXRT1189_system.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="other" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="image_hash_tool.py"/>
      </source>
      <source relative_path="mcuxpresso" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_MIMXRT1189_mcux_scripts.MIMXRT1189.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1189_startup.MIMXRT1189" name="MIMXRT1189_startup" brief="Device MIMXRT1189_startup" version="1.0.0" full_name="Device MIMXRT1189_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="core/devices/MIMXRT1189" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="platform.devices.MIMXRT1189_system.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="startup_MIMXRT1189_cm7.S"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="startup_MIMXRT1189_cm33.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="startup_mimxrt1189_cm7.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="startup_mimxrt1189_cm7.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="startup_mimxrt1189_cm33.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="startup_mimxrt1189_cm33.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_MIMXRT1189_startup.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcuxpresso" project_relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1189_system.MIMXRT1189" name="MIMXRT1189_system" brief="Device MIMXRT1189_system" version="1.0.0" full_name="Device MIMXRT1189_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/MIMXRT1189" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="platform.devices.MIMXRT1189_CMSIS.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="system_MIMXRT1189_cm33.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="system_MIMXRT1189_cm33.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="system_MIMXRT1189_cm7.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="system_MIMXRT1189_cm7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_MIMXRT1189_system.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
        <include_path relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1189_linker.MIMXRT1189" name="MIMXRT1189_linker" brief="Device MIMXRT1189_linker" version="1.0.0" full_name="Device MIMXRT1189_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="core/devices/MIMXRT1189" project_base_path="MIMXRT1189">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189xxxxx_cm33_flexspi_nor.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_ram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_sdram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_sdram_txt.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_flexspi_nor_hyperram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_hyperram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm33_hyperram_txt.ld"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189xxxxx_cm7_flexspi_nor.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_ram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_sdram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_sdram_txt.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_flexspi_nor_hyperram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_hyperram.ld"/>
        <files mask="MIMXRT1189xxxxx_cm7_hyperram_txt.ld"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1189_CMSIS.MIMXRT1189" name="MIMXRT1189_CMSIS" brief="Device MIMXRT1189_cmsis" version="1.0.0" full_name="Device MIMXRT1189_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/MIMXRT1189" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189_cm33.h"/>
        <files mask="MIMXRT1189_cm33_features.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="MIMXRT1189_cm7.h"/>
        <files mask="MIMXRT1189_cm7_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_MIMXRT1189_CMSIS.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
        <include_path relative_path="./" type="c_include" device_cores="cm7_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMXRT1189" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/MIMXRT1189/template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="RTE_Device.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1189" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/sai" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.sai.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1189" name="i2c_edma" brief="LPI2C Driver" version="2.4.2" full_name="LPI2C Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpi2c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1189" name="lpspi_edma" brief="LPSPI Driver" version="2.4.4" full_name="LPSPI Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpspi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1189" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpuart" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMXRT1189" name="flexcan_edma" brief="FLEXCAN Driver" version="2.11.4" full_name="FLEXCAN EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexcan" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexcan.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMXRT1189" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/pdm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.pdm.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT1189" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.6.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="core/cmsis_drivers/lpuart" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart_edma.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT1189"/>
          <component_dependency value="RTE_Device.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpuart.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1189" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.5.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="core/cmsis_drivers/lpi2c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c_edma.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1189"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT1189"/>
          <component_dependency value="RTE_Device.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpi2c.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1189" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.9.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="core/cmsis_drivers/lpspi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi_edma.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1189"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT1189"/>
          <component_dependency value="RTE_Device.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1189" name="cache" brief="CACHE Driver" version="2.0.4" full_name="CACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers/cm7" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_armv7_m7.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_xcache.MIMXRT1189" name="cache_xcache" brief="CACHE XCACHE Driver" version="2.0.1" full_name="CACHE XCACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers/cm33" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_xcache.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1189" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT1189"/>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT1189" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="utility.str.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console_lite" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.netc.MIMXRT1189" name="netc" brief="NETC Driver" version="2.7.1" full_name="NETC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/netc" project_base_path="drivers/netc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMXRT1189"/>
          <component_dependency value="platform.drivers.msgintr.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="driver.netc_rt1180.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_netc.h"/>
        <files mask="fsl_netc_ierb.h"/>
        <files mask="fsl_netc_timer.h"/>
        <files mask="fsl_netc_mdio.h"/>
        <files mask="fsl_netc_endpoint.h"/>
        <files mask="fsl_netc_switch.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_netc_ierb.c"/>
        <files mask="fsl_netc_timer.c"/>
        <files mask="fsl_netc_mdio.c"/>
        <files mask="fsl_netc_endpoint.c"/>
        <files mask="fsl_netc_switch.c"/>
      </source>
      <source relative_path="netc_hw" type="c_include">
        <files mask="fsl_netc_hw.h"/>
        <files mask="fsl_netc_hw_port.h"/>
        <files mask="fsl_netc_hw_si.h"/>
        <files mask="fsl_netc_hw_enetc.h"/>
      </source>
      <source relative_path="netc_hw" type="src">
        <files mask="fsl_netc_hw.c"/>
        <files mask="fsl_netc_hw_port.c"/>
        <files mask="fsl_netc_hw_si.c"/>
        <files mask="fsl_netc_hw_enetc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_netc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1189" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/usdhc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_usdhc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1189" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/i2s" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1189" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/spi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1189" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/uart" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MIMXRT1189" name="edma" brief="EDMA Driver" version="2.10.0" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/edma4" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma_soc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.memory.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma4.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma_soc.MIMXRT1189" name="edma_soc" brief="EDMA SOC Driver" version="2.1.0" full_name="EDMA SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma_soc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc_edma.MIMXRT1189" name="asrc_edma" brief="asrc_edma Driver" version="2.2.0" full_name="asrc_edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/asrc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.asrc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_asrc_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_edma.MIMXRT1189" name="flexspi_edma" brief="FLEXSPI Driver" version="2.3.3" full_name="FLEXSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexspi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1189" name="spdif_edma" brief="SPDIF EDMA Driver" version="2.0.8" full_name="SPDIF EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/spdif" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <component_dependency value="platform.drivers.spdif.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_spdif_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT1189" name="clock" brief="Clock Driver" version="2.1.4" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ele_base_api.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.MIMXRT1189.MIMXRT1189" name="MIMXRT1189" brief="Docs mimxrt1189" version="1.0.0" full_name="Docs mimxrt1189" category="docs/MIMXRT1189" user_visible="true" type="documentation" package_base_path="core/docs" project_base_path="docs">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for MIMXRT1180-EVK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for MIMXRT1180-EVK.pdf"/>
        <files mask="MCUXpresso SDK ChangeLog_MIMXRT1189.pdf"/>
        <files mask="MCUXpresso SDK API Reference Manual_MIMXRT1189.pdf"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMXRT1189" type="doc">
        <files mask="Kinetis_SDK_Block_Diagram.jpg"/>
        <files mask="a00002.html"/>
        <files mask="a00004.html"/>
        <files mask="a00006.html"/>
        <files mask="a00008.html"/>
        <files mask="a00008.js"/>
        <files mask="a00009.html"/>
        <files mask="a00009.js"/>
        <files mask="a00010.html"/>
        <files mask="a00010.js"/>
        <files mask="a00011.html"/>
        <files mask="a00011.js"/>
        <files mask="a00012.html"/>
        <files mask="a00012.js"/>
        <files mask="a00013.html"/>
        <files mask="a00013.js"/>
        <files mask="a00014.html"/>
        <files mask="a00014.js"/>
        <files mask="a00015.html"/>
        <files mask="a00015.js"/>
        <files mask="a00016.html"/>
        <files mask="a00016.js"/>
        <files mask="a00017.html"/>
        <files mask="a00017.js"/>
        <files mask="a00018.html"/>
        <files mask="a00018.js"/>
        <files mask="a00019.html"/>
        <files mask="a00019.js"/>
        <files mask="a00020.html"/>
        <files mask="a00020.js"/>
        <files mask="a00021.html"/>
        <files mask="a00021.js"/>
        <files mask="a00022.html"/>
        <files mask="a00022.js"/>
        <files mask="a00023.html"/>
        <files mask="a00023.js"/>
        <files mask="a00024.html"/>
        <files mask="a00024.js"/>
        <files mask="a00025.html"/>
        <files mask="a00025.js"/>
        <files mask="a00026.html"/>
        <files mask="a00026.js"/>
        <files mask="a00027.html"/>
        <files mask="a00027.js"/>
        <files mask="a00028.html"/>
        <files mask="a00028.js"/>
        <files mask="a00029.html"/>
        <files mask="a00029.js"/>
        <files mask="a00030.html"/>
        <files mask="a00030.js"/>
        <files mask="a00031.html"/>
        <files mask="a00031.js"/>
        <files mask="a00032.html"/>
        <files mask="a00032.js"/>
        <files mask="a00033.html"/>
        <files mask="a00033.js"/>
        <files mask="a00034.html"/>
        <files mask="a00034.js"/>
        <files mask="a00035.html"/>
        <files mask="a00035.js"/>
        <files mask="a00036.html"/>
        <files mask="a00036.js"/>
        <files mask="a00037.html"/>
        <files mask="a00037.js"/>
        <files mask="a00038.html"/>
        <files mask="a00038.js"/>
        <files mask="a00039.html"/>
        <files mask="a00039.js"/>
        <files mask="a00040.html"/>
        <files mask="a00040.js"/>
        <files mask="a00041.html"/>
        <files mask="a00041.js"/>
        <files mask="a00042.html"/>
        <files mask="a00042.js"/>
        <files mask="a00043.html"/>
        <files mask="a00043.js"/>
        <files mask="a00044.html"/>
        <files mask="a00044.js"/>
        <files mask="a00045.html"/>
        <files mask="a00045.js"/>
        <files mask="a00046.html"/>
        <files mask="a00046.js"/>
        <files mask="a00047.html"/>
        <files mask="a00047.js"/>
        <files mask="a00048.html"/>
        <files mask="a00048.js"/>
        <files mask="a00049.html"/>
        <files mask="a00049.js"/>
        <files mask="a00050.html"/>
        <files mask="a00050.js"/>
        <files mask="a00051.html"/>
        <files mask="a00051.js"/>
        <files mask="a00052.html"/>
        <files mask="a00052.js"/>
        <files mask="a00053.html"/>
        <files mask="a00053.js"/>
        <files mask="a00054.html"/>
        <files mask="a00054.js"/>
        <files mask="a00055.html"/>
        <files mask="a00055.js"/>
        <files mask="a00056.html"/>
        <files mask="a00056.js"/>
        <files mask="a00057.html"/>
        <files mask="a00057.js"/>
        <files mask="a00058.html"/>
        <files mask="a00058.js"/>
        <files mask="a00059.html"/>
        <files mask="a00059.js"/>
        <files mask="a00060.html"/>
        <files mask="a00060.js"/>
        <files mask="a00061.html"/>
        <files mask="a00061.js"/>
        <files mask="a00062.html"/>
        <files mask="a00062.js"/>
        <files mask="a00063.html"/>
        <files mask="a00063.js"/>
        <files mask="a00064.html"/>
        <files mask="a00064.js"/>
        <files mask="a00065.html"/>
        <files mask="a00065.js"/>
        <files mask="a00066.html"/>
        <files mask="a00066.js"/>
        <files mask="a00067.html"/>
        <files mask="a00067.js"/>
        <files mask="a00068.html"/>
        <files mask="a00068.js"/>
        <files mask="a00069.html"/>
        <files mask="a00069.js"/>
        <files mask="a00195.html"/>
        <files mask="a00195.js"/>
        <files mask="a00196.html"/>
        <files mask="a00197.html"/>
        <files mask="a00197.js"/>
        <files mask="a00198.html"/>
        <files mask="a00198.js"/>
        <files mask="a00199.html"/>
        <files mask="a00199.js"/>
        <files mask="a00200.html"/>
        <files mask="a00200.js"/>
        <files mask="a00201.html"/>
        <files mask="a00201.js"/>
        <files mask="a00202.html"/>
        <files mask="a00203.html"/>
        <files mask="a00203.js"/>
        <files mask="a00204.html"/>
        <files mask="a00204.js"/>
        <files mask="a00205.html"/>
        <files mask="a00205.js"/>
        <files mask="a00206.html"/>
        <files mask="a00207.html"/>
        <files mask="a00208.html"/>
        <files mask="a00208.js"/>
        <files mask="a00209.html"/>
        <files mask="a00210.html"/>
        <files mask="a00211.html"/>
        <files mask="a00211.js"/>
        <files mask="a00212.html"/>
        <files mask="a00213.html"/>
        <files mask="a00214.html"/>
        <files mask="a00214.js"/>
        <files mask="a00215.html"/>
        <files mask="a00216.html"/>
        <files mask="a00216.js"/>
        <files mask="a00217.html"/>
        <files mask="a00218.html"/>
        <files mask="a00219.html"/>
        <files mask="a00220.html"/>
        <files mask="a00220.js"/>
        <files mask="a00221.html"/>
        <files mask="a00222.html"/>
        <files mask="a00222.js"/>
        <files mask="a00223.html"/>
        <files mask="a00224.html"/>
        <files mask="a00224.js"/>
        <files mask="a00225.html"/>
        <files mask="a00226.html"/>
        <files mask="a00227.html"/>
        <files mask="a00227.js"/>
        <files mask="a00228.html"/>
        <files mask="a00228.js"/>
        <files mask="a00229.html"/>
        <files mask="a00229.js"/>
        <files mask="a00230.html"/>
        <files mask="a00231.html"/>
        <files mask="a00232.html"/>
        <files mask="a00232.js"/>
        <files mask="a00233.html"/>
        <files mask="a00233.js"/>
        <files mask="a00234.html"/>
        <files mask="a00234.js"/>
        <files mask="a00235.html"/>
        <files mask="a00235.js"/>
        <files mask="a00236.html"/>
        <files mask="a00236.js"/>
        <files mask="a00237.html"/>
        <files mask="a00238.html"/>
        <files mask="a00238.js"/>
        <files mask="a00240.html"/>
        <files mask="arm_logo.png"/>
        <files mask="bc_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="closed.png"/>
        <files mask="customdoxygen.css"/>
        <files mask="debug_console_overview.jpg"/>
        <files mask="dir_07b86ffc266b39efa5bbdc0e9fdb330a.html"/>
        <files mask="dir_0c267f045edb9b0ef64e9a860fd099c4.html"/>
        <files mask="dir_1362b89d9435833b5b0b76da87ab1703.html"/>
        <files mask="dir_13e26558fbff56e8521393e9063bf608.html"/>
        <files mask="dir_1aa5279d52bde2ac7967e65c792c2ac1.html"/>
        <files mask="dir_1bcd6d4942524e7ff629086af44d0e9d.html"/>
        <files mask="dir_1bd0a87a218d9d55b14f1add42090a7d.html"/>
        <files mask="dir_20a30dff5145d917f6c5f8c5fb0461c0.html"/>
        <files mask="dir_24b2fdd73bf9ba14c9f5a114ba3b7f37.html"/>
        <files mask="dir_2795757a0106c91488b4d539ecf9baca.html"/>
        <files mask="dir_2c5899ae69b445467b5abbf9fd844408.html"/>
        <files mask="dir_321a6f3437e985142c79b8e473ee82d8.html"/>
        <files mask="dir_409f97388efe006bc3438b95e9edef48.html"/>
        <files mask="dir_44fef98696891e5d866c2c969232a32a.html"/>
        <files mask="dir_4abf89e9f673f8ecb77d953c2ad09976.html"/>
        <files mask="dir_517e548c56d5f78956edabed12ec14af.html"/>
        <files mask="dir_58e102d2449f7b3d87d5edc08313c5d7.html"/>
        <files mask="dir_633a86e6a6658f734e800b79d508ae19.html"/>
        <files mask="dir_652f04a32e3c8b8aef12551da398a8ab.html"/>
        <files mask="dir_675f9f61ca74e4999b71747fe2b6f630.html"/>
        <files mask="dir_7131768b7f9d82f40beb806fa584269b.html"/>
        <files mask="dir_72495dc56d68d813dfb71396576d4290.html"/>
        <files mask="dir_75c1be7ecc88b82766767ff1d39832a9.html"/>
        <files mask="dir_81cd625641a90df482300fc494d26ddb.html"/>
        <files mask="dir_83c4f67939b2e50b6dc50fe3fc259b2d.html"/>
        <files mask="dir_848ba48fec923bc3c0bf8c7926036968.html"/>
        <files mask="dir_85d65e6b350e819f4cbce4598b30679b.html"/>
        <files mask="dir_8c06391b28ac26e0116cac1e96f23919.html"/>
        <files mask="dir_8cdb3e70cf59f440b7f052a0534f2b84.html"/>
        <files mask="dir_910e375e1bb701485ece46bbbb5d0463.html"/>
        <files mask="dir_915506b67ee9a2b99c9ef4d32b245ca8.html"/>
        <files mask="dir_919453c527cd3b17be9d0977f49b7a97.html"/>
        <files mask="dir_95bc3e7ac98e4e44438a28d0eb625bbb.html"/>
        <files mask="dir_9986937d5c2d55a7e5d1d4820166229f.html"/>
        <files mask="dir_9ca253ae55e31285fbe5a271343cbc82.html"/>
        <files mask="dir_a343a3e9cbb710280ccd0de2056b945d.html"/>
        <files mask="dir_a743d2d07d5ca1c1422dad6d36c9aac1.html"/>
        <files mask="dir_a7e5d69249884e13b82b7176f17eba9d.html"/>
        <files mask="dir_a8bdfff229695ca6884fb40ef8906651.html"/>
        <files mask="dir_b1c4d21f93a7826ef4aed70b30552b97.html"/>
        <files mask="dir_b5759f6cd324301c8d375e44421eccc5.html"/>
        <files mask="dir_bf6bb2e4616da3369ec4bf8cd9dbdcbe.html"/>
        <files mask="dir_bf71e8795d5ec3bf1a04b9a740296e07.html"/>
        <files mask="dir_c2413eacf765d2d058d00260a2581a98.html"/>
        <files mask="dir_c35ca6965aa29b760300e697294724bc.html"/>
        <files mask="dir_c5a52a81292cf9a5167198f4f346d6d9.html"/>
        <files mask="dir_c8df4454e56100cd05cd2bcace26b042.html"/>
        <files mask="dir_c9e658f9fca83717e218551c30a11344.html"/>
        <files mask="dir_d0b0cea4c1afa919405231e98537b73c.html"/>
        <files mask="dir_d2054c718314b2ec22ea1e5080c2c6dc.html"/>
        <files mask="dir_d4d63659477c14e330ae14fa0743fb14.html"/>
        <files mask="dir_db64c4f13c453fceaa5f05938f0afbc5.html"/>
        <files mask="dir_dc1d449a1b08d9860d0e8ab656677732.html"/>
        <files mask="dir_ea982a4a90bbf64c8a612131ad2f0fcb.html"/>
        <files mask="dir_ee741b36493624f3409ac3543d3f60ec.html"/>
        <files mask="dir_f13c33fe559295a85a1a1fd70d523a11.html"/>
        <files mask="dir_f30550e2433a9e3eaf19043f7ead6787.html"/>
        <files mask="dir_f382573a88a6eedb79e240e7ead9d11a.html"/>
        <files mask="dir_f3b3464ec0eacbc94fbe4130083fb405.html"/>
        <files mask="dir_f7e99b515278d57327e2df3b2ab543bb.html"/>
        <files mask="dir_fc0240b12f83dd59978a082b7215da74.html"/>
        <files mask="dir_fd29f8ef9f8bc0a40444729cca86776e.html"/>
        <files mask="dir_fd71b0fcf9624fc8b17010532c7683a6.html"/>
        <files mask="dir_ff7db2440af5f269323f2df5d9f83976.html"/>
        <files mask="doxygen.css"/>
        <files mask="doxygen.png"/>
        <files mask="dynsections.js"/>
        <files mask="fs_logo.gif"/>
        <files mask="ftv2blank.png"/>
        <files mask="ftv2cl.png"/>
        <files mask="ftv2doc.png"/>
        <files mask="ftv2folderclosed.png"/>
        <files mask="ftv2folderopen.png"/>
        <files mask="ftv2lastnode.png"/>
        <files mask="ftv2link.png"/>
        <files mask="ftv2mlastnode.png"/>
        <files mask="ftv2mnode.png"/>
        <files mask="ftv2mo.png"/>
        <files mask="ftv2node.png"/>
        <files mask="ftv2ns.png"/>
        <files mask="ftv2plastnode.png"/>
        <files mask="ftv2pnode.png"/>
        <files mask="ftv2splitbar.png"/>
        <files mask="ftv2vertline.png"/>
        <files mask="index.html"/>
        <files mask="jquery.js"/>
        <files mask="modules.html"/>
        <files mask="modules.js"/>
        <files mask="nav_f.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="navtree.css"/>
        <files mask="navtree.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="navtreeindex12.js"/>
        <files mask="navtreeindex13.js"/>
        <files mask="navtreeindex14.js"/>
        <files mask="navtreeindex15.js"/>
        <files mask="navtreeindex16.js"/>
        <files mask="navtreeindex17.js"/>
        <files mask="navtreeindex18.js"/>
        <files mask="navtreeindex19.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="navtreeindex20.js"/>
        <files mask="navtreeindex21.js"/>
        <files mask="navtreeindex22.js"/>
        <files mask="navtreeindex23.js"/>
        <files mask="navtreeindex24.js"/>
        <files mask="navtreeindex25.js"/>
        <files mask="navtreeindex26.js"/>
        <files mask="navtreeindex27.js"/>
        <files mask="navtreeindex28.js"/>
        <files mask="navtreeindex29.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="navtreeindex30.js"/>
        <files mask="navtreeindex31.js"/>
        <files mask="navtreeindex32.js"/>
        <files mask="navtreeindex33.js"/>
        <files mask="navtreeindex34.js"/>
        <files mask="navtreeindex35.js"/>
        <files mask="navtreeindex36.js"/>
        <files mask="navtreeindex37.js"/>
        <files mask="navtreeindex38.js"/>
        <files mask="navtreeindex39.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="open.png"/>
        <files mask="pages.html"/>
        <files mask="resize.js"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
        <files mask="tabs.css"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMXRT1189/search" type="doc">
        <files mask="all_5f.html"/>
        <files mask="all_5f.js"/>
        <files mask="all_61.html"/>
        <files mask="all_61.js"/>
        <files mask="all_62.html"/>
        <files mask="all_62.js"/>
        <files mask="all_63.html"/>
        <files mask="all_63.js"/>
        <files mask="all_64.html"/>
        <files mask="all_64.js"/>
        <files mask="all_65.html"/>
        <files mask="all_65.js"/>
        <files mask="all_66.html"/>
        <files mask="all_66.js"/>
        <files mask="all_67.html"/>
        <files mask="all_67.js"/>
        <files mask="all_68.html"/>
        <files mask="all_68.js"/>
        <files mask="all_69.html"/>
        <files mask="all_69.js"/>
        <files mask="all_6b.html"/>
        <files mask="all_6b.js"/>
        <files mask="all_6c.html"/>
        <files mask="all_6c.js"/>
        <files mask="all_6d.html"/>
        <files mask="all_6d.js"/>
        <files mask="all_6e.html"/>
        <files mask="all_6e.js"/>
        <files mask="all_6f.html"/>
        <files mask="all_6f.js"/>
        <files mask="all_70.html"/>
        <files mask="all_70.js"/>
        <files mask="all_71.html"/>
        <files mask="all_71.js"/>
        <files mask="all_72.html"/>
        <files mask="all_72.js"/>
        <files mask="all_73.html"/>
        <files mask="all_73.js"/>
        <files mask="all_74.html"/>
        <files mask="all_74.js"/>
        <files mask="all_75.html"/>
        <files mask="all_75.js"/>
        <files mask="all_76.html"/>
        <files mask="all_76.js"/>
        <files mask="all_77.html"/>
        <files mask="all_77.js"/>
        <files mask="all_78.html"/>
        <files mask="all_78.js"/>
        <files mask="all_79.html"/>
        <files mask="all_79.js"/>
        <files mask="all_7a.html"/>
        <files mask="all_7a.js"/>
        <files mask="classes_5f.html"/>
        <files mask="classes_5f.js"/>
        <files mask="classes_61.html"/>
        <files mask="classes_61.js"/>
        <files mask="classes_63.html"/>
        <files mask="classes_63.js"/>
        <files mask="classes_64.html"/>
        <files mask="classes_64.js"/>
        <files mask="classes_65.html"/>
        <files mask="classes_65.js"/>
        <files mask="classes_66.html"/>
        <files mask="classes_66.js"/>
        <files mask="classes_67.html"/>
        <files mask="classes_67.js"/>
        <files mask="classes_69.html"/>
        <files mask="classes_69.js"/>
        <files mask="classes_6b.html"/>
        <files mask="classes_6b.js"/>
        <files mask="classes_6c.html"/>
        <files mask="classes_6c.js"/>
        <files mask="classes_6d.html"/>
        <files mask="classes_6d.js"/>
        <files mask="classes_6e.html"/>
        <files mask="classes_6e.js"/>
        <files mask="classes_70.html"/>
        <files mask="classes_70.js"/>
        <files mask="classes_71.html"/>
        <files mask="classes_71.js"/>
        <files mask="classes_72.html"/>
        <files mask="classes_72.js"/>
        <files mask="classes_73.html"/>
        <files mask="classes_73.js"/>
        <files mask="classes_74.html"/>
        <files mask="classes_74.js"/>
        <files mask="classes_75.html"/>
        <files mask="classes_75.js"/>
        <files mask="classes_77.html"/>
        <files mask="classes_77.js"/>
        <files mask="classes_78.html"/>
        <files mask="classes_78.js"/>
        <files mask="close.png"/>
        <files mask="enums_5f.html"/>
        <files mask="enums_5f.js"/>
        <files mask="enums_61.html"/>
        <files mask="enums_61.js"/>
        <files mask="enums_63.html"/>
        <files mask="enums_63.js"/>
        <files mask="enums_64.html"/>
        <files mask="enums_64.js"/>
        <files mask="enums_65.html"/>
        <files mask="enums_65.js"/>
        <files mask="enums_66.html"/>
        <files mask="enums_66.js"/>
        <files mask="enums_67.html"/>
        <files mask="enums_67.js"/>
        <files mask="enums_69.html"/>
        <files mask="enums_69.js"/>
        <files mask="enums_6b.html"/>
        <files mask="enums_6b.js"/>
        <files mask="enums_6c.html"/>
        <files mask="enums_6c.js"/>
        <files mask="enums_6d.html"/>
        <files mask="enums_6d.js"/>
        <files mask="enums_6e.html"/>
        <files mask="enums_6e.js"/>
        <files mask="enums_70.html"/>
        <files mask="enums_70.js"/>
        <files mask="enums_71.html"/>
        <files mask="enums_71.js"/>
        <files mask="enums_72.html"/>
        <files mask="enums_72.js"/>
        <files mask="enums_73.html"/>
        <files mask="enums_73.js"/>
        <files mask="enums_74.html"/>
        <files mask="enums_74.js"/>
        <files mask="enums_75.html"/>
        <files mask="enums_75.js"/>
        <files mask="enums_77.html"/>
        <files mask="enums_77.js"/>
        <files mask="enums_78.html"/>
        <files mask="enums_78.js"/>
        <files mask="enumvalues_6b.html"/>
        <files mask="enumvalues_6b.js"/>
        <files mask="functions_5f.html"/>
        <files mask="functions_5f.js"/>
        <files mask="functions_61.html"/>
        <files mask="functions_61.js"/>
        <files mask="functions_63.html"/>
        <files mask="functions_63.js"/>
        <files mask="functions_64.html"/>
        <files mask="functions_64.js"/>
        <files mask="functions_65.html"/>
        <files mask="functions_65.js"/>
        <files mask="functions_66.html"/>
        <files mask="functions_66.js"/>
        <files mask="functions_67.html"/>
        <files mask="functions_67.js"/>
        <files mask="functions_68.html"/>
        <files mask="functions_68.js"/>
        <files mask="functions_69.html"/>
        <files mask="functions_69.js"/>
        <files mask="functions_6b.html"/>
        <files mask="functions_6b.js"/>
        <files mask="functions_6c.html"/>
        <files mask="functions_6c.js"/>
        <files mask="functions_6d.html"/>
        <files mask="functions_6d.js"/>
        <files mask="functions_6e.html"/>
        <files mask="functions_6e.js"/>
        <files mask="functions_70.html"/>
        <files mask="functions_70.js"/>
        <files mask="functions_71.html"/>
        <files mask="functions_71.js"/>
        <files mask="functions_72.html"/>
        <files mask="functions_72.js"/>
        <files mask="functions_73.html"/>
        <files mask="functions_73.js"/>
        <files mask="functions_74.html"/>
        <files mask="functions_74.js"/>
        <files mask="functions_75.html"/>
        <files mask="functions_75.js"/>
        <files mask="functions_77.html"/>
        <files mask="functions_77.js"/>
        <files mask="functions_78.html"/>
        <files mask="functions_78.js"/>
        <files mask="groups_61.html"/>
        <files mask="groups_61.js"/>
        <files mask="groups_63.html"/>
        <files mask="groups_63.js"/>
        <files mask="groups_64.html"/>
        <files mask="groups_64.js"/>
        <files mask="groups_65.html"/>
        <files mask="groups_65.js"/>
        <files mask="groups_66.html"/>
        <files mask="groups_66.js"/>
        <files mask="groups_67.html"/>
        <files mask="groups_67.js"/>
        <files mask="groups_68.html"/>
        <files mask="groups_68.js"/>
        <files mask="groups_69.html"/>
        <files mask="groups_69.js"/>
        <files mask="groups_6b.html"/>
        <files mask="groups_6b.js"/>
        <files mask="groups_6c.html"/>
        <files mask="groups_6c.js"/>
        <files mask="groups_6d.html"/>
        <files mask="groups_6d.js"/>
        <files mask="groups_6e.html"/>
        <files mask="groups_6e.js"/>
        <files mask="groups_70.html"/>
        <files mask="groups_70.js"/>
        <files mask="groups_71.html"/>
        <files mask="groups_71.js"/>
        <files mask="groups_72.html"/>
        <files mask="groups_72.js"/>
        <files mask="groups_73.html"/>
        <files mask="groups_73.js"/>
        <files mask="groups_74.html"/>
        <files mask="groups_74.js"/>
        <files mask="groups_75.html"/>
        <files mask="groups_75.js"/>
        <files mask="groups_77.html"/>
        <files mask="groups_77.js"/>
        <files mask="groups_78.html"/>
        <files mask="groups_78.js"/>
        <files mask="mag_sel.png"/>
        <files mask="nomatches.html"/>
        <files mask="pages_61.html"/>
        <files mask="pages_61.js"/>
        <files mask="pages_64.html"/>
        <files mask="pages_64.js"/>
        <files mask="pages_69.html"/>
        <files mask="pages_69.js"/>
        <files mask="pages_74.html"/>
        <files mask="pages_74.js"/>
        <files mask="search.css"/>
        <files mask="search.js"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
        <files mask="search_r.png"/>
        <files mask="typedefs_61.html"/>
        <files mask="typedefs_61.js"/>
        <files mask="typedefs_63.html"/>
        <files mask="typedefs_63.js"/>
        <files mask="typedefs_65.html"/>
        <files mask="typedefs_65.js"/>
        <files mask="typedefs_66.html"/>
        <files mask="typedefs_66.js"/>
        <files mask="typedefs_69.html"/>
        <files mask="typedefs_69.js"/>
        <files mask="typedefs_6c.html"/>
        <files mask="typedefs_6c.js"/>
        <files mask="typedefs_6d.html"/>
        <files mask="typedefs_6d.js"/>
        <files mask="typedefs_6e.html"/>
        <files mask="typedefs_6e.js"/>
        <files mask="typedefs_70.html"/>
        <files mask="typedefs_70.js"/>
        <files mask="typedefs_73.html"/>
        <files mask="typedefs_73.js"/>
        <files mask="typedefs_74.html"/>
        <files mask="typedefs_74.js"/>
        <files mask="typedefs_75.html"/>
        <files mask="typedefs_75.js"/>
        <files mask="variables_5f.html"/>
        <files mask="variables_5f.js"/>
        <files mask="variables_61.html"/>
        <files mask="variables_61.js"/>
        <files mask="variables_62.html"/>
        <files mask="variables_62.js"/>
        <files mask="variables_63.html"/>
        <files mask="variables_63.js"/>
        <files mask="variables_64.html"/>
        <files mask="variables_64.js"/>
        <files mask="variables_65.html"/>
        <files mask="variables_65.js"/>
        <files mask="variables_66.html"/>
        <files mask="variables_66.js"/>
        <files mask="variables_67.html"/>
        <files mask="variables_67.js"/>
        <files mask="variables_68.html"/>
        <files mask="variables_68.js"/>
        <files mask="variables_69.html"/>
        <files mask="variables_69.js"/>
        <files mask="variables_6b.html"/>
        <files mask="variables_6b.js"/>
        <files mask="variables_6c.html"/>
        <files mask="variables_6c.js"/>
        <files mask="variables_6d.html"/>
        <files mask="variables_6d.js"/>
        <files mask="variables_6e.html"/>
        <files mask="variables_6e.js"/>
        <files mask="variables_6f.html"/>
        <files mask="variables_6f.js"/>
        <files mask="variables_70.html"/>
        <files mask="variables_70.js"/>
        <files mask="variables_71.html"/>
        <files mask="variables_71.js"/>
        <files mask="variables_72.html"/>
        <files mask="variables_72.js"/>
        <files mask="variables_73.html"/>
        <files mask="variables_73.js"/>
        <files mask="variables_74.html"/>
        <files mask="variables_74.js"/>
        <files mask="variables_75.html"/>
        <files mask="variables_75.js"/>
        <files mask="variables_76.html"/>
        <files mask="variables_76.js"/>
        <files mask="variables_77.html"/>
        <files mask="variables_77.js"/>
        <files mask="variables_78.html"/>
        <files mask="variables_78.js"/>
        <files mask="variables_79.html"/>
        <files mask="variables_79.js"/>
        <files mask="variables_7a.html"/>
        <files mask="variables_7a.js"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMXRT1189" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="utility.str.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMXRT1189" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT1189" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT1189" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT1189" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="5.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="core/CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_DSP_Source.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_fast_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s8_s16.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s8_s16.c"/>
        <files mask="arm_nn_lstm_update_cell_state_s16.c"/>
        <files mask="arm_nn_lstm_update_output_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_mat_mul_kernel_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_Secure.MIMXRT1189" name="CMSIS_RTOS2_Keil_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="2.1.3" full_name="CMSIS RTOS2 Keil RTX5" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1189"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" project_relative_path="RTX/Library" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libRTX_CM4F.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_Secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_NonSecure.MIMXRT1189" name="CMSIS_RTOS2_Keil_RTX5_NS" brief="CMSIS-RTOS2 RTX5 for Armv8-M Non-Secure Domain (Library)" version="2.1.3" full_name="CMSIS RTOS2 Keil RTX5 Non Secure" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1189"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" project_relative_path="RTX/Library" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libRTX_CM4F.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_NonSecure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MIMXRT1189" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/notifier" project_base_path="utilities/utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_notifier.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT1189" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.extension.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="newlib-freertos.h"/>
        <files mask="picolibc-freertos.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="armgcc mcuxpresso" compiler="compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="src" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" compiler="compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="c_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1189xxxxx"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT1189" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <not>
              <component_dependency value="middleware.freertos-kernel.template.MIMXRT1189"/>
            </not>
            <component_dependency value="middleware.freertos-kernel.template.MIMXRT1189"/>
          </any_of>
          <not>
            <component_dependency value="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT1189" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.cm33_trustzone.secure.context.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT1189" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT1189" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT1189" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT1189" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT1189" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT1189" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT1189" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="false" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.context.MIMXRT1189" name="cm33 trustzone secure context" brief="FreeRTOS cm33 TrustZone secure port" version="11.0.1" full_name="FreeRTOS cm33 TrustZone secure port" category="RTOS/cm33 trustzone secure context" user_visible="false" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure_context.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm33_MIMXRT1189xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT1189" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <not>
              <component_dependency value="middleware.freertos-kernel.template.MIMXRT1189"/>
            </not>
            <component_dependency value="middleware.freertos-kernel.template.MIMXRT1189"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.cm33_trustzone.secure.context.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33/secure" type="src">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="portable/GCC/ARM_CM33/secure" type="c_include">
        <files mask="secure_heap.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.FreeRTOS.MIMXRT1189" name="FreeRTOS documentation" brief="FreeRTOS documentation" version="1.0.0" full_name="FreeRTOS documentation" category="docs/FreeRTOS" user_visible="true" type="documentation" package_base_path="core/docs/FreeRTOS" project_base_path="FreeRTOS">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpressoSDK and FreeRTOS OS.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMXRT1189" name="i2c_freertos" brief="LPI2C FreeRTOS Driver" version="2.3.2" full_name="LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_freertos.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMXRT1189" name="lpspi_freertos" brief="LPSPI FreeRTOS Driver" version="2.3.1" full_name="LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_freertos.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMXRT1189" name="lpuart_freertos" brief="LPUART Freertos Driver" version="2.5.0" full_name="LPUART Freertos Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_freertos.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sysctr.MIMXRT1189" name="sysctr" brief="SYSCTR Driver" version="2.0.0" full_name="SYSCTR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/sysctr" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sysctr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sysctr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sysctr.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tstmr.MIMXRT1189" name="tstmr" brief="TSTMR Driver" version="2.0.2" full_name="TSTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/tstmr" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tstmr.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbar_1.MIMXRT1189" name="xbar" brief="XBAR Driver" version="2.0.3" full_name="XBAR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/xbar_1" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbar.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbar.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xbar_1.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc.MIMXRT1189" name="trdc" brief="TRDC Driver" version="2.3.0" full_name="TRDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/trdc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trdc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tpm.MIMXRT1189" name="tpm" brief="TPM Driver" version="2.3.1" full_name="TPM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/tpm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tpm.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tempsensor.MIMXRT1189" name="tempsensor" brief="TEMPSENSOR Driver" version="2.1.2" full_name="TEMPSENSOR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/tempsensor" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tempsensor.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tempsensor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tempsensor.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1189" name="spdif" brief="SPDIF Driver" version="2.0.7" full_name="SPDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/spdif" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_spdif.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sinc.MIMXRT1189" name="sinc" brief="SINC Driver" version="2.1.4" full_name="SINC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/sinc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sinc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sinc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sinc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.semc.MIMXRT1189" name="semc" brief="SEMC Driver" version="2.7.0" full_name="SEMC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/semc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_semc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT1189" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/sema42" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sema42.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT1189" name="sai" brief="SAI Driver" version="2.4.2" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/sai" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.s3mu.MIMXRT1189" name="s3mu" brief="S3MU Driver" version="2.0.1" full_name="S3MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/s3mu" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_s3mu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_s3mu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_s3mu.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1189" name="rtwdog" brief="RTWDOG Driver" version="2.1.2" full_name="RTWDOG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/rtwdog" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtwdog.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rgpio.MIMXRT1189" name="gpio" brief="RGPIO Driver" version="2.1.0" full_name="RGPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/rgpio" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rgpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rgpio.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1189" name="qtmr" brief="QTMR Driver" version="2.2.2" full_name="QTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/qtmr_1" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_qtmr_1.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1189" name="pwm" brief="PWM Driver" version="2.8.4" full_name="PWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/pwm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pwm.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMXRT1189" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/pdm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.netc_rt1180.MIMXRT1189" name="netc_rt1180" brief="Driver netc imxrt1180" version="2.0.0" full_name="Driver netc_rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/platform/drivers/netc/socs/imxrt1180" project_base_path="drivers/netc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.netc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_netc_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_netc_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_netc_rt1180.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMXRT1189" name="mu" brief="MU Driver" version="2.5.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/mu1" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mu1.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.msgintr.MIMXRT1189" name="msgintr" brief="MSGINTR Driver" version="2.0.2" full_name="MSGINTR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/msgintr" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_msgintr.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_msgintr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_msgintr.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mecc.MIMXRT1189" name="mecc" brief="MECC Driver" version="2.1.0" full_name="MECC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/mecc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mecc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mecc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mecc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1189" name="lpuart" brief="LPUART Driver" version="2.8.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpuart" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MIMXRT1189" name="lptmr" brief="LPTMR Driver" version="2.2.0" full_name="LPTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lptmr" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lptmr.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1189" name="lpspi" brief="LPSPI Driver" version="2.6.8" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpspi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpit.MIMXRT1189" name="lpit" brief="LPIT Driver" version="2.1.1" full_name="LPIT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpit" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpit.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1189" name="i2c" brief="LPI2C Driver" version="2.5.4" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpi2c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT1189" name="lpadc" brief="LPADC Driver" version="2.8.4" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/lpadc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpadc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1189" name="kpp" brief="KPP Driver" version="2.0.1" full_name="KPP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/kpp" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_kpp.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee_apc.MIMXRT1189" name="iee_apc" brief="IEE APC Driver" version="2.0.1" full_name="IEE APC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/iee_apc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee_apc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee_apc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iee_apc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee.MIMXRT1189" name="iee" brief="IEE Driver" version="2.1.1" full_name="IEE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/iee" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iee.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT1189" name="i3c" brief="I3C Driver" version="2.12.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/i3c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_edma.MIMXRT1189" name="i3c_edma" brief="I3C EDMA Driver" version="2.2.9" full_name="I3C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/i3c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMXRT1189"/>
          <component_dependency value="platform.drivers.edma4.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c_edma.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1189" name="gpt" brief="GPT Driver" version="2.0.5" full_name="GPT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/gpt" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpt.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_flr.MIMXRT1189" name="flexspi_flr" brief="FLEXSPI FOLLOWER Driver" version="1.0.0" full_name="FLEXSPI FOLLOWER Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexspi_flr" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_flr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_flr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi_flr.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1189" name="flexspi" brief="FLEXSPI Driver" version="2.6.0" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexspi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1189" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/uart" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1189" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/spi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1189" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/i2s" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1189" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio/i2c" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1189" name="flexio" brief="FLEXIO Driver" version="2.2.2" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexio" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1189" name="flexcan" brief="FLEXCAN Driver" version="2.11.6" full_name="FLEXCAN Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/flexcan" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1189" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/ewm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ewm.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.eqdc.MIMXRT1189" name="eqdc" brief="EQDC Driver" version="2.3.0" full_name="EQDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/eqdc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_eqdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_eqdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_eqdc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac12.MIMXRT1189" name="dac" brief="DAC12 Driver" version="2.1.1" full_name="DAC12 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/dac12" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac12.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac12.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dac12.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMXRT1189" name="common" brief="COMMON Driver" version="2.4.2" full_name="COMMON Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/common" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMXRT1189"/>
          <component_dependency value="platform.devices.MIMXRT1189_CMSIS.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT1189xxxxx cm7_MIMXRT1189xxxxx">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT1189xxxxx cm7_MIMXRT1189xxxxx">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc.MIMXRT1189" name="asrc" brief="asrc Driver" version="2.1.3" full_name="asrc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/asrc" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_asrc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1189" name="aoi" brief="AOI Driver" version="2.0.2" full_name="AOI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/aoi" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_aoi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT1189" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/drivers/acmp" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_acmp.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT1189" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="core/components/wifi_bt_module/template" project_base_path="wifi/template">
      <defines>
        <define name="OSA_USED" value=""/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
        <define name="LWIP_DNS" value="1"/>
        <define name="LWIP_NETIF_HOSTNAME" value="1"/>
        <define name="LWIP_IGMP" value="1"/>
        <define name="_XOPEN_SOURCE" value="500"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT1189"/>
          <component_dependency value="component.wifi_bt_module.config.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="app_config.h"/>
        <files mask="wifi_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT1189" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa.MIMXRT1189" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT1189" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT1189" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.template.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT1189" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT1189" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.net_free_rtos.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT1189" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console.MIMXRT1189"/>
            </all>
            <all>
              <not>
                <component_dependency value="utility.debug_console.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
            </all>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.net.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi-uap.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT1189" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console.MIMXRT1189"/>
            </all>
            <all>
              <not>
                <component_dependency value="utility.debug_console.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
            </all>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT1189" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT1189" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.template.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT1189" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <component_dependency value="utility.debug_console.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT1189" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT1189" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT1189" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wmtime.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wmcrypto.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/wps" type="c_include">
        <files mask="wifi_nxp_wps.h"/>
      </source>
      <source relative_path="wps" type="c_include">
        <files mask="wps_def.h"/>
        <files mask="wps_eapol.h"/>
        <files mask="wps_l2.h"/>
        <files mask="wps_mem.h"/>
        <files mask="wps_msg.h"/>
        <files mask="wps_os.h"/>
        <files mask="wps_wlan.h"/>
      </source>
      <source relative_path="wps" type="src">
        <files mask="wps_eapol.c"/>
        <files mask="wps_l2.c"/>
        <files mask="wps_main.c"/>
        <files mask="wps_mem.c"/>
        <files mask="wps_msg.c"/>
        <files mask="wps_os.c"/>
        <files mask="wps_start.c"/>
        <files mask="wps_state.c"/>
        <files mask="wps_wlan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wps" type="c_include"/>
        <include_path relative_path="incl/wps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT1189" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT1189" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.wpa_supplicant.rtos.MIMXRT1189" name="wpa_supplicant-rtos" brief="Wpa supplicant rtos" version="2.11.0" full_name="Wpa supplicant rtos" category="Wireless/wpa_supplicant" user_visible="true" type="middleware" package_base_path="middleware/wireless/wpa_supplicant-rtos" project_base_path="wpa_supplicant-rtos">
      <defines>
        <define name="USE_RTOS" value="1"/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
        <define name="PRINTF_ADVANCED_ENABLE" value="1"/>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;wpa_supp_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <component_dependency value="utility.debug_console.MIMXRT1189"/>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.cli.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/mbedtls" type="c_include">
        <files mask="wpa_supp_mbedtls_config.h"/>
        <files mask="wpa_supp_els_pkc_mbedtls_config.h"/>
        <files mask="wpa_supp_ele_s400_mbedtls_config.h"/>
        <files mask="supp_crypto.h"/>
      </source>
      <source relative_path="port/mbedtls" type="src">
        <files mask="supp_crypto.c"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="wpa_common.c"/>
        <files mask="ieee802_11_common.c"/>
        <files mask="hw_features_common.c"/>
        <files mask="wpa_ctrl.c"/>
        <files mask="sae.c"/>
        <files mask="dragonfly.c"/>
        <files mask="gas.c"/>
        <files mask="dpp.c"/>
        <files mask="dpp_auth.c"/>
        <files mask="dpp_backup.c"/>
        <files mask="dpp_crypto.c"/>
        <files mask="dpp_pkex.c"/>
        <files mask="dpp_reconfig.c"/>
        <files mask="dpp_tcp.c"/>
        <files mask="gas_server.c"/>
      </source>
      <source relative_path="src/drivers" type="src">
        <files mask="driver_common.c"/>
        <files mask="drivers.c"/>
        <files mask="driver_freertos.c"/>
      </source>
      <source relative_path="src/l2_packet" type="c_include">
        <files mask="l2_packet.h"/>
      </source>
      <source relative_path="src/l2_packet" type="src">
        <files mask="l2_packet_freertos.c"/>
      </source>
      <source relative_path="src/utils" type="src">
        <files mask="base64.c"/>
        <files mask="common.c"/>
        <files mask="wpabuf.c"/>
        <files mask="bitfield.c"/>
        <files mask="os_freertos.c"/>
        <files mask="crc32.c"/>
        <files mask="ip_addr.c"/>
        <files mask="block_alloc.c"/>
        <files mask="wpa_debug.c"/>
        <files mask="uuid.c"/>
        <files mask="eloop_freertos.c"/>
        <files mask="json.c"/>
      </source>
      <source relative_path="src/utils" type="c_include">
        <files mask="dl_list.h"/>
        <files mask="base64.h"/>
        <files mask="bitfield.h"/>
        <files mask="block_alloc.h"/>
        <files mask="browser.h"/>
        <files mask="build_config.h"/>
        <files mask="common.h"/>
        <files mask="config.h"/>
        <files mask="const_time.h"/>
        <files mask="crc32.h"/>
        <files mask="edit.h"/>
        <files mask="eloop.h"/>
        <files mask="ext_password.h"/>
        <files mask="ext_password_i.h"/>
        <files mask="http-utils.h"/>
        <files mask="includes.h"/>
        <files mask="ip_addr.h"/>
        <files mask="json.h"/>
        <files mask="module_tests.h"/>
        <files mask="os.h"/>
        <files mask="pcsc_funcs.h"/>
        <files mask="platform.h"/>
        <files mask="state_machine.h"/>
        <files mask="trace.h"/>
        <files mask="uuid.h"/>
        <files mask="wpabuf.h"/>
        <files mask="wpa_debug.h"/>
        <files mask="xml-utils.h"/>
      </source>
      <source relative_path="wpa_supplicant" type="c_include">
        <files mask="ap.h"/>
        <files mask="autoscan.h"/>
        <files mask="bgscan.h"/>
        <files mask="bss.h"/>
        <files mask="bssid_ignore.h"/>
        <files mask="config.h"/>
        <files mask="config_ssid.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="dpp_supplicant.h"/>
        <files mask="driver_i.h"/>
        <files mask="gas_query.h"/>
        <files mask="hs20_supplicant.h"/>
        <files mask="ibss_rsn.h"/>
        <files mask="interworking.h"/>
        <files mask="mesh.h"/>
        <files mask="mesh_mpm.h"/>
        <files mask="mesh_rsn.h"/>
        <files mask="notify.h"/>
        <files mask="offchannel.h"/>
        <files mask="p2p_supplicant.h"/>
        <files mask="scan.h"/>
        <files mask="sme.h"/>
        <files mask="wifi_display.h"/>
        <files mask="wmm_ac.h"/>
        <files mask="wnm_sta.h"/>
        <files mask="wpas_glue.h"/>
        <files mask="wpas_kay.h"/>
        <files mask="wpa_supplicant_i.h"/>
        <files mask="wps_supplicant.h"/>
      </source>
      <source relative_path="wpa_supplicant/binder" type="c_include">
        <files mask="binder.h"/>
      </source>
      <source relative_path="wpa_supplicant/dbus" type="c_include">
        <files mask="dbus_common.h"/>
        <files mask="dbus_new.h"/>
      </source>
      <source relative_path="freertos/src" type="c_include">
        <files mask="supp_main.h"/>
        <files mask="supp_api.h"/>
        <files mask="wpa_cli.h"/>
      </source>
      <source relative_path="freertos/src" type="src">
        <files mask="wpa_cli.c"/>
        <files mask="supp_main.c"/>
        <files mask="supp_api.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="src">
        <files mask="config.c"/>
        <files mask="notify.c"/>
        <files mask="bss.c"/>
        <files mask="eap_register.c"/>
        <files mask="op_classes.c"/>
        <files mask="rrm.c"/>
        <files mask="wmm_ac.c"/>
        <files mask="config_none.c"/>
        <files mask="sme.c"/>
        <files mask="wpa_supplicant.c"/>
        <files mask="events.c"/>
        <files mask="bssid_ignore.c"/>
        <files mask="wpas_glue.c"/>
        <files mask="scan.c"/>
        <files mask="robust_av.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="ctrl_iface_udp.c"/>
        <files mask="mbo.c"/>
        <files mask="wnm_sta.c"/>
        <files mask="ap.c"/>
        <files mask="p2p_supplicant.c"/>
        <files mask="p2p_supplicant_sd.c"/>
        <files mask="gas_query.c"/>
        <files mask="offchannel.c"/>
        <files mask="wps_supplicant.c"/>
        <files mask="dpp_supplicant.c"/>
        <files mask="interworking.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/ap" type="src">
        <files mask="ap_config.c"/>
        <files mask="ap_drv_ops.c"/>
        <files mask="ap_list.c"/>
        <files mask="ap_mlme.c"/>
        <files mask="authsrv.c"/>
        <files mask="beacon.c"/>
        <files mask="bss_load.c"/>
        <files mask="dfs.c"/>
        <files mask="drv_callbacks.c"/>
        <files mask="eap_user_db.c"/>
        <files mask="hostapd.c"/>
        <files mask="hw_features.c"/>
        <files mask="ieee802_11_auth.c"/>
        <files mask="ieee802_11.c"/>
        <files mask="ieee802_11_he.c"/>
        <files mask="ieee802_11_ht.c"/>
        <files mask="ieee802_11_shared.c"/>
        <files mask="ieee802_11_vht.c"/>
        <files mask="ieee802_1x.c"/>
        <files mask="neighbor_db.c"/>
        <files mask="p2p_hostapd.c"/>
        <files mask="pmksa_cache_auth.c"/>
        <files mask="preauth_auth.c"/>
        <files mask="rrm.c"/>
        <files mask="sta_info.c"/>
        <files mask="tkip_countermeasures.c"/>
        <files mask="utils.c"/>
        <files mask="wmm.c"/>
        <files mask="ctrl_iface_ap.c"/>
        <files mask="mbo_ap.c"/>
        <files mask="wpa_auth.c"/>
        <files mask="wpa_auth_ie.c"/>
        <files mask="wpa_auth_ft.c"/>
        <files mask="wpa_auth_glue.c"/>
        <files mask="wps_hostapd.c"/>
        <files mask="wnm_ap.c"/>
        <files mask="eth_p_oui.c"/>
        <files mask="acs.c"/>
        <files mask="dpp_hostapd.c"/>
        <files mask="gas_query_ap.c"/>
        <files mask="gas_serv.c"/>
      </source>
      <source relative_path="src/eap_common" type="src">
        <files mask="eap_common.c"/>
        <files mask="eap_wsc_common.c"/>
        <files mask="eap_peap_common.c"/>
        <files mask="chap.c"/>
        <files mask="eap_fast_common.c"/>
        <files mask="eap_sim_common.c"/>
      </source>
      <source relative_path="src/eap_server" type="src">
        <files mask="eap_server.c"/>
        <files mask="eap_server_identity.c"/>
        <files mask="eap_server_methods.c"/>
        <files mask="eap_server_wsc.c"/>
        <files mask="eap_server_tls.c"/>
        <files mask="eap_sim_db.c"/>
        <files mask="eap_server_ttls.c"/>
        <files mask="eap_server_tls_common.c"/>
        <files mask="eap_server_peap.c"/>
        <files mask="eap_server_mschapv2.c"/>
        <files mask="eap_server_md5.c"/>
        <files mask="eap_server_gtc.c"/>
        <files mask="eap_server_fast.c"/>
        <files mask="eap_server_sim.c"/>
        <files mask="eap_server_aka.c"/>
      </source>
      <source relative_path="src/eapol_auth" type="src">
        <files mask="eapol_auth_sm.c"/>
      </source>
      <source relative_path="src/crypto" type="src">
        <files mask="aes-eax.c"/>
        <files mask="aes-encblock.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-cbc.c"/>
        <files mask="aes-siv.c"/>
        <files mask="aes-unwrap.c"/>
        <files mask="aes-wrap.c"/>
        <files mask="des-internal.c"/>
        <files mask="dh_groups.c"/>
        <files mask="rc4.c"/>
        <files mask="md4-internal.c"/>
        <files mask="md5.c"/>
        <files mask="md5-internal.c"/>
        <files mask="sha1-internal.c"/>
        <files mask="fips_prf_internal.c"/>
        <files mask="sha256-internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="tls_none.c"/>
        <files mask="ms_funcs.c"/>
        <files mask="sha1-tlsprf.c"/>
        <files mask="sha1-prf.c"/>
        <files mask="sha256-prf.c"/>
        <files mask="sha1-pbkdf2.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-internal-enc.c"/>
        <files mask="aes-internal-dec.c"/>
        <files mask="aes-internal.c"/>
        <files mask="crypto_mbedtls2.c"/>
        <files mask="tls_mbedtls2.c"/>
        <files mask="sha256-kdf.c"/>
        <files mask="sha384-kdf.c"/>
        <files mask="sha512-kdf.c"/>
        <files mask="milenage.c"/>
      </source>
      <source relative_path="src/rsn_supp" type="src">
        <files mask="wpa.c"/>
        <files mask="preauth.c"/>
        <files mask="pmksa_cache.c"/>
        <files mask="wpa_ie.c"/>
        <files mask="wpa_ft.c"/>
      </source>
      <source relative_path="src/p2p" type="src">
        <files mask="p2p.c"/>
        <files mask="p2p_utils.c"/>
        <files mask="p2p_parse.c"/>
        <files mask="p2p_build.c"/>
        <files mask="p2p_go_neg.c"/>
        <files mask="p2p_sd.c"/>
        <files mask="p2p_pd.c"/>
        <files mask="p2p_invitation.c"/>
        <files mask="p2p_dev_disc.c"/>
        <files mask="p2p_group.c"/>
      </source>
      <source relative_path="src/eap_peer" type="src">
        <files mask="eap_wsc.c"/>
        <files mask="eap.c"/>
        <files mask="eap_methods.c"/>
        <files mask="eap_tls.c"/>
        <files mask="eap_tls_common.c"/>
        <files mask="eap_peap.c"/>
        <files mask="eap_ttls.c"/>
        <files mask="eap_mschapv2.c"/>
        <files mask="mschapv2.c"/>
        <files mask="eap_fast.c"/>
        <files mask="eap_fast_pac.c"/>
        <files mask="eap_gtc.c"/>
        <files mask="eap_sim.c"/>
        <files mask="eap_aka.c"/>
      </source>
      <source relative_path="src/wps" type="src">
        <files mask="wps.c"/>
        <files mask="wps_common.c"/>
        <files mask="wps_attr_parse.c"/>
        <files mask="wps_attr_build.c"/>
        <files mask="wps_attr_process.c"/>
        <files mask="wps_dev_attr.c"/>
        <files mask="wps_enrollee.c"/>
        <files mask="wps_registrar.c"/>
      </source>
      <source relative_path="src/eapol_supp" type="src">
        <files mask="eapol_supp_sm.c"/>
      </source>
      <source relative_path="hostapd" type="src">
        <files mask="hlr_auc_gw.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="eap_register.c"/>
      </source>
      <source relative_path="hostapd" type="c_include">
        <files mask="config_file.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="eap_register.h"/>
      </source>
      <source relative_path="hostapd" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/radius" type="src">
        <files mask="radius_server.c"/>
        <files mask="radius_das.c"/>
        <files mask="radius_client.c"/>
        <files mask="radius.c"/>
      </source>
      <source relative_path="src/ap" type="c_include">
        <files mask="acs.h"/>
        <files mask="accounting.h"/>
        <files mask="airtime_policy.h"/>
        <files mask="ap_config.h"/>
        <files mask="ap_drv_ops.h"/>
        <files mask="ap_list.h"/>
        <files mask="ap_mlme.h"/>
        <files mask="authsrv.h"/>
        <files mask="beacon.h"/>
        <files mask="bss_load.h"/>
        <files mask="ctrl_iface_ap.h"/>
        <files mask="dfs.h"/>
        <files mask="dhcp_snoop.h"/>
        <files mask="dpp_hostapd.h"/>
        <files mask="eth_p_oui.h"/>
        <files mask="fils_hlp.h"/>
        <files mask="gas_query_ap.h"/>
        <files mask="gas_serv.h"/>
        <files mask="hostapd.h"/>
        <files mask="hs20.h"/>
        <files mask="hw_features.h"/>
        <files mask="ieee802_11_auth.h"/>
        <files mask="ieee802_11.h"/>
        <files mask="ieee802_1x.h"/>
        <files mask="mbo_ap.h"/>
        <files mask="ndisc_snoop.h"/>
        <files mask="neighbor_db.h"/>
        <files mask="p2p_hostapd.h"/>
        <files mask="pmksa_cache_auth.h"/>
        <files mask="preauth_auth.h"/>
        <files mask="rrm.h"/>
        <files mask="sta_info.h"/>
        <files mask="taxonomy.h"/>
        <files mask="tkip_countermeasures.h"/>
        <files mask="vlan.h"/>
        <files mask="vlan_init.h"/>
        <files mask="vlan_util.h"/>
        <files mask="wmm.h"/>
        <files mask="wnm_ap.h"/>
        <files mask="wpa_auth_glue.h"/>
        <files mask="wpa_auth.h"/>
        <files mask="wpa_auth_ie.h"/>
        <files mask="wpa_auth_i.h"/>
        <files mask="wpa_auth_kay.h"/>
        <files mask="wps_hostapd.h"/>
        <files mask="x_snoop.h"/>
      </source>
      <source relative_path="src/tls" type="src">
        <files mask="asn1.c"/>
      </source>
      <source relative_path="src/common" type="c_include">
        <files mask="brcm_vendor.h"/>
        <files mask="ctrl_iface_common.h"/>
        <files mask="defs.h"/>
        <files mask="dhcp.h"/>
        <files mask="dpp.h"/>
        <files mask="dpp_i.h"/>
        <files mask="dragonfly.h"/>
        <files mask="eapol_common.h"/>
        <files mask="gas.h"/>
        <files mask="gas_server.h"/>
        <files mask="hw_features_common.h"/>
        <files mask="ieee802_11_common.h"/>
        <files mask="ieee802_11_defs.h"/>
        <files mask="ieee802_1x_defs.h"/>
        <files mask="linux_bridge.h"/>
        <files mask="linux_vlan.h"/>
        <files mask="ocv.h"/>
        <files mask="privsep_commands.h"/>
        <files mask="ptksa_cache.h"/>
        <files mask="qca-vendor-attr.h"/>
        <files mask="qca-vendor.h"/>
        <files mask="sae.h"/>
        <files mask="tnc.h"/>
        <files mask="version.h"/>
        <files mask="wpa_common.h"/>
        <files mask="wpa_ctrl.h"/>
        <files mask="wpa_helpers.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="driver.h"/>
        <files mask="driver_hostap.h"/>
        <files mask="driver_freertos.h"/>
        <files mask="rfkill.h"/>
      </source>
      <source relative_path="src/eapol_auth" type="c_include">
        <files mask="eapol_auth_sm.h"/>
        <files mask="eapol_auth_sm_i.h"/>
      </source>
      <source relative_path="src/eap_peer" type="c_include">
        <files mask="eap_config.h"/>
        <files mask="eap_fast_pac.h"/>
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_proxy.h"/>
        <files mask="eap_teap_pac.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="mschapv2.h"/>
        <files mask="tncc.h"/>
      </source>
      <source relative_path="src/fst" type="c_include">
        <files mask="fst_ctrl_aux.h"/>
        <files mask="fst_ctrl_defs.h"/>
        <files mask="fst_ctrl_iface.h"/>
        <files mask="fst_defs.h"/>
        <files mask="fst_group.h"/>
        <files mask="fst.h"/>
        <files mask="fst_iface.h"/>
        <files mask="fst_internal.h"/>
        <files mask="fst_session.h"/>
      </source>
      <source relative_path="src/pae" type="c_include">
        <files mask="ieee802_1x_cp.h"/>
        <files mask="ieee802_1x_kay.h"/>
        <files mask="ieee802_1x_kay_i.h"/>
        <files mask="ieee802_1x_key.h"/>
        <files mask="ieee802_1x_secy_ops.h"/>
      </source>
      <source relative_path="src/rsn_supp" type="c_include">
        <files mask="pmksa_cache.h"/>
        <files mask="preauth.h"/>
        <files mask="wpa.h"/>
        <files mask="wpa_ie.h"/>
        <files mask="wpa_i.h"/>
      </source>
      <source relative_path="src/crypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_i.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="crypto.h"/>
        <files mask="des_i.h"/>
        <files mask="dh_group5.h"/>
        <files mask="dh_groups.h"/>
        <files mask="md5.h"/>
        <files mask="md5_i.h"/>
        <files mask="milenage.h"/>
        <files mask="ms_funcs.h"/>
        <files mask="random.h"/>
        <files mask="sha1.h"/>
        <files mask="sha1_i.h"/>
        <files mask="sha256.h"/>
        <files mask="sha256_i.h"/>
        <files mask="sha384.h"/>
        <files mask="sha384_i.h"/>
        <files mask="sha512.h"/>
        <files mask="sha512_i.h"/>
        <files mask="tls.h"/>
      </source>
      <source relative_path="src/eap_common" type="c_include">
        <files mask="chap.h"/>
        <files mask="eap_common.h"/>
        <files mask="eap_defs.h"/>
        <files mask="eap_eke_common.h"/>
        <files mask="eap_fast_common.h"/>
        <files mask="eap_gpsk_common.h"/>
        <files mask="eap_ikev2_common.h"/>
        <files mask="eap_pax_common.h"/>
        <files mask="eap_peap_common.h"/>
        <files mask="eap_psk_common.h"/>
        <files mask="eap_pwd_common.h"/>
        <files mask="eap_sake_common.h"/>
        <files mask="eap_sim_common.h"/>
        <files mask="eap_teap_common.h"/>
        <files mask="eap_tlv_common.h"/>
        <files mask="eap_ttls.h"/>
        <files mask="eap_wsc_common.h"/>
        <files mask="ikev2_common.h"/>
      </source>
      <source relative_path="src/eapol_supp" type="c_include">
        <files mask="eapol_supp_sm.h"/>
      </source>
      <source relative_path="src/eap_server" type="c_include">
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_sim_db.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="tncs.h"/>
      </source>
      <source relative_path="src/p2p" type="c_include">
        <files mask="p2p.h"/>
        <files mask="p2p_i.h"/>
      </source>
      <source relative_path="src/radius" type="c_include">
        <files mask="radius_client.h"/>
        <files mask="radius_das.h"/>
        <files mask="radius.h"/>
        <files mask="radius_server.h"/>
      </source>
      <source relative_path="src/tls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="pkcs1.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs8.h"/>
        <files mask="rsa.h"/>
        <files mask="tlsv1_client.h"/>
        <files mask="tlsv1_client_i.h"/>
        <files mask="tlsv1_common.h"/>
        <files mask="tlsv1_cred.h"/>
        <files mask="tlsv1_record.h"/>
        <files mask="tlsv1_server.h"/>
        <files mask="tlsv1_server_i.h"/>
        <files mask="x509v3.h"/>
      </source>
      <source relative_path="src/wps" type="c_include">
        <files mask="http_client.h"/>
        <files mask="http.h"/>
        <files mask="httpread.h"/>
        <files mask="http_server.h"/>
        <files mask="upnp_xml.h"/>
        <files mask="wps_attr_parse.h"/>
        <files mask="wps_defs.h"/>
        <files mask="wps_dev_attr.h"/>
        <files mask="wps_er.h"/>
        <files mask="wps.h"/>
        <files mask="wps_i.h"/>
        <files mask="wps_upnp.h"/>
        <files mask="wps_upnp_i.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_wpa_supplicant_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/utils" type="c_include"/>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/crypto" type="c_include"/>
        <include_path relative_path="src/ap" type="c_include"/>
        <include_path relative_path="src/drivers" type="c_include"/>
        <include_path relative_path="src/eap_common" type="c_include"/>
        <include_path relative_path="src/eap_peer" type="c_include"/>
        <include_path relative_path="src/eap_server" type="c_include"/>
        <include_path relative_path="src/eapol_auth" type="c_include"/>
        <include_path relative_path="src/eapol_supp" type="c_include"/>
        <include_path relative_path="src/fst" type="c_include"/>
        <include_path relative_path="src/l2_packet" type="c_include"/>
        <include_path relative_path="src/p2p" type="c_include"/>
        <include_path relative_path="src/pae" type="c_include"/>
        <include_path relative_path="src/radius" type="c_include"/>
        <include_path relative_path="src/rsn_supp" type="c_include"/>
        <include_path relative_path="src/tls" type="c_include"/>
        <include_path relative_path="src/wps" type="c_include"/>
        <include_path relative_path="port/mbedtls" type="c_include"/>
        <include_path relative_path="hostapd" type="c_include"/>
        <include_path relative_path="wpa_supplicant" type="c_include"/>
        <include_path relative_path="freertos" type="c_include"/>
        <include_path relative_path="freertos/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.wifi_bt.MIMXRT1189" name="doc_wifi_bt_rt" brief="Wi-Fi and Bluetooth documentation" version="1.0.0" full_name="Wi-Fi and Bluetooth documentation" category="docs/wifi_bt_rt" user_visible="true" type="documentation" package_base_path="core/docs/wireless" project_base_path="wireless">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="Wi-Fi" type="doc">
        <files mask="AN12917-Compliance-and-certification-considerations.pdf"/>
        <files mask="AN12918-Wi-Fi-Tx-Power-Table-and-Channel-Scan-Management-for-i.MX-RT-SDK.pdf"/>
        <files mask="MCUXpresso_SDK_WLAN_Driver_Reference_Manual.pdf"/>
        <files mask="TN00066-WFA-Derivative-Certification-Process.pdf"/>
        <files mask="UM11567-WFA-Certification-Guide-for-NXP-based-Wireless-Modules-on-i.MX-RT-Platform-Running-RTOS.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="UM11441-Getting-Started-with-NXP-based-Wireless-Modules-and-i.MX-RT-Platform-Running-on-RTOS.pdf"/>
        <files mask="UM11442-NXP-Wi-Fi-and-Bluetooth-Demo-Applications-for-i.MX-RT-platforms-User-Guide.pdf"/>
        <files mask="UM11443-NXP-Wi-Fi-and-Bluetooth-Debug-Feature-Configuration-Guide-for-i.MX-RT-Platforms.pdf"/>
      </source>
      <source relative_path="Release Notes" type="doc">
        <files mask="RN00174-Wireless-SoC-features-and-release-notes-for-FreeRTOS.pdf"/>
      </source>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1189" name="USB Host EHCI Controller Driver(HS)" brief="Middleware usb host ehci" version="2.10.1" full_name="USB Host EHCI Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.ehci_config_header.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1189"/>
          <component_dependency value="middleware.usb.phy.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1189" name="USB Host Audio" brief="Middleware usb host audio" version="2.10.1" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1189" name="USB Host CDC" brief="Middleware usb host cdc" version="2.10.1" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT1189" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.10.1" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1189" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.10.1" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1189" name="USB Host HID" brief="Middleware usb host hid" version="2.10.1" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1189" name="USB Host MSD" brief="Middleware usb host msd" version="2.10.1" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT1189" name="USB Host Video" brief="Middleware usb host video" version="2.10.1" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1189" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.10.1" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1189" name="USB Host Printer" brief="Middleware usb host printer" version="2.10.1" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT1189" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.10.1" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT1189" name="USB host ehci config header" brief="USB host ehci config header" version="2.10.1" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="output/npw/host_config/ehci" project_relative_path="generated" config="true" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ehci_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/host_config/ehci" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT1189" name="USB Host Stack" brief="Middleware usb host stack" version="2.10.1" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT1189" name="USB device ehci config header" brief="USB device ehci config header" version="2.10.1" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="output/npw/device_config/ehci" project_relative_path="generated" config="true" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ehci_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/device_config/ehci" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.common_header.MIMXRT1189" name="USB Common Header" brief="Middleware usb common_header" version="2.10.1" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT1189" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.10.1" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1189" name="USB Device EHCI Controller Driver(HS)" brief="Middleware usb device ehci" version="2.10.1" full_name="USB Device EHCI Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.ehci_config_header.MIMXRT1189"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1189"/>
          <component_dependency value="middleware.usb.phy.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/source/ehci" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT1189" name="USB PHY" brief="Middleware usb phy" version="2.10.1" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1189"/>
          <component_dependency value="platform.drivers.memory.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.external.MIMXRT1189" name="USB Device Stack" brief="Middleware usb device stack external" version="2.10.1" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class" type="c_include"/>
        <include_path relative_path="output/source/device" project_relative_path="device/source" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
        <include_path relative_path="output/source/device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.external.MIMXRT1189" name="USB Device Audio" brief="Middleware usb device audio external" version="2.10.1" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.external.MIMXRT1189" name="USB Device CDC" brief="Middleware usb device cdc external" version="2.10.1" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.external.MIMXRT1189" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis external" version="2.10.1" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.external.MIMXRT1189" name="USB Device HID" brief="Middleware usb device hid external" version="2.10.1" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.external.MIMXRT1189" name="USB Device DFU" brief="Middleware usb device dfu external" version="2.10.1" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.external.MIMXRT1189" name="USB Device MSD" brief="Middleware usb device msd external" version="2.10.1" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.external.MIMXRT1189" name="USB Device PHDC" brief="Middleware usb device phdc external" version="2.10.1" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.external.MIMXRT1189" name="USB Device Video" brief="Middleware usb device video external" version="2.10.1" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.external.MIMXRT1189" name="USB Device CCID" brief="Middleware usb device ccid external" version="2.10.1" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.external.MIMXRT1189" name="USB Device Printer" brief="Middleware usb device printer external" version="2.10.1" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer_external.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT1189" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.10.1" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.hsdcd_config_header.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT1189" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.10.1" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <component_dependency value="middleware.usb.device_controller_ehci.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="device" type="c_include">
        <files mask="usb_device_mcux_drv_port.h" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.bm.MIMXRT1189" name="sdmmc_osa_bm" brief="Middleware sdmmc osa_bm" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa_bm.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT1189" name="sdmmc_osa_freertos" brief="Middleware sdmmc osa_freertos" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa_free_rtos.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1189" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sd" project_relative_path="src" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" project_relative_path="inc" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source relative_path="sd" project_relative_path="./sd" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1189" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mmc" project_relative_path="src" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" project_relative_path="inc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source relative_path="mmc" project_relative_path="./mmc" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1189" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio" project_relative_path="src" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source relative_path="sdio" project_relative_path="./sdio" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT1189" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1189"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1189"/>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189" name="sdmmc_host_usdhc_freertos" brief="Middleware sdmmc host usdhc freertos" version="2.6.3" full_name="Middleware sdmmc host usdhc freertos" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.cache.MIMXRT1189"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1189" name="sdmmc_host_usdhc_interrupt" brief="Middleware sdmmc host usdhc interrupt" version="2.6.3" full_name="Middleware sdmmc host usdhc interrupt" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT1189"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.cache.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_interrupt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT1189" name="sdmmc_host_usdhc_polling" brief="Middleware sdmmc host usdhc polling" version="2.6.3" full_name="Middleware sdmmc host usdhc polling" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT1189"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.cache.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_polling.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.cache.MIMXRT1189" name="SDMMC host controller cache dependency" brief="SDMMC host controller cache dependency" version="1.0.0" full_name="SDMMC host controller cache dependency" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_cache.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.zephyr.MIMXRT1189" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/zephyr" project_relative_path="include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr" type="other">
        <files mask="module.yml"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr" project_relative_path="zephyr" type="other">
        <files mask="Kconfig" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong" type="other">
        <files mask="Kconfig.sysbuild"/>
        <files mask="README.rst"/>
        <files mask="prj.conf"/>
        <files mask="sample.yaml"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong" type="c_include">
        <files mask="common.h"/>
        <files mask="rpmsg_config.h"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong" type="script">
        <files mask="sysbuild.cmake"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong" project_relative_path="zephyr/samples/rpmsglite_pingpong" type="other">
        <files mask="Kconfig" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/boards" project_relative_path="zephyr/samples/rpmsglite_pingpong/boards" type="other">
        <files mask="lpcxpresso54114_m4.conf" hidden="true"/>
        <files mask="lpcxpresso54114_m4.overlay" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu0.conf" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu0.overlay" hidden="true"/>
        <files mask="mimxrt1160_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.overlay" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/remote" project_relative_path="zephyr/samples/rpmsglite_pingpong/remote" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/remote" project_relative_path="zephyr/samples/rpmsglite_pingpong/remote" type="other">
        <files mask="prj.conf" hidden="true"/>
        <files mask="sample.yaml" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/remote/boards" project_relative_path="zephyr/samples/rpmsglite_pingpong/remote/boards" type="other">
        <files mask="lpcxpresso54114_m0.conf" hidden="true"/>
        <files mask="lpcxpresso54114_m0.overlay" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu1.conf" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu1.overlay" hidden="true"/>
        <files mask="mimxrt1160_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.overlay" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/remote/src" project_relative_path="zephyr/samples/rpmsglite_pingpong/remote/src" type="src">
        <files mask="main.c" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/zephyr/samples/rpmsglite_pingpong/src" project_relative_path="zephyr/samples/rpmsglite_pingpong/src" type="src">
        <files mask="main.c" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/zephyr" project_relative_path="include/environment/zephyr" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.MIMXRT1189" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <any_of>
            <board_dependency value="evkmimxrt1180"/>
            <device_dependency value="MIMXRT1189xxxxx"/>
          </any_of>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMXRT1189"/>
            <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMXRT1189"/>
            <component_dependency value="middleware.multicore.rpmsg_lite.xos.MIMXRT1189"/>
            <component_dependency value="middleware.multicore.rpmsg_lite.azurertos.MIMXRT1189"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_env.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/common" project_relative_path="common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/virtio" project_relative_path="virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source relative_path="rpmsg_lite" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="doc">
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="all_8.html" hidden="true"/>
        <files mask="all_9.html" hidden="true"/>
        <files mask="all_a.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
        <files mask="variables_8.html" hidden="true"/>
        <files mask="variables_9.html" hidden="true"/>
        <files mask="variables_a.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
        <files mask="variables_8.js" hidden="true"/>
        <files mask="variables_9.js" hidden="true"/>
        <files mask="variables_a.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imxrt1180_bm.MIMXRT1189" name="rpmsg_lite_imxrt1180_bm" brief="RPMsg-Lite for evkmimxrt1180 baremetal application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt1180 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imxrt1180" project_relative_path="include/platform/imxrt1180" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imxrt1180" project_relative_path="rpmsg_lite/porting/platform/imxrt1180" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_imxrt1180_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imxrt1180" project_relative_path="include/platform/imxrt1180" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imxrt1180_freertos.MIMXRT1189" name="rpmsg_lite_imxrt1180_freertos" brief="RPMsg-Lite for evkmimxrt1180 FreeRTOS application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt1180 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imxrt1180" project_relative_path="include/platform/imxrt1180" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imxrt1180" project_relative_path="rpmsg_lite/porting/platform/imxrt1180" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_imxrt1180_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imxrt1180" project_relative_path="include/platform/imxrt1180" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.imxrt1180.MIMXRT1189" name="rpmsg_lite_bm_imxrt1180" brief="RPMsg-Lite baremetal for evkmimxrt1180 board" version="5.1.2" full_name="Remote Procedure Messaging Lite BM for evkmimxrt1180 board" category="Multicore/Inter-Core Messaging System" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.mcmgr.imxrt1180.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.imxrt1180_bm.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" config="true" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_bm_config_imxrt1180.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.imxrt1180.MIMXRT1189" name="rpmsg_lite_freertos_imxrt1180" brief="RPMsg-Lite FreeRTOS for evkmimxrt1180 board" version="5.1.2" full_name="Remote Procedure Messaging Lite FreeRTOS for evkmimxrt1180 board" category="Multicore/Inter-Core Messaging System" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.mcmgr.imxrt1180.MIMXRT1189"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.imxrt1180_freertos.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" config="true" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg_lite_freertos_config_imxrt1180.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.MIMXRT1189" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="mcmgr/src" project_relative_path="./" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" project_relative_path="./" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source relative_path="mcmgr" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="image">
        <files mask="MCMgrDataExchangeDiagram.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="mcsdk.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="doc">
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_68267d1309a1af8e8297ef4c3efbcdba.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="group__mcmgr.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="mcmgr_8h_source.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__mcmgr.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.imxrt1180.MIMXRT1189" name="mcmgr_imxrt1180" brief="Multicore Manager for evkmimxrt1180 board" version="4.1.5" full_name="Multicore Manager for evkmimxrt1180 board" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.mcmgr.MIMXRT1189"/>
          <component_dependency value="platform.drivers.mu1.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" project_relative_path="./" type="src">
        <files mask="mcmgr_internal_core_api_imxrt1180.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr_imxrt1180.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.common.MIMXRT1189" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_arbitrator.MIMXRT1189" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_client.MIMXRT1189" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_server.MIMXRT1189" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_remote_c_wrapper.MIMXRT1189" name="eRPC_rpmsg_tty_rtos_remote_c_wrapper" brief="eRPC_rpmsg_tty_rtos_remote_c_wrapper" version="1.13.0" full_name="eRPC RPMsg-Lite remote TTY RTOS C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_remote_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_c_wrapper.MIMXRT1189" name="eRPC_mu_c_wrapper" brief="eRPC_mu_c_wrapper" version="1.13.0" full_name="eRPC Messaging Unit C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_master_c_wrapper.MIMXRT1189" name="eRPC_rpmsg_lite_master_c_wrapper" brief="eRPC_rpmsg_lite_master_c_wrapper" version="1.13.0" full_name="eRPC RPMsg-Lite master C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_master_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_remote_c_wrapper.MIMXRT1189" name="eRPC_rpmsg_lite_remote_c_wrapper" brief="eRPC_rpmsg_lite_remote_c_wrapper" version="1.13.0" full_name="eRPC RPMsg-Lite remote C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_remote_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_master_c_wrapper.MIMXRT1189" name="eRPC_rpmsg_lite_rtos_master_c_wrapper" brief="eRPC_rpmsg_lite_rtos_master_c_wrapper" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS master C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_master_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_remote_c_wrapper.MIMXRT1189" name="eRPC_rpmsg_lite_rtos_remote_c_wrapper" brief="eRPC_rpmsg_lite_rtos_remote_c_wrapper" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS remote C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_remote_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_c_wrapper.MIMXRT1189" name="eRPC_dspi_master_c_wrapper" brief="eRPC_dspi_master_c_wrapper" version="1.13.0" full_name="eRPC DSPI master C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_c_wrapper.MIMXRT1189" name="eRPC_dspi_slave_c_wrapper" brief="eRPC_dspi_slave_c_wrapper" version="1.13.0" full_name="eRPC DSPI slave C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_c_wrapper.MIMXRT1189" name="eRPC_spi_master_c_wrapper" brief="eRPC_spi_master_c_wrapper" version="1.13.0" full_name="eRPC SPI master C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_c_wrapper.MIMXRT1189" name="eRPC_spi_slave_c_wrapper" brief="eRPC_spi_slave_c_wrapper" version="1.13.0" full_name="eRPC SPI slave C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_c_wrapper.MIMXRT1189" name="eRPC_lpspi_slave_c_wrapper" brief="eRPC_lpspi_slave_c_wrapper" version="1.13.0" full_name="eRPC LPSPI slave C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_c_wrapper.MIMXRT1189" name="eRPC_i2c_slave_c_wrapper" brief="eRPC_i2c_slave_c_wrapper" version="1.13.0" full_name="eRPC I2C slave C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_c_wrapper.MIMXRT1189" name="eRPC_lpi2c_slave_c_wrapper" brief="eRPC_lpi2c_slave_c_wrapper" version="1.13.0" full_name="eRPC LPI2C slave C Wrapper" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_c_wrapper.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMXRT1189" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_rtos_transport.MIMXRT1189" name="eRPC_mu_rtos_transport" brief="eRPC_mu_rtos_transport" version="1.13.0" full_name="eRPC MU RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport.MIMXRT1189" name="eRPC_rpmsg_lite_transport" brief="eRPC_rpmsg_lite_transport" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport.MIMXRT1189" name="eRPC_rpmsg_lite_rtos_transport" brief="eRPC_rpmsg_lite_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMXRT1189" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMXRT1189" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_uart_cmsis.cpp"/>
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMXRT1189" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMXRT1189" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMXRT1189" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMXRT1189" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMXRT1189" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMXRT1189" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMXRT1189" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_freertos.MIMXRT1189" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_stdlib.MIMXRT1189" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMXRT1189" name="eRPC_documentation" brief="erpc_doc" version="1.13.0" full_name="eRPC doc" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/docs" project_relative_path="doc" type="doc">
        <files mask="erpcgen.md" hidden="true"/>
        <files mask="eRPC-infrastructure.md" hidden="true"/>
        <files mask="erpcsniffer.md" hidden="true"/>
        <files mask="eRPC-footprint.md" hidden="true"/>
        <files mask="Home.md" hidden="true"/>
        <files mask="IDL-Reference.md" hidden="true"/>
        <files mask="Porting-Guide.md" hidden="true"/>
        <files mask="Contributing.md" hidden="true"/>
        <files mask="Getting-Started.md" hidden="true"/>
        <files mask="_Sidebar.md" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/images" project_relative_path="doc" type="image">
        <files mask="sendingReceivingParameterValue.png" hidden="true"/>
        <files mask="eRPCwith_erpc_server_run_function.png" hidden="true"/>
        <files mask="eRPCusing_erpc_server_poll_function.png" hidden="true"/>
        <files mask="eRPC_directory.png" hidden="true"/>
        <files mask="client_side_flowchart.png" hidden="true"/>
        <files mask="RPCblockDiagram.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.zephyr.MIMXRT1189" name="eRPC_zephyr_sources" brief="erpc_zephyr" version="1.13.0" full_name="eRPC Zephyr sources" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_c/port" type="src">
        <files mask="erpc_port_zephyr.cpp" hidden="true"/>
        <files mask="erpc_threading_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/zephyr" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="readme.md"/>
      </source>
      <source relative_path="erpc/zephyr" type="other">
        <files mask="module.yml"/>
      </source>
      <source relative_path="erpc/zephyr" project_relative_path="zephyr" type="other">
        <files mask="Kconfig" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox" type="other">
        <files mask="Kconfig.sysbuild"/>
        <files mask="README.rst"/>
        <files mask="prj.conf"/>
        <files mask="sample.yaml"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox" type="script">
        <files mask="sysbuild.cmake"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox" project_relative_path="zephyr/examples/matrix_multiply_mbox" type="other">
        <files mask="Kconfig" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/boards" project_relative_path="zephyr/examples/matrix_multiply_mbox/boards" type="other">
        <files mask="mimxrt1160_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.overlay" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote" type="other">
        <files mask="prj.conf" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/boards" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/boards" type="other">
        <files mask="mimxrt1160_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.overlay" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src" type="c_include">
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_server.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_server.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/remote/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src" project_relative_path="zephyr/examples/matrix_multiply_mbox/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src" project_relative_path="zephyr/examples/matrix_multiply_mbox/src" type="c_include">
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_client.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_client.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_client.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_mbox/src/service" project_relative_path="zephyr/examples/matrix_multiply_mbox/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_client.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite" type="other">
        <files mask="Kconfig.sysbuild"/>
        <files mask="README.rst"/>
        <files mask="prj.conf"/>
        <files mask="sample.yaml"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite" type="c_include">
        <files mask="erpc_config.h"/>
        <files mask="rpmsg_config.h"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite" type="script">
        <files mask="sysbuild.cmake"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite" type="other">
        <files mask="Kconfig" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/boards" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/boards" type="other">
        <files mask="lpcxpresso54114_m4.conf" hidden="true"/>
        <files mask="lpcxpresso54114_m4.overlay" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu0.conf" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu0.overlay" hidden="true"/>
        <files mask="mimxrt1160_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm7.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm7.overlay" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote" type="other">
        <files mask="prj.conf" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/boards" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/boards" type="other">
        <files mask="lpcxpresso54114_m0.conf" hidden="true"/>
        <files mask="lpcxpresso54114_m0.overlay" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu1.conf" hidden="true"/>
        <files mask="lpcxpresso55s69_cpu1.overlay" hidden="true"/>
        <files mask="mimxrt1160_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1160_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evk_cm4.overlay" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.conf" hidden="true"/>
        <files mask="mimxrt1170_evkb_cm4.overlay" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src" type="c_include">
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_server.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_server.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/remote/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/remote/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src" type="c_include">
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_client.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_client.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_client.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_rpmsglite/src/service" project_relative_path="zephyr/examples/matrix_multiply_rpmsglite/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_client.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp" project_relative_path="zephyr/examples/matrix_multiply_tcp" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp" project_relative_path="zephyr/examples/matrix_multiply_tcp" type="other">
        <files mask="README.rst" hidden="true"/>
        <files mask="prj.conf" hidden="true"/>
        <files mask="sample.yaml" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src" project_relative_path="zephyr/examples/matrix_multiply_tcp/src" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src" project_relative_path="zephyr/examples/matrix_multiply_tcp/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src/service" project_relative_path="zephyr/examples/matrix_multiply_tcp/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_server.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src/service" project_relative_path="zephyr/examples/matrix_multiply_tcp/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_server.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src/service" project_relative_path="zephyr/examples/matrix_multiply_tcp/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_tcp/src/service" project_relative_path="zephyr/examples/matrix_multiply_tcp/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart" project_relative_path="zephyr/examples/matrix_multiply_uart" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart" project_relative_path="zephyr/examples/matrix_multiply_uart" type="other">
        <files mask="README.rst" hidden="true"/>
        <files mask="prj.conf" hidden="true"/>
        <files mask="sample.yaml" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src" project_relative_path="zephyr/examples/matrix_multiply_uart/src" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
        <files mask="erpc_error_handler.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src" project_relative_path="zephyr/examples/matrix_multiply_uart/src" type="src">
        <files mask="erpc_error_handler.cpp" hidden="true"/>
        <files mask="main.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src/service" project_relative_path="zephyr/examples/matrix_multiply_uart/src/service" type="src">
        <files mask="c_erpc_matrix_multiply_server.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.cpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src/service" project_relative_path="zephyr/examples/matrix_multiply_uart/src/service" type="c_include">
        <files mask="c_erpc_matrix_multiply_server.h" hidden="true"/>
        <files mask="erpc_matrix_multiply_common.h" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src/service" project_relative_path="zephyr/examples/matrix_multiply_uart/src/service" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/zephyr/matrix_multiply_uart/src/service" project_relative_path="zephyr/examples/matrix_multiply_uart/src/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_interface.hpp" hidden="true"/>
        <files mask="erpc_matrix_multiply_server.hpp" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_zephyr.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.java.MIMXRT1189" name="eRPC_java_sources" brief="erpc_java" version="1.13.0" full_name="eRPC Java sources" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_java" project_relative_path="erpc_java" type="xml">
        <files mask="checkstyle.xml" hidden="true"/>
        <files mask="deploy.xml" hidden="true"/>
        <files mask="pom.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java" project_relative_path="erpc_java" type="doc">
        <files mask="readme.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/main/java/io/github/embeddedrpc/erpc/auxiliary" project_relative_path="erpc_java/src/main/java/io/github/embeddedrpc/erpc/auxiliary" type="other">
        <files mask="Crc16.java" hidden="true"/>
        <files mask="MessageInfo.java" hidden="true"/>
        <files mask="MessageType.java" hidden="true"/>
        <files mask="Reference.java" hidden="true"/>
        <files mask="RequestContext.java" hidden="true"/>
        <files mask="RequestError.java" hidden="true"/>
        <files mask="Utils.java" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/main/java/io/github/embeddedrpc/erpc/client" project_relative_path="erpc_java/src/main/java/io/github/embeddedrpc/erpc/client" type="other">
        <files mask="ClientManager.java" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/main/java/io/github/embeddedrpc/erpc/codec" project_relative_path="erpc_java/src/main/java/io/github/embeddedrpc/erpc/codec" type="other">
        <files mask="BasicCodec.java" hidden="true"/>
        <files mask="BasicCodecFactory.java" hidden="true"/>
        <files mask="Codec.java" hidden="true"/>
        <files mask="CodecError.java" hidden="true"/>
        <files mask="CodecFactory.java" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/main/java/io/github/embeddedrpc/erpc/server" project_relative_path="erpc_java/src/main/java/io/github/embeddedrpc/erpc/server" type="other">
        <files mask="Server.java" hidden="true"/>
        <files mask="Service.java" hidden="true"/>
        <files mask="SimpleServer.java" hidden="true"/>
        <files mask="ThreadServer.java" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/main/java/io/github/embeddedrpc/erpc/transport" project_relative_path="erpc_java/src/main/java/io/github/embeddedrpc/erpc/transport" type="other">
        <files mask="FramedTransport.java" hidden="true"/>
        <files mask="RequestError.java" hidden="true"/>
        <files mask="SerialTransport.java" hidden="true"/>
        <files mask="TCPTransport.java" hidden="true"/>
        <files mask="Transport.java" hidden="true"/>
        <files mask="TransportError.java" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_java/src/test/java/io/github/embeddedrpc/erpc/codec" project_relative_path="erpc_java/src/test/java/io/github/embeddedrpc/erpc/codec" type="other">
        <files mask="BasicCodecTest.java" hidden="true"/>
        <files mask="CRC16Test.java" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_java.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.examples.MIMXRT1189" name="eRPC_examples" brief="erpc_examples" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples" project_relative_path="examples" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/examples" project_relative_path="examples" type="script">
        <files mask="smac.erpc" hidden="true"/>
        <files mask="temp_alarm.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/ble" project_relative_path="examples/ble" type="script">
        <files mask="ble_common.erpc" hidden="true"/>
        <files mask="ble_gap.erpc" hidden="true"/>
        <files mask="ble_gatt.erpc" hidden="true"/>
        <files mask="bluetooth.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java" project_relative_path="examples/matrix_multiply_java" type="xml">
        <files mask="pom.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java" project_relative_path="examples/matrix_multiply_java" type="doc">
        <files mask="readme.md" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example" project_relative_path="examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example" type="other">
        <files mask="Main.java" hidden="true"/>
        <files mask="MatrixMultiplyService.java" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/client" project_relative_path="examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/client" type="other">
        <files mask="MatrixMultiplyServiceClient.java" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/common" project_relative_path="examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/common" type="other">
        <files mask="Constants.java" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/interfaces" project_relative_path="examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/interfaces" type="other">
        <files mask="IMatrixMultiplyService.java" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/server" project_relative_path="examples/matrix_multiply_java/src/main/java/io/github/embeddedrpc/erpc/example/erpc_matrix_multiply/server" type="other">
        <files mask="AbstractMatrixMultiplyServiceService.java" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_java/src/main/resources" project_relative_path="examples/matrix_multiply_java/src/main/resources" type="script">
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_tcp_python" project_relative_path="examples/matrix_multiply_tcp_python" type="script">
        <files mask="matrix_multiply.py" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_tcp_python" project_relative_path="examples/matrix_multiply_tcp_python" type="doc">
        <files mask="readme.md" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_tcp_python/service" project_relative_path="examples/matrix_multiply_tcp_python/service" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="erpc_matrix_multiply.erpc" hidden="true"/>
      </source>
      <source relative_path="erpc/examples/matrix_multiply_tcp_python/service/erpc_matrix_multiply" project_relative_path="examples/matrix_multiply_tcp_python/service/erpc_matrix_multiply" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="common.py" hidden="true"/>
        <files mask="interface.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.MIMXRT1189" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="doc">
        <files mask="annotated.html" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory-members.html" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory.html" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory-members.html" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory.html" hidden="true"/>
        <files mask="class_static_message_buffer_factory-members.html" hidden="true"/>
        <files mask="class_static_message_buffer_factory.html" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager-members.html" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec-members.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory.html" hidden="true"/>
        <files mask="classerpc_1_1_client_manager-members.html" hidden="true"/>
        <files mask="classerpc_1_1_client_manager.html" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common-members.html" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common.html" hidden="true"/>
        <files mask="classerpc_1_1_codec-members.html" hidden="true"/>
        <files mask="classerpc_1_1_codec.html" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory.html" hidden="true"/>
        <files mask="classerpc_1_1_crc16-members.html" hidden="true"/>
        <files mask="classerpc_1_1_crc16.html" hidden="true"/>
        <files mask="classerpc_1_1_cursor-members.html" hidden="true"/>
        <files mask="classerpc_1_1_cursor.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed-members.html" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer-members.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory.html" hidden="true"/>
        <files mask="classerpc_1_1_message_logger-members.html" hidden="true"/>
        <files mask="classerpc_1_1_message_logger.html" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers-members.html" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex-members.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard-members.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.html" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action-members.html" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base-members.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_request_context-members.html" hidden="true"/>
        <files mask="classerpc_1_1_request_context.html" hidden="true"/>
        <files mask="classerpc_1_1_semaphore-members.html" hidden="true"/>
        <files mask="classerpc_1_1_semaphore.html" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_server-members.html" hidden="true"/>
        <files mask="classerpc_1_1_server.html" hidden="true"/>
        <files mask="classerpc_1_1_service-members.html" hidden="true"/>
        <files mask="classerpc_1_1_service.html" hidden="true"/>
        <files mask="classerpc_1_1_simple_server-members.html" hidden="true"/>
        <files mask="classerpc_1_1_simple_server.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_static_queue-members.html" hidden="true"/>
        <files mask="classerpc_1_1_static_queue.html" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_thread-members.html" hidden="true"/>
        <files mask="classerpc_1_1_thread.html" hidden="true"/>
        <files mask="classerpc_1_1_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator-members.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory.html" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport.html" hidden="true"/>
        <files mask="classes.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_000001_000004.html" hidden="true"/>
        <files mask="dir_000002_000001.html" hidden="true"/>
        <files mask="dir_000002_000004.html" hidden="true"/>
        <files mask="dir_000002_000005.html" hidden="true"/>
        <files mask="dir_000004_000001.html" hidden="true"/>
        <files mask="dir_000004_000003.html" hidden="true"/>
        <files mask="dir_000005_000001.html" hidden="true"/>
        <files mask="dir_000005_000004.html" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac.html" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562.html" hidden="true"/>
        <files mask="dir_52949f44d4caf8ec53681e2fdb42569d.html" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815.html" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88.html" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8hpp.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8hpp_source.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp.html" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp_source.html" hidden="true"/>
        <files mask="erpc__client__manager_8h.html" hidden="true"/>
        <files mask="erpc__client__manager_8h_source.html" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp.html" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp_source.html" hidden="true"/>
        <files mask="erpc__client__setup_8h.html" hidden="true"/>
        <files mask="erpc__client__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__codec_8hpp.html" hidden="true"/>
        <files mask="erpc__codec_8hpp_source.html" hidden="true"/>
        <files mask="erpc__common_8h_source.html" hidden="true"/>
        <files mask="erpc__config_8h.html" hidden="true"/>
        <files mask="erpc__config_8h_source.html" hidden="true"/>
        <files mask="erpc__config__internal_8h_source.html" hidden="true"/>
        <files mask="erpc__crc16_8hpp.html" hidden="true"/>
        <files mask="erpc__crc16_8hpp_source.html" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__endianness__agnostic__example_8h_source.html" hidden="true"/>
        <files mask="erpc__endianness__undefined_8h_source.html" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__i2c__slave__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__i2c__slave__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__lpi2c__slave__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__lpi2c__slave__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__lpspi__slave__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__lpspi__slave__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp.html" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp_source.html" hidden="true"/>
        <files mask="erpc__mbf__setup_8h.html" hidden="true"/>
        <files mask="erpc__mbf__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp.html" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp_source.html" hidden="true"/>
        <files mask="erpc__message__loggers_8hpp.html" hidden="true"/>
        <files mask="erpc__message__loggers_8hpp_source.html" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__port_8h.html" hidden="true"/>
        <files mask="erpc__port_8h_source.html" hidden="true"/>
        <files mask="erpc__pre__post__action_8h.html" hidden="true"/>
        <files mask="erpc__pre__post__action_8h_source.html" hidden="true"/>
        <files mask="erpc__rpmsg__linux__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp_source.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__serial_8h.html" hidden="true"/>
        <files mask="erpc__serial_8h_source.html" hidden="true"/>
        <files mask="erpc__serial__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__serial__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__server_8hpp.html" hidden="true"/>
        <files mask="erpc__server_8hpp_source.html" hidden="true"/>
        <files mask="erpc__server__setup_8h.html" hidden="true"/>
        <files mask="erpc__server__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__setup__extensions_8h.html" hidden="true"/>
        <files mask="erpc__setup__extensions_8h_source.html" hidden="true"/>
        <files mask="erpc__simple__server_8hpp.html" hidden="true"/>
        <files mask="erpc__simple__server_8hpp_source.html" hidden="true"/>
        <files mask="erpc__spi__master__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__spi__master__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__spidev_8h_source.html" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__static__queue_8hpp.html" hidden="true"/>
        <files mask="erpc__static__queue_8hpp_source.html" hidden="true"/>
        <files mask="erpc__sysgpio_8h_source.html" hidden="true"/>
        <files mask="erpc__tcp__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__tcp__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__threading_8h.html" hidden="true"/>
        <files mask="erpc__threading_8h_source.html" hidden="true"/>
        <files mask="erpc__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8hpp.html" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8hpp_source.html" hidden="true"/>
        <files mask="erpc__transport__setup_8h.html" hidden="true"/>
        <files mask="erpc__transport__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__uart__zephyr__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__uart__zephyr__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8hpp.html" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8hpp_source.html" hidden="true"/>
        <files mask="erpc__utils_8hpp_source.html" hidden="true"/>
        <files mask="erpc__version_8h_source.html" hidden="true"/>
        <files mask="files.html" hidden="true"/>
        <files mask="functions.html" hidden="true"/>
        <files mask="functions_0x7e.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="functions_func.html" hidden="true"/>
        <files mask="functions_func_0x7e.html" hidden="true"/>
        <files mask="functions_func_b.html" hidden="true"/>
        <files mask="functions_func_c.html" hidden="true"/>
        <files mask="functions_func_d.html" hidden="true"/>
        <files mask="functions_func_f.html" hidden="true"/>
        <files mask="functions_func_g.html" hidden="true"/>
        <files mask="functions_func_h.html" hidden="true"/>
        <files mask="functions_func_i.html" hidden="true"/>
        <files mask="functions_func_l.html" hidden="true"/>
        <files mask="functions_func_m.html" hidden="true"/>
        <files mask="functions_func_o.html" hidden="true"/>
        <files mask="functions_func_p.html" hidden="true"/>
        <files mask="functions_func_r.html" hidden="true"/>
        <files mask="functions_func_s.html" hidden="true"/>
        <files mask="functions_func_t.html" hidden="true"/>
        <files mask="functions_func_u.html" hidden="true"/>
        <files mask="functions_func_v.html" hidden="true"/>
        <files mask="functions_func_w.html" hidden="true"/>
        <files mask="functions_g.html" hidden="true"/>
        <files mask="functions_h.html" hidden="true"/>
        <files mask="functions_i.html" hidden="true"/>
        <files mask="functions_k.html" hidden="true"/>
        <files mask="functions_l.html" hidden="true"/>
        <files mask="functions_m.html" hidden="true"/>
        <files mask="functions_o.html" hidden="true"/>
        <files mask="functions_p.html" hidden="true"/>
        <files mask="functions_r.html" hidden="true"/>
        <files mask="functions_s.html" hidden="true"/>
        <files mask="functions_t.html" hidden="true"/>
        <files mask="functions_type.html" hidden="true"/>
        <files mask="functions_u.html" hidden="true"/>
        <files mask="functions_v.html" hidden="true"/>
        <files mask="functions_vars.html" hidden="true"/>
        <files mask="functions_w.html" hidden="true"/>
        <files mask="globals.html" hidden="true"/>
        <files mask="globals_defs.html" hidden="true"/>
        <files mask="globals_func.html" hidden="true"/>
        <files mask="globals_type.html" hidden="true"/>
        <files mask="graph_legend.html" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.html" hidden="true"/>
        <files mask="group__client__setup.html" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__dspi__master__transport.html" hidden="true"/>
        <files mask="group__dspi__slave__transport.html" hidden="true"/>
        <files mask="group__i2c__slave__transport.html" hidden="true"/>
        <files mask="group__infra.html" hidden="true"/>
        <files mask="group__infra__client.html" hidden="true"/>
        <files mask="group__infra__codec.html" hidden="true"/>
        <files mask="group__infra__server.html" hidden="true"/>
        <files mask="group__infra__transport.html" hidden="true"/>
        <files mask="group__infra__utility.html" hidden="true"/>
        <files mask="group__itbp__transport.html" hidden="true"/>
        <files mask="group__lpi2c__slave__transport.html" hidden="true"/>
        <files mask="group__lpspi__slave__transport.html" hidden="true"/>
        <files mask="group__mbox__transport.html" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.html" hidden="true"/>
        <files mask="group__mu__transport.html" hidden="true"/>
        <files mask="group__port.html" hidden="true"/>
        <files mask="group__port__mem.html" hidden="true"/>
        <files mask="group__port__serial.html" hidden="true"/>
        <files mask="group__port__setup__extensions.html" hidden="true"/>
        <files mask="group__port__spidev.html" hidden="true"/>
        <files mask="group__port__sysgpio.html" hidden="true"/>
        <files mask="group__port__threads.html" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.html" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.html" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.html" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.html" hidden="true"/>
        <files mask="group__serial__transport.html" hidden="true"/>
        <files mask="group__server__setup.html" hidden="true"/>
        <files mask="group__setup.html" hidden="true"/>
        <files mask="group__spi__master__transport.html" hidden="true"/>
        <files mask="group__spi__slave__transport.html" hidden="true"/>
        <files mask="group__spidev__master__transport.html" hidden="true"/>
        <files mask="group__tcp__transport.html" hidden="true"/>
        <files mask="group__transport__setup.html" hidden="true"/>
        <files mask="group__transports.html" hidden="true"/>
        <files mask="group__uart__transport.html" hidden="true"/>
        <files mask="hierarchy.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="inherits.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="struct_i2_c___c_l_b___u_s_e_r___d_a_t_a-members.html" hidden="true"/>
        <files mask="struct_i2_c___c_l_b___u_s_e_r___d_a_t_a.html" hidden="true"/>
        <files mask="struct_l_p_i2_c___c_l_b___u_s_e_r___d_a_t_a-members.html" hidden="true"/>
        <files mask="struct_l_p_i2_c___c_l_b___u_s_e_r___d_a_t_a.html" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info-members.html" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="script">
        <files mask="annotated_dup.js" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory.js" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory.js" hidden="true"/>
        <files mask="class_static_message_buffer_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.js" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec.js" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_client_manager.js" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common.js" hidden="true"/>
        <files mask="classerpc_1_1_codec.js" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_crc16.js" hidden="true"/>
        <files mask="classerpc_1_1_cursor.js" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed.js" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer.js" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_message_logger.js" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers.js" hidden="true"/>
        <files mask="classerpc_1_1_mutex.js" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.js" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_request_context.js" hidden="true"/>
        <files mask="classerpc_1_1_semaphore.js" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_server.js" hidden="true"/>
        <files mask="classerpc_1_1_service.js" hidden="true"/>
        <files mask="classerpc_1_1_simple_server.js" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_static_queue.js" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_thread.js" hidden="true"/>
        <files mask="classerpc_1_1_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator.js" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h.js" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp.js" hidden="true"/>
        <files mask="erpc__client__manager_8h.js" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp.js" hidden="true"/>
        <files mask="erpc__client__setup_8h.js" hidden="true"/>
        <files mask="erpc__codec_8hpp.js" hidden="true"/>
        <files mask="erpc__config_8h.js" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp.js" hidden="true"/>
        <files mask="erpc__mbf__setup_8h.js" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp.js" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp.js" hidden="true"/>
        <files mask="erpc__port_8h.js" hidden="true"/>
        <files mask="erpc__pre__post__action_8h.js" hidden="true"/>
        <files mask="erpc__serial_8h.js" hidden="true"/>
        <files mask="erpc__server__setup_8h.js" hidden="true"/>
        <files mask="erpc__setup__extensions_8h.js" hidden="true"/>
        <files mask="erpc__threading_8h.js" hidden="true"/>
        <files mask="erpc__transport__setup_8h.js" hidden="true"/>
        <files mask="files.js" hidden="true"/>
        <files mask="functions_dup.js" hidden="true"/>
        <files mask="functions_func.js" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.js" hidden="true"/>
        <files mask="group__client__setup.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__dspi__master__transport.js" hidden="true"/>
        <files mask="group__dspi__slave__transport.js" hidden="true"/>
        <files mask="group__i2c__slave__transport.js" hidden="true"/>
        <files mask="group__infra.js" hidden="true"/>
        <files mask="group__infra__client.js" hidden="true"/>
        <files mask="group__infra__codec.js" hidden="true"/>
        <files mask="group__infra__server.js" hidden="true"/>
        <files mask="group__infra__transport.js" hidden="true"/>
        <files mask="group__infra__utility.js" hidden="true"/>
        <files mask="group__itbp__transport.js" hidden="true"/>
        <files mask="group__lpi2c__slave__transport.js" hidden="true"/>
        <files mask="group__lpspi__slave__transport.js" hidden="true"/>
        <files mask="group__mbox__transport.js" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.js" hidden="true"/>
        <files mask="group__mu__transport.js" hidden="true"/>
        <files mask="group__port.js" hidden="true"/>
        <files mask="group__port__mem.js" hidden="true"/>
        <files mask="group__port__serial.js" hidden="true"/>
        <files mask="group__port__setup__extensions.js" hidden="true"/>
        <files mask="group__port__threads.js" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.js" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.js" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.js" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.js" hidden="true"/>
        <files mask="group__serial__transport.js" hidden="true"/>
        <files mask="group__server__setup.js" hidden="true"/>
        <files mask="group__setup.js" hidden="true"/>
        <files mask="group__spi__master__transport.js" hidden="true"/>
        <files mask="group__spi__slave__transport.js" hidden="true"/>
        <files mask="group__spidev__master__transport.js" hidden="true"/>
        <files mask="group__tcp__transport.js" hidden="true"/>
        <files mask="group__transport__setup.js" hidden="true"/>
        <files mask="group__transports.js" hidden="true"/>
        <files mask="group__uart__transport.js" hidden="true"/>
        <files mask="hierarchy.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreeindex1.js" hidden="true"/>
        <files mask="navtreeindex2.js" hidden="true"/>
        <files mask="navtreeindex3.js" hidden="true"/>
        <files mask="navtreeindex4.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="struct_i2_c___c_l_b___u_s_e_r___d_a_t_a.js" hidden="true"/>
        <files mask="struct_l_p_i2_c___c_l_b___u_s_e_r___d_a_t_a.js" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="rpc_block_diagram.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="other">
        <files mask="class_dynamic_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_i2c_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_l_p_i2c_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_l_p_spi_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_b_o_x_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.svg" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.map" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.md5" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.svg" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.map" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.md5" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.svg" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.map" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.md5" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.svg" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.map" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.md5" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.svg" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.map" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.md5" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.svg" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.svg" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__basic__codec_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.map" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.md5" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.svg" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__client__server__common_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.svg" hidden="true"/>
        <files mask="erpc__codec_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__codec_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__codec_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__codec_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__codec_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__codec_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__crc16_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__crc16_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__crc16_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__crc16_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__crc16_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__crc16_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__framed__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__i2c__slave__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__i2c__slave__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__i2c__slave__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__lpi2c__slave__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__lpi2c__slave__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__lpi2c__slave__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__lpspi__slave__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__lpspi__slave__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__lpspi__slave__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__manually__constructed_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.svg" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__mbox__zephyr__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__message__loggers_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__message__loggers_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__message__loggers_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__mu__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__port_8h__incl.map" hidden="true"/>
        <files mask="erpc__port_8h__incl.md5" hidden="true"/>
        <files mask="erpc__port_8h__incl.svg" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.map" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.md5" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__serial_8h__incl.map" hidden="true"/>
        <files mask="erpc__serial_8h__incl.md5" hidden="true"/>
        <files mask="erpc__serial_8h__incl.svg" hidden="true"/>
        <files mask="erpc__serial__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__serial__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__serial__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__server_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__server_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__server_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__server_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__server_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__server_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.svg" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.map" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.md5" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.svg" hidden="true"/>
        <files mask="erpc__simple__server_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__simple__server_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__simple__server_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__spi__master__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__spi__master__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__spi__master__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__static__queue_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__tcp__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__tcp__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__tcp__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__threading_8h__incl.map" hidden="true"/>
        <files mask="erpc__threading_8h__incl.md5" hidden="true"/>
        <files mask="erpc__threading_8h__incl.svg" hidden="true"/>
        <files mask="erpc__transport_8hpp__dep__incl.map" hidden="true"/>
        <files mask="erpc__transport_8hpp__dep__incl.md5" hidden="true"/>
        <files mask="erpc__transport_8hpp__dep__incl.svg" hidden="true"/>
        <files mask="erpc__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.svg" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__uart__zephyr__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__uart__zephyr__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__uart__zephyr__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8hpp__incl.map" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8hpp__incl.md5" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8hpp__incl.svg" hidden="true"/>
        <files mask="graph_legend.md5" hidden="true"/>
        <files mask="graph_legend.svg" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.map" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.md5" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.svg" hidden="true"/>
        <files mask="group__client__setup.map" hidden="true"/>
        <files mask="group__client__setup.md5" hidden="true"/>
        <files mask="group__client__setup.svg" hidden="true"/>
        <files mask="group__dspi__master__transport.map" hidden="true"/>
        <files mask="group__dspi__master__transport.md5" hidden="true"/>
        <files mask="group__dspi__master__transport.svg" hidden="true"/>
        <files mask="group__dspi__slave__transport.map" hidden="true"/>
        <files mask="group__dspi__slave__transport.md5" hidden="true"/>
        <files mask="group__dspi__slave__transport.svg" hidden="true"/>
        <files mask="group__i2c__slave__transport.map" hidden="true"/>
        <files mask="group__i2c__slave__transport.md5" hidden="true"/>
        <files mask="group__i2c__slave__transport.svg" hidden="true"/>
        <files mask="group__infra.map" hidden="true"/>
        <files mask="group__infra.md5" hidden="true"/>
        <files mask="group__infra.svg" hidden="true"/>
        <files mask="group__infra__client.map" hidden="true"/>
        <files mask="group__infra__client.md5" hidden="true"/>
        <files mask="group__infra__client.svg" hidden="true"/>
        <files mask="group__infra__codec.map" hidden="true"/>
        <files mask="group__infra__codec.md5" hidden="true"/>
        <files mask="group__infra__codec.svg" hidden="true"/>
        <files mask="group__infra__server.map" hidden="true"/>
        <files mask="group__infra__server.md5" hidden="true"/>
        <files mask="group__infra__server.svg" hidden="true"/>
        <files mask="group__infra__transport.map" hidden="true"/>
        <files mask="group__infra__transport.md5" hidden="true"/>
        <files mask="group__infra__transport.svg" hidden="true"/>
        <files mask="group__infra__utility.map" hidden="true"/>
        <files mask="group__infra__utility.md5" hidden="true"/>
        <files mask="group__infra__utility.svg" hidden="true"/>
        <files mask="group__itbp__transport.map" hidden="true"/>
        <files mask="group__itbp__transport.md5" hidden="true"/>
        <files mask="group__itbp__transport.svg" hidden="true"/>
        <files mask="group__lpi2c__slave__transport.map" hidden="true"/>
        <files mask="group__lpi2c__slave__transport.md5" hidden="true"/>
        <files mask="group__lpi2c__slave__transport.svg" hidden="true"/>
        <files mask="group__lpspi__slave__transport.map" hidden="true"/>
        <files mask="group__lpspi__slave__transport.md5" hidden="true"/>
        <files mask="group__lpspi__slave__transport.svg" hidden="true"/>
        <files mask="group__mbox__transport.map" hidden="true"/>
        <files mask="group__mbox__transport.md5" hidden="true"/>
        <files mask="group__mbox__transport.svg" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.map" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.md5" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.svg" hidden="true"/>
        <files mask="group__mu__transport.map" hidden="true"/>
        <files mask="group__mu__transport.md5" hidden="true"/>
        <files mask="group__mu__transport.svg" hidden="true"/>
        <files mask="group__port.map" hidden="true"/>
        <files mask="group__port.md5" hidden="true"/>
        <files mask="group__port.svg" hidden="true"/>
        <files mask="group__port__mem.map" hidden="true"/>
        <files mask="group__port__mem.md5" hidden="true"/>
        <files mask="group__port__mem.svg" hidden="true"/>
        <files mask="group__port__serial.map" hidden="true"/>
        <files mask="group__port__serial.md5" hidden="true"/>
        <files mask="group__port__serial.svg" hidden="true"/>
        <files mask="group__port__setup__extensions.map" hidden="true"/>
        <files mask="group__port__setup__extensions.md5" hidden="true"/>
        <files mask="group__port__setup__extensions.svg" hidden="true"/>
        <files mask="group__port__spidev.map" hidden="true"/>
        <files mask="group__port__spidev.md5" hidden="true"/>
        <files mask="group__port__spidev.svg" hidden="true"/>
        <files mask="group__port__sysgpio.map" hidden="true"/>
        <files mask="group__port__sysgpio.md5" hidden="true"/>
        <files mask="group__port__sysgpio.svg" hidden="true"/>
        <files mask="group__port__threads.map" hidden="true"/>
        <files mask="group__port__threads.md5" hidden="true"/>
        <files mask="group__port__threads.svg" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.map" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.md5" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.svg" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.map" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.md5" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.svg" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.map" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.md5" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.svg" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.map" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.md5" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.svg" hidden="true"/>
        <files mask="group__serial__transport.map" hidden="true"/>
        <files mask="group__serial__transport.md5" hidden="true"/>
        <files mask="group__serial__transport.svg" hidden="true"/>
        <files mask="group__server__setup.map" hidden="true"/>
        <files mask="group__server__setup.md5" hidden="true"/>
        <files mask="group__server__setup.svg" hidden="true"/>
        <files mask="group__setup.map" hidden="true"/>
        <files mask="group__setup.md5" hidden="true"/>
        <files mask="group__setup.svg" hidden="true"/>
        <files mask="group__spi__master__transport.map" hidden="true"/>
        <files mask="group__spi__master__transport.md5" hidden="true"/>
        <files mask="group__spi__master__transport.svg" hidden="true"/>
        <files mask="group__spi__slave__transport.map" hidden="true"/>
        <files mask="group__spi__slave__transport.md5" hidden="true"/>
        <files mask="group__spi__slave__transport.svg" hidden="true"/>
        <files mask="group__spidev__master__transport.map" hidden="true"/>
        <files mask="group__spidev__master__transport.md5" hidden="true"/>
        <files mask="group__spidev__master__transport.svg" hidden="true"/>
        <files mask="group__tcp__transport.map" hidden="true"/>
        <files mask="group__tcp__transport.md5" hidden="true"/>
        <files mask="group__tcp__transport.svg" hidden="true"/>
        <files mask="group__transport__setup.map" hidden="true"/>
        <files mask="group__transport__setup.md5" hidden="true"/>
        <files mask="group__transport__setup.svg" hidden="true"/>
        <files mask="group__transports.map" hidden="true"/>
        <files mask="group__transports.md5" hidden="true"/>
        <files mask="group__transports.svg" hidden="true"/>
        <files mask="group__uart__transport.map" hidden="true"/>
        <files mask="group__uart__transport.md5" hidden="true"/>
        <files mask="group__uart__transport.svg" hidden="true"/>
        <files mask="inherit_graph_0.map" hidden="true"/>
        <files mask="inherit_graph_0.md5" hidden="true"/>
        <files mask="inherit_graph_0.svg" hidden="true"/>
        <files mask="inherit_graph_1.map" hidden="true"/>
        <files mask="inherit_graph_1.md5" hidden="true"/>
        <files mask="inherit_graph_1.svg" hidden="true"/>
        <files mask="inherit_graph_10.map" hidden="true"/>
        <files mask="inherit_graph_10.md5" hidden="true"/>
        <files mask="inherit_graph_10.svg" hidden="true"/>
        <files mask="inherit_graph_11.map" hidden="true"/>
        <files mask="inherit_graph_11.md5" hidden="true"/>
        <files mask="inherit_graph_11.svg" hidden="true"/>
        <files mask="inherit_graph_12.map" hidden="true"/>
        <files mask="inherit_graph_12.md5" hidden="true"/>
        <files mask="inherit_graph_12.svg" hidden="true"/>
        <files mask="inherit_graph_13.map" hidden="true"/>
        <files mask="inherit_graph_13.md5" hidden="true"/>
        <files mask="inherit_graph_13.svg" hidden="true"/>
        <files mask="inherit_graph_14.map" hidden="true"/>
        <files mask="inherit_graph_14.md5" hidden="true"/>
        <files mask="inherit_graph_14.svg" hidden="true"/>
        <files mask="inherit_graph_15.map" hidden="true"/>
        <files mask="inherit_graph_15.md5" hidden="true"/>
        <files mask="inherit_graph_15.svg" hidden="true"/>
        <files mask="inherit_graph_16.map" hidden="true"/>
        <files mask="inherit_graph_16.md5" hidden="true"/>
        <files mask="inherit_graph_16.svg" hidden="true"/>
        <files mask="inherit_graph_17.map" hidden="true"/>
        <files mask="inherit_graph_17.md5" hidden="true"/>
        <files mask="inherit_graph_17.svg" hidden="true"/>
        <files mask="inherit_graph_18.map" hidden="true"/>
        <files mask="inherit_graph_18.md5" hidden="true"/>
        <files mask="inherit_graph_18.svg" hidden="true"/>
        <files mask="inherit_graph_19.map" hidden="true"/>
        <files mask="inherit_graph_19.md5" hidden="true"/>
        <files mask="inherit_graph_19.svg" hidden="true"/>
        <files mask="inherit_graph_2.map" hidden="true"/>
        <files mask="inherit_graph_2.md5" hidden="true"/>
        <files mask="inherit_graph_2.svg" hidden="true"/>
        <files mask="inherit_graph_20.map" hidden="true"/>
        <files mask="inherit_graph_20.md5" hidden="true"/>
        <files mask="inherit_graph_20.svg" hidden="true"/>
        <files mask="inherit_graph_21.map" hidden="true"/>
        <files mask="inherit_graph_21.md5" hidden="true"/>
        <files mask="inherit_graph_21.svg" hidden="true"/>
        <files mask="inherit_graph_22.map" hidden="true"/>
        <files mask="inherit_graph_22.md5" hidden="true"/>
        <files mask="inherit_graph_22.svg" hidden="true"/>
        <files mask="inherit_graph_23.map" hidden="true"/>
        <files mask="inherit_graph_23.md5" hidden="true"/>
        <files mask="inherit_graph_23.svg" hidden="true"/>
        <files mask="inherit_graph_24.map" hidden="true"/>
        <files mask="inherit_graph_24.md5" hidden="true"/>
        <files mask="inherit_graph_24.svg" hidden="true"/>
        <files mask="inherit_graph_25.map" hidden="true"/>
        <files mask="inherit_graph_25.md5" hidden="true"/>
        <files mask="inherit_graph_25.svg" hidden="true"/>
        <files mask="inherit_graph_3.map" hidden="true"/>
        <files mask="inherit_graph_3.md5" hidden="true"/>
        <files mask="inherit_graph_3.svg" hidden="true"/>
        <files mask="inherit_graph_4.map" hidden="true"/>
        <files mask="inherit_graph_4.md5" hidden="true"/>
        <files mask="inherit_graph_4.svg" hidden="true"/>
        <files mask="inherit_graph_5.map" hidden="true"/>
        <files mask="inherit_graph_5.md5" hidden="true"/>
        <files mask="inherit_graph_5.svg" hidden="true"/>
        <files mask="inherit_graph_6.map" hidden="true"/>
        <files mask="inherit_graph_6.md5" hidden="true"/>
        <files mask="inherit_graph_6.svg" hidden="true"/>
        <files mask="inherit_graph_7.map" hidden="true"/>
        <files mask="inherit_graph_7.md5" hidden="true"/>
        <files mask="inherit_graph_7.svg" hidden="true"/>
        <files mask="inherit_graph_8.map" hidden="true"/>
        <files mask="inherit_graph_8.md5" hidden="true"/>
        <files mask="inherit_graph_8.svg" hidden="true"/>
        <files mask="inherit_graph_9.map" hidden="true"/>
        <files mask="inherit_graph_9.md5" hidden="true"/>
        <files mask="inherit_graph_9.svg" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.map" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.md5" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.svg" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.map" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.md5" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.svg" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_10.html" hidden="true"/>
        <files mask="all_11.html" hidden="true"/>
        <files mask="all_12.html" hidden="true"/>
        <files mask="all_13.html" hidden="true"/>
        <files mask="all_14.html" hidden="true"/>
        <files mask="all_15.html" hidden="true"/>
        <files mask="all_16.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="all_8.html" hidden="true"/>
        <files mask="all_9.html" hidden="true"/>
        <files mask="all_a.html" hidden="true"/>
        <files mask="all_b.html" hidden="true"/>
        <files mask="all_c.html" hidden="true"/>
        <files mask="all_d.html" hidden="true"/>
        <files mask="all_e.html" hidden="true"/>
        <files mask="all_f.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="classes_1.html" hidden="true"/>
        <files mask="classes_2.html" hidden="true"/>
        <files mask="classes_3.html" hidden="true"/>
        <files mask="classes_4.html" hidden="true"/>
        <files mask="classes_5.html" hidden="true"/>
        <files mask="classes_6.html" hidden="true"/>
        <files mask="classes_7.html" hidden="true"/>
        <files mask="classes_8.html" hidden="true"/>
        <files mask="classes_9.html" hidden="true"/>
        <files mask="classes_a.html" hidden="true"/>
        <files mask="classes_b.html" hidden="true"/>
        <files mask="classes_c.html" hidden="true"/>
        <files mask="classes_d.html" hidden="true"/>
        <files mask="classes_e.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="enums_2.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="functions_1.html" hidden="true"/>
        <files mask="functions_10.html" hidden="true"/>
        <files mask="functions_11.html" hidden="true"/>
        <files mask="functions_12.html" hidden="true"/>
        <files mask="functions_13.html" hidden="true"/>
        <files mask="functions_2.html" hidden="true"/>
        <files mask="functions_3.html" hidden="true"/>
        <files mask="functions_4.html" hidden="true"/>
        <files mask="functions_5.html" hidden="true"/>
        <files mask="functions_6.html" hidden="true"/>
        <files mask="functions_7.html" hidden="true"/>
        <files mask="functions_8.html" hidden="true"/>
        <files mask="functions_9.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="groups_1.html" hidden="true"/>
        <files mask="groups_2.html" hidden="true"/>
        <files mask="groups_3.html" hidden="true"/>
        <files mask="groups_4.html" hidden="true"/>
        <files mask="groups_5.html" hidden="true"/>
        <files mask="groups_6.html" hidden="true"/>
        <files mask="groups_7.html" hidden="true"/>
        <files mask="groups_8.html" hidden="true"/>
        <files mask="groups_9.html" hidden="true"/>
        <files mask="groups_a.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="typedefs_1.html" hidden="true"/>
        <files mask="typedefs_2.html" hidden="true"/>
        <files mask="typedefs_3.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_10.js" hidden="true"/>
        <files mask="all_11.js" hidden="true"/>
        <files mask="all_12.js" hidden="true"/>
        <files mask="all_13.js" hidden="true"/>
        <files mask="all_14.js" hidden="true"/>
        <files mask="all_15.js" hidden="true"/>
        <files mask="all_16.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="all_b.js" hidden="true"/>
        <files mask="all_c.js" hidden="true"/>
        <files mask="all_d.js" hidden="true"/>
        <files mask="all_e.js" hidden="true"/>
        <files mask="all_f.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="classes_1.js" hidden="true"/>
        <files mask="classes_2.js" hidden="true"/>
        <files mask="classes_3.js" hidden="true"/>
        <files mask="classes_4.js" hidden="true"/>
        <files mask="classes_5.js" hidden="true"/>
        <files mask="classes_6.js" hidden="true"/>
        <files mask="classes_7.js" hidden="true"/>
        <files mask="classes_8.js" hidden="true"/>
        <files mask="classes_9.js" hidden="true"/>
        <files mask="classes_a.js" hidden="true"/>
        <files mask="classes_b.js" hidden="true"/>
        <files mask="classes_c.js" hidden="true"/>
        <files mask="classes_d.js" hidden="true"/>
        <files mask="classes_e.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="enums_2.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="functions_1.js" hidden="true"/>
        <files mask="functions_10.js" hidden="true"/>
        <files mask="functions_11.js" hidden="true"/>
        <files mask="functions_12.js" hidden="true"/>
        <files mask="functions_13.js" hidden="true"/>
        <files mask="functions_2.js" hidden="true"/>
        <files mask="functions_3.js" hidden="true"/>
        <files mask="functions_4.js" hidden="true"/>
        <files mask="functions_5.js" hidden="true"/>
        <files mask="functions_6.js" hidden="true"/>
        <files mask="functions_7.js" hidden="true"/>
        <files mask="functions_8.js" hidden="true"/>
        <files mask="functions_9.js" hidden="true"/>
        <files mask="functions_a.js" hidden="true"/>
        <files mask="functions_b.js" hidden="true"/>
        <files mask="functions_c.js" hidden="true"/>
        <files mask="functions_d.js" hidden="true"/>
        <files mask="functions_e.js" hidden="true"/>
        <files mask="functions_f.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="groups_1.js" hidden="true"/>
        <files mask="groups_2.js" hidden="true"/>
        <files mask="groups_3.js" hidden="true"/>
        <files mask="groups_4.js" hidden="true"/>
        <files mask="groups_5.js" hidden="true"/>
        <files mask="groups_6.js" hidden="true"/>
        <files mask="groups_7.js" hidden="true"/>
        <files mask="groups_8.js" hidden="true"/>
        <files mask="groups_9.js" hidden="true"/>
        <files mask="groups_a.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="typedefs_1.js" hidden="true"/>
        <files mask="typedefs_2.js" hidden="true"/>
        <files mask="typedefs_3.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="doc">
        <files mask="_alias_type_8hpp_source.html" hidden="true"/>
        <files mask="_annotation_8hpp_source.html" hidden="true"/>
        <files mask="_array_type_8hpp_source.html" hidden="true"/>
        <files mask="_ast_node_8hpp_source.html" hidden="true"/>
        <files mask="_ast_walker_8hpp_source.html" hidden="true"/>
        <files mask="_builtin_type_8hpp_source.html" hidden="true"/>
        <files mask="_c_generator_8hpp_source.html" hidden="true"/>
        <files mask="_const_type_8hpp_source.html" hidden="true"/>
        <files mask="_data_type_8hpp_source.html" hidden="true"/>
        <files mask="_enum_member_8hpp_source.html" hidden="true"/>
        <files mask="_enum_type_8hpp_source.html" hidden="true"/>
        <files mask="_erpc_lexer_8hpp_source.html" hidden="true"/>
        <files mask="_function_8hpp_source.html" hidden="true"/>
        <files mask="_function_type_8hpp_source.html" hidden="true"/>
        <files mask="_generator_8hpp_source.html" hidden="true"/>
        <files mask="_group_8hpp_source.html" hidden="true"/>
        <files mask="_hex_values_8hpp_source.html" hidden="true"/>
        <files mask="_interface_8hpp_source.html" hidden="true"/>
        <files mask="_interface_definition_8hpp_source.html" hidden="true"/>
        <files mask="_java_generator_8hpp_source.html" hidden="true"/>
        <files mask="_list_type_8hpp_source.html" hidden="true"/>
        <files mask="_logging_8hpp_source.html" hidden="true"/>
        <files mask="_parse_errors_8hpp_source.html" hidden="true"/>
        <files mask="_program_8hpp_source.html" hidden="true"/>
        <files mask="_python_generator_8hpp_source.html" hidden="true"/>
        <files mask="_search_path_8hpp_source.html" hidden="true"/>
        <files mask="_struct_member_8hpp_source.html" hidden="true"/>
        <files mask="_struct_type_8hpp_source.html" hidden="true"/>
        <files mask="_symbol_8hpp_source.html" hidden="true"/>
        <files mask="_symbol_scanner_8hpp_source.html" hidden="true"/>
        <files mask="_symbol_scope_8hpp_source.html" hidden="true"/>
        <files mask="_token_8hpp_source.html" hidden="true"/>
        <files mask="_union_case_8hpp_source.html" hidden="true"/>
        <files mask="_union_type_8hpp_source.html" hidden="true"/>
        <files mask="_unique_id_checker_8hpp_source.html" hidden="true"/>
        <files mask="_utils_8hpp_source.html" hidden="true"/>
        <files mask="_value_8hpp_source.html" hidden="true"/>
        <files mask="_void_type_8hpp_source.html" hidden="true"/>
        <files mask="annotated.html" hidden="true"/>
        <files mask="annotations_8h_source.html" hidden="true"/>
        <files mask="class_float_value-members.html" hidden="true"/>
        <files mask="class_float_value.html" hidden="true"/>
        <files mask="class_integer_value-members.html" hidden="true"/>
        <files mask="class_integer_value.html" hidden="true"/>
        <files mask="class_log-members.html" hidden="true"/>
        <files mask="class_log.html" hidden="true"/>
        <files mask="class_log_1_1_set_output_level-members.html" hidden="true"/>
        <files mask="class_log_1_1_set_output_level.html" hidden="true"/>
        <files mask="class_logger-members.html" hidden="true"/>
        <files mask="class_logger.html" hidden="true"/>
        <files mask="class_opt_argv_iter-members.html" hidden="true"/>
        <files mask="class_opt_argv_iter.html" hidden="true"/>
        <files mask="class_opt_istream_iter-members.html" hidden="true"/>
        <files mask="class_opt_istream_iter.html" hidden="true"/>
        <files mask="class_opt_iter-members.html" hidden="true"/>
        <files mask="class_opt_iter.html" hidden="true"/>
        <files mask="class_opt_iter_rwd-members.html" hidden="true"/>
        <files mask="class_opt_iter_rwd.html" hidden="true"/>
        <files mask="class_opt_str_tok_iter-members.html" hidden="true"/>
        <files mask="class_opt_str_tok_iter.html" hidden="true"/>
        <files mask="class_option_spec-members.html" hidden="true"/>
        <files mask="class_option_spec.html" hidden="true"/>
        <files mask="class_options-members.html" hidden="true"/>
        <files mask="class_options.html" hidden="true"/>
        <files mask="class_path_searcher-members.html" hidden="true"/>
        <files mask="class_path_searcher.html" hidden="true"/>
        <files mask="class_stdout_logger-members.html" hidden="true"/>
        <files mask="class_stdout_logger.html" hidden="true"/>
        <files mask="class_string_value-members.html" hidden="true"/>
        <files mask="class_string_value.html" hidden="true"/>
        <files mask="class_value-members.html" hidden="true"/>
        <files mask="class_value.html" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation.html" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.html" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.html" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info.html" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.html" hidden="true"/>
        <files mask="classerpcgen_1_1_group-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_group.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition.html" hidden="true"/>
        <files mask="classerpcgen_1_1_java_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_java_generator.html" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_program-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_program.html" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.html" hidden="true"/>
        <files mask="classerpcgen_1_1_token-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_token.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker.html" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool.html" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.html" hidden="true"/>
        <files mask="classes.html" hidden="true"/>
        <files mask="classsmart__ptr-members.html" hidden="true"/>
        <files mask="classsmart__ptr.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_61c3f993326311b905af09f643fec799.html" hidden="true"/>
        <files mask="dir_acfaa839b8ffb0f73c7c3063e82240f2.html" hidden="true"/>
        <files mask="dir_b0461de83f30261a836ec46318e22617.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="files.html" hidden="true"/>
        <files mask="format__string_8hpp_source.html" hidden="true"/>
        <files mask="functions.html" hidden="true"/>
        <files mask="functions_0x7e.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="functions_enum.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="functions_func.html" hidden="true"/>
        <files mask="functions_func_0x7e.html" hidden="true"/>
        <files mask="functions_func_a.html" hidden="true"/>
        <files mask="functions_func_b.html" hidden="true"/>
        <files mask="functions_func_c.html" hidden="true"/>
        <files mask="functions_func_d.html" hidden="true"/>
        <files mask="functions_func_e.html" hidden="true"/>
        <files mask="functions_func_f.html" hidden="true"/>
        <files mask="functions_func_g.html" hidden="true"/>
        <files mask="functions_func_h.html" hidden="true"/>
        <files mask="functions_func_i.html" hidden="true"/>
        <files mask="functions_func_j.html" hidden="true"/>
        <files mask="functions_func_l.html" hidden="true"/>
        <files mask="functions_func_m.html" hidden="true"/>
        <files mask="functions_func_n.html" hidden="true"/>
        <files mask="functions_func_o.html" hidden="true"/>
        <files mask="functions_func_p.html" hidden="true"/>
        <files mask="functions_func_r.html" hidden="true"/>
        <files mask="functions_func_s.html" hidden="true"/>
        <files mask="functions_func_t.html" hidden="true"/>
        <files mask="functions_func_u.html" hidden="true"/>
        <files mask="functions_func_v.html" hidden="true"/>
        <files mask="functions_func_w.html" hidden="true"/>
        <files mask="functions_func_y.html" hidden="true"/>
        <files mask="functions_g.html" hidden="true"/>
        <files mask="functions_h.html" hidden="true"/>
        <files mask="functions_i.html" hidden="true"/>
        <files mask="functions_j.html" hidden="true"/>
        <files mask="functions_l.html" hidden="true"/>
        <files mask="functions_m.html" hidden="true"/>
        <files mask="functions_n.html" hidden="true"/>
        <files mask="functions_o.html" hidden="true"/>
        <files mask="functions_p.html" hidden="true"/>
        <files mask="functions_r.html" hidden="true"/>
        <files mask="functions_s.html" hidden="true"/>
        <files mask="functions_t.html" hidden="true"/>
        <files mask="functions_type.html" hidden="true"/>
        <files mask="functions_u.html" hidden="true"/>
        <files mask="functions_v.html" hidden="true"/>
        <files mask="functions_vars.html" hidden="true"/>
        <files mask="functions_w.html" hidden="true"/>
        <files mask="functions_y.html" hidden="true"/>
        <files mask="hierarchy.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="options_8hpp_source.html" hidden="true"/>
        <files mask="os__config_8hpp_source.html" hidden="true"/>
        <files mask="smart__ptr_8hpp_source.html" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t-members.html" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t.html" hidden="true"/>
        <files mask="structsmart__ptr__delete-members.html" hidden="true"/>
        <files mask="structsmart__ptr__delete.html" hidden="true"/>
        <files mask="structsmart__ptr__delete__array-members.html" hidden="true"/>
        <files mask="structsmart__ptr__delete__array.html" hidden="true"/>
        <files mask="structsmart__ptr__free-members.html" hidden="true"/>
        <files mask="structsmart__ptr__free.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="script">
        <files mask="annotated_dup.js" hidden="true"/>
        <files mask="class_float_value.js" hidden="true"/>
        <files mask="class_integer_value.js" hidden="true"/>
        <files mask="class_log.js" hidden="true"/>
        <files mask="class_log_1_1_set_output_level.js" hidden="true"/>
        <files mask="class_logger.js" hidden="true"/>
        <files mask="class_opt_argv_iter.js" hidden="true"/>
        <files mask="class_opt_istream_iter.js" hidden="true"/>
        <files mask="class_opt_iter.js" hidden="true"/>
        <files mask="class_opt_iter_rwd.js" hidden="true"/>
        <files mask="class_opt_str_tok_iter.js" hidden="true"/>
        <files mask="class_option_spec.js" hidden="true"/>
        <files mask="class_options.js" hidden="true"/>
        <files mask="class_path_searcher.js" hidden="true"/>
        <files mask="class_stdout_logger.js" hidden="true"/>
        <files mask="class_string_value.js" hidden="true"/>
        <files mask="class_value.js" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation.js" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.js" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info.js" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member.js" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_group.js" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.js" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition.js" hidden="true"/>
        <files mask="classerpcgen_1_1_java_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_program.js" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.js" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_token.js" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.js" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker.js" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool.js" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.js" hidden="true"/>
        <files mask="classsmart__ptr.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="files.js" hidden="true"/>
        <files mask="functions_dup.js" hidden="true"/>
        <files mask="functions_func.js" hidden="true"/>
        <files mask="hierarchy.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreeindex1.js" hidden="true"/>
        <files mask="navtreeindex2.js" hidden="true"/>
        <files mask="navtreeindex3.js" hidden="true"/>
        <files mask="navtreeindex4.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="class_float_value.png" hidden="true"/>
        <files mask="class_integer_value.png" hidden="true"/>
        <files mask="class_logger.png" hidden="true"/>
        <files mask="class_opt_argv_iter.png" hidden="true"/>
        <files mask="class_opt_istream_iter.png" hidden="true"/>
        <files mask="class_opt_iter.png" hidden="true"/>
        <files mask="class_opt_iter_rwd.png" hidden="true"/>
        <files mask="class_opt_str_tok_iter.png" hidden="true"/>
        <files mask="class_stdout_logger.png" hidden="true"/>
        <files mask="class_string_value.png" hidden="true"/>
        <files mask="class_value.png" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.png" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.png" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member.png" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.png" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.png" hidden="true"/>
        <files mask="classerpcgen_1_1_java_generator.png" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_program.png" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.png" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.png" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.png" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.png" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.png" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_10.html" hidden="true"/>
        <files mask="all_11.html" hidden="true"/>
        <files mask="all_12.html" hidden="true"/>
        <files mask="all_13.html" hidden="true"/>
        <files mask="all_14.html" hidden="true"/>
        <files mask="all_15.html" hidden="true"/>
        <files mask="all_16.html" hidden="true"/>
        <files mask="all_17.html" hidden="true"/>
        <files mask="all_18.html" hidden="true"/>
        <files mask="all_19.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="all_8.html" hidden="true"/>
        <files mask="all_9.html" hidden="true"/>
        <files mask="all_a.html" hidden="true"/>
        <files mask="all_b.html" hidden="true"/>
        <files mask="all_c.html" hidden="true"/>
        <files mask="all_d.html" hidden="true"/>
        <files mask="all_e.html" hidden="true"/>
        <files mask="all_f.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="classes_1.html" hidden="true"/>
        <files mask="classes_2.html" hidden="true"/>
        <files mask="classes_3.html" hidden="true"/>
        <files mask="classes_4.html" hidden="true"/>
        <files mask="classes_5.html" hidden="true"/>
        <files mask="classes_6.html" hidden="true"/>
        <files mask="classes_7.html" hidden="true"/>
        <files mask="classes_8.html" hidden="true"/>
        <files mask="classes_9.html" hidden="true"/>
        <files mask="classes_a.html" hidden="true"/>
        <files mask="classes_b.html" hidden="true"/>
        <files mask="classes_c.html" hidden="true"/>
        <files mask="classes_d.html" hidden="true"/>
        <files mask="classes_e.html" hidden="true"/>
        <files mask="classes_f.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="enums_2.html" hidden="true"/>
        <files mask="enums_3.html" hidden="true"/>
        <files mask="enums_4.html" hidden="true"/>
        <files mask="enums_5.html" hidden="true"/>
        <files mask="enums_6.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="enumvalues_1.html" hidden="true"/>
        <files mask="enumvalues_2.html" hidden="true"/>
        <files mask="enumvalues_3.html" hidden="true"/>
        <files mask="enumvalues_4.html" hidden="true"/>
        <files mask="enumvalues_5.html" hidden="true"/>
        <files mask="enumvalues_6.html" hidden="true"/>
        <files mask="enumvalues_7.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="functions_1.html" hidden="true"/>
        <files mask="functions_10.html" hidden="true"/>
        <files mask="functions_11.html" hidden="true"/>
        <files mask="functions_12.html" hidden="true"/>
        <files mask="functions_13.html" hidden="true"/>
        <files mask="functions_14.html" hidden="true"/>
        <files mask="functions_15.html" hidden="true"/>
        <files mask="functions_16.html" hidden="true"/>
        <files mask="functions_17.html" hidden="true"/>
        <files mask="functions_2.html" hidden="true"/>
        <files mask="functions_3.html" hidden="true"/>
        <files mask="functions_4.html" hidden="true"/>
        <files mask="functions_5.html" hidden="true"/>
        <files mask="functions_6.html" hidden="true"/>
        <files mask="functions_7.html" hidden="true"/>
        <files mask="functions_8.html" hidden="true"/>
        <files mask="functions_9.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="typedefs_1.html" hidden="true"/>
        <files mask="typedefs_2.html" hidden="true"/>
        <files mask="typedefs_3.html" hidden="true"/>
        <files mask="typedefs_4.html" hidden="true"/>
        <files mask="typedefs_5.html" hidden="true"/>
        <files mask="typedefs_6.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_10.js" hidden="true"/>
        <files mask="all_11.js" hidden="true"/>
        <files mask="all_12.js" hidden="true"/>
        <files mask="all_13.js" hidden="true"/>
        <files mask="all_14.js" hidden="true"/>
        <files mask="all_15.js" hidden="true"/>
        <files mask="all_16.js" hidden="true"/>
        <files mask="all_17.js" hidden="true"/>
        <files mask="all_18.js" hidden="true"/>
        <files mask="all_19.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="all_b.js" hidden="true"/>
        <files mask="all_c.js" hidden="true"/>
        <files mask="all_d.js" hidden="true"/>
        <files mask="all_e.js" hidden="true"/>
        <files mask="all_f.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="classes_1.js" hidden="true"/>
        <files mask="classes_2.js" hidden="true"/>
        <files mask="classes_3.js" hidden="true"/>
        <files mask="classes_4.js" hidden="true"/>
        <files mask="classes_5.js" hidden="true"/>
        <files mask="classes_6.js" hidden="true"/>
        <files mask="classes_7.js" hidden="true"/>
        <files mask="classes_8.js" hidden="true"/>
        <files mask="classes_9.js" hidden="true"/>
        <files mask="classes_a.js" hidden="true"/>
        <files mask="classes_b.js" hidden="true"/>
        <files mask="classes_c.js" hidden="true"/>
        <files mask="classes_d.js" hidden="true"/>
        <files mask="classes_e.js" hidden="true"/>
        <files mask="classes_f.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="enums_2.js" hidden="true"/>
        <files mask="enums_3.js" hidden="true"/>
        <files mask="enums_4.js" hidden="true"/>
        <files mask="enums_5.js" hidden="true"/>
        <files mask="enums_6.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="enumvalues_1.js" hidden="true"/>
        <files mask="enumvalues_2.js" hidden="true"/>
        <files mask="enumvalues_3.js" hidden="true"/>
        <files mask="enumvalues_4.js" hidden="true"/>
        <files mask="enumvalues_5.js" hidden="true"/>
        <files mask="enumvalues_6.js" hidden="true"/>
        <files mask="enumvalues_7.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="functions_1.js" hidden="true"/>
        <files mask="functions_10.js" hidden="true"/>
        <files mask="functions_11.js" hidden="true"/>
        <files mask="functions_12.js" hidden="true"/>
        <files mask="functions_13.js" hidden="true"/>
        <files mask="functions_14.js" hidden="true"/>
        <files mask="functions_15.js" hidden="true"/>
        <files mask="functions_16.js" hidden="true"/>
        <files mask="functions_17.js" hidden="true"/>
        <files mask="functions_2.js" hidden="true"/>
        <files mask="functions_3.js" hidden="true"/>
        <files mask="functions_4.js" hidden="true"/>
        <files mask="functions_5.js" hidden="true"/>
        <files mask="functions_6.js" hidden="true"/>
        <files mask="functions_7.js" hidden="true"/>
        <files mask="functions_8.js" hidden="true"/>
        <files mask="functions_9.js" hidden="true"/>
        <files mask="functions_a.js" hidden="true"/>
        <files mask="functions_b.js" hidden="true"/>
        <files mask="functions_c.js" hidden="true"/>
        <files mask="functions_d.js" hidden="true"/>
        <files mask="functions_e.js" hidden="true"/>
        <files mask="functions_f.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="typedefs_1.js" hidden="true"/>
        <files mask="typedefs_2.js" hidden="true"/>
        <files mask="typedefs_3.js" hidden="true"/>
        <files mask="typedefs_4.js" hidden="true"/>
        <files mask="typedefs_5.js" hidden="true"/>
        <files mask="typedefs_6.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure" project_relative_path="doc" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.md" hidden="true"/>
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="docs.multicore.erpc.MIMXRT1189" name="docs_multicore_erpc" brief="embedded Remote Procedure (eRPC) documentation" version="1.11.0" full_name="embedded Remote Procedure (eRPC) documentation" category="docs/erpc" user_visible="true" type="documentation" package_base_path="middleware/multicore/docs" project_base_path="docs">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="eRPC Getting Started User's Guide.pdf"/>
      </source>
    </component>
    <component id="docs.multicore.MIMXRT1189" name="docs_multicore" brief="Collection of Multicore SDK documentation" version="2.16.0" full_name="Multicore SDK documentation" category="docs/multicore" user_visible="true" type="documentation" package_base_path="middleware/multicore/docs" project_base_path="docs">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.MIMXRT1189"/>
            <component_dependency value="middleware.multicore.erpc.MIMXRT1189"/>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Multicore SDK (MCSDK) Release Notes.pdf"/>
        <files mask="Getting Started with Multicore SDK (MCSDK).pdf"/>
      </source>
    </component>
    <component id="middleware.mmcau.cm4_cm7.MIMXRT1189" name="mmcau_cm4_cm7" brief="MMCAU library for ARM Cortex M4/M7 core" version="2.0.4" full_name="Kinetis MMCAU security function library for Arm Cortex-M4 and Cortex-M7" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="core/middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <all>
          <component_dependency value="middleware.mmcau.common_files.MIMXRT1189"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="asm-cm4-cm7" type="lib">
        <files mask="lib_mmcau.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_cm4_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.common_files.MIMXRT1189" name="mmcau" brief="MMCAU common library source files" version="2.0.4" full_name="Kinetis MMCAU common source files" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="core/middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cau_api.h"/>
        <files mask="fsl_mmcau.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmcau.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.MIMXRT1189" name="mcuboot_bootutil" brief="mcuboot" version="2.0.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/bootutil" project_base_path="bootutil">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
            <component_dependency value="middleware.mcuboot.tinycrypt.MIMXRT1189"/>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bootutil" type="c_include">
        <files mask="bench.h"/>
        <files mask="boot_hooks.h"/>
        <files mask="boot_public_hooks.h"/>
        <files mask="boot_record.h"/>
        <files mask="boot_status.h"/>
        <files mask="bootutil.h"/>
        <files mask="bootutil_log.h"/>
        <files mask="bootutil_public.h"/>
        <files mask="bootutil_test.h"/>
        <files mask="caps.h"/>
        <files mask="enc_key.h"/>
        <files mask="enc_key_public.h"/>
        <files mask="fault_injection_hardening.h"/>
        <files mask="fault_injection_hardening_delay_rng.h"/>
        <files mask="ignore.h"/>
        <files mask="image.h"/>
        <files mask="mcuboot_status.h"/>
        <files mask="ramload.h"/>
        <files mask="security_cnt.h"/>
        <files mask="sign_key.h"/>
      </source>
      <source relative_path="include/bootutil/crypto" type="c_include">
        <files mask="aes_ctr.h"/>
        <files mask="aes_kw.h"/>
        <files mask="common.h"/>
        <files mask="ecdh_p256.h"/>
        <files mask="ecdh_x25519.h"/>
        <files mask="ecdsa.h"/>
        <files mask="hmac_sha256.h"/>
        <files mask="rsa.h"/>
        <files mask="sha.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="boot_record.c"/>
        <files mask="bootutil_misc.c"/>
        <files mask="bootutil_public.c"/>
        <files mask="caps.c"/>
        <files mask="encrypted.c"/>
        <files mask="fault_injection_hardening.c"/>
        <files mask="fault_injection_hardening_delay_rng_mbedtls.c"/>
        <files mask="image_ecdsa.c"/>
        <files mask="image_ed25519.c"/>
        <files mask="image_rsa.c"/>
        <files mask="image_validate.c"/>
        <files mask="loader.c"/>
        <files mask="swap_misc.c"/>
        <files mask="swap_move.c"/>
        <files mask="swap_scratch.c"/>
        <files mask="tlv.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="bootutil_misc.h"/>
        <files mask="bootutil_priv.h"/>
        <files mask="swap_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.osal.frtos.MIMXRT1189" name="psa_crypto_driver osal_frtos" brief="OS Abstraction Layer for PSA crypto driver on FreeRTOS" version="1.0.0" full_name="PSA crypto driver osal layer for FreeRTOS" category="psa_crypto_driver/psa_crypto_driver_osal_frtos" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <all>
          <component_dependency value="component.psa_crypto_driver.osal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osal/frtos" type="src">
        <files mask="osal_mutex.c"/>
      </source>
      <source relative_path="osal/frtos" type="c_include">
        <files mask="osal_mutex_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal_frtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal/frtos" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.osal.baremetal.MIMXRT1189" name="psa_crypto_driver osal_baremetal" brief="OS Abstraction Layer for PSA crypto driver on bare metal" version="1.0.0" full_name="PSA crypto driver osal layer for bare metal implementations" category="psa_crypto_driver/psa_crypto_driver_osal_baremetal" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <all>
          <component_dependency value="component.psa_crypto_driver.osal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osal/baremetal" type="src">
        <files mask="osal_mutex.c"/>
      </source>
      <source relative_path="osal/baremetal" type="c_include">
        <files mask="osal_mutex_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal_baremetal.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal/baremetal" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s4xx_psa_transparent.MIMXRT1189" name="psa_crypto_driver_ele_s4xx-psa_transp" brief="Transparent part of PSA crypto driver for ele_s4xx" version="1.0.0" full_name="Transparent part of PSA crypto driver for ele_s4xx" category="psa_crypto_driver/psa_crypt_dri_ele_s4xx_trans" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <defines>
        <define name="PSA_CRYPTO_DRIVER_ELE_S4XX" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <component_dependency value="component.ele_crypto.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ele_s4xx" type="c_include">
        <files mask="ele_s4xx_crypto_primitives.h"/>
      </source>
      <source relative_path="ele_s4xx/src/transparent" type="src">
        <files mask="mcux_psa_s4xx_init.c"/>
        <files mask="mcux_psa_s4xx_key_generation.c"/>
        <files mask="mcux_psa_s4xx_hash.c"/>
        <files mask="mcux_psa_s4xx_aead.c"/>
        <files mask="mcux_psa_s4xx_cipher.c"/>
        <files mask="mcux_psa_s4xx_asymmetric_encryption.c"/>
        <files mask="mcux_psa_s4xx_asymmetric_signature.c"/>
      </source>
      <source relative_path="ele_s4xx/include/transparent" type="c_include">
        <files mask="mcux_psa_s4xx_init.h"/>
        <files mask="mcux_psa_s4xx_key_generation.h"/>
        <files mask="mcux_psa_s4xx_hash.h"/>
        <files mask="mcux_psa_s4xx_aead.h"/>
        <files mask="mcux_psa_s4xx_cipher.h"/>
        <files mask="mcux_psa_s4xx_asymmetric_encryption.h"/>
        <files mask="mcux_psa_s4xx_asymmetric_signature.h"/>
      </source>
      <source relative_path="ele_s4xx/src/common" type="src">
        <files mask="mcux_psa_s4xx_common_key_management.c"/>
      </source>
      <source relative_path="ele_s4xx/include/common" type="c_include">
        <files mask="mcux_psa_s4xx_common_key_management.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s4xx_psa_transparent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s4xx/" type="c_include"/>
        <include_path relative_path="ele_s4xx/include/common" type="c_include"/>
        <include_path relative_path="ele_s4xx/include/transparent" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s4xx_sd_nvm_mgr.MIMXRT1189" name="psa_crypto_driver_ele_s4xx_sd_nvm_mgr" brief="NVM manager for ELE S4xx with storage on SD FATFS" version="1.0.0" full_name="NVM manager for ELE S4xx with storage on SD FATFS" category="psa_crypto_driver/psa_crypt_ele_s4xx_sd_nvm_mgr" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <defines>
        <define name="PSA_ELE_S4XX_SD_NVM_MANAGER" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1189"/>
          <component_dependency value="component.rgpio_adapter.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.sd.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="component.ele_nvm_manager.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ele_s4xx/src/common" type="src">
        <files mask="mcux_psa_s4xx_sdmmc_nvm_manager.c"/>
      </source>
      <source relative_path="ele_s4xx/include/common" type="c_include">
        <files mask="mcux_psa_s4xx_sdmmc_nvm_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s4xx_sd_nvm_mgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s4xx/include/common" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s4xx_psa_opaque.MIMXRT1189" name="psa_crypto_driver_ele_s4xx_psa_opaque" brief="PSA Opaque driver wrappers for ELE S4XX opaque" version="1.0.0" full_name="PSA Opaque driver wrappers for ELE S4XX opaque" category="psa_crypto_driver/psa_crypt_dri_ele_s4xx_opaque" user_visible="false" type="software_component" package_base_path="core/components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <defines>
        <define name="PSA_CRYPTO_DRIVER_ELE_S4XX" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <component_dependency value="component.ele_crypto.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ele_s4xx" type="c_include">
        <files mask="ele_s4xx_crypto_primitives.h"/>
      </source>
      <source relative_path="ele_s4xx/src/opaque" type="src">
        <files mask="mcux_psa_s4xx_opaque_init.c"/>
        <files mask="mcux_psa_s4xx_opaque_key_generation.c"/>
        <files mask="mcux_psa_s4xx_opaque_asymmetric_signature.c"/>
        <files mask="mcux_psa_s4xx_opaque_cipher.c"/>
        <files mask="mcux_psa_s4xx_opaque_aead.c"/>
        <files mask="mcux_psa_s4xx_opaque_mac.c"/>
      </source>
      <source relative_path="ele_s4xx/include/opaque" type="c_include">
        <files mask="mcux_psa_s4xx_opaque_init.h"/>
        <files mask="mcux_psa_s4xx_opaque_key_generation.h"/>
        <files mask="mcux_psa_s4xx_opaque_asymmetric_signature.h"/>
        <files mask="mcux_psa_s4xx_opaque_cipher.h"/>
        <files mask="mcux_psa_s4xx_opaque_aead.h"/>
        <files mask="mcux_psa_s4xx_opaque_mac.h"/>
      </source>
      <source relative_path="ele_s4xx/src/common" type="src">
        <files mask="mcux_psa_s4xx_common_key_management.c"/>
      </source>
      <source relative_path="ele_s4xx/include/common" type="c_include">
        <files mask="mcux_psa_s4xx_common_key_management.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s4xx_psa_opaque.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s4xx/" type="c_include"/>
        <include_path relative_path="ele_s4xx/include/common" type="c_include"/>
        <include_path relative_path="ele_s4xx/include/opaque" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ele_s400.MIMXRT1189" name="mbedtls_ele_s400" brief="mbedTLS port library for ELE S40x" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELE S400" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_MCUX_ELE_S400_API" value=""/>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ele_s400_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <component_dependency value="component.ele_crypto.MIMXRT1189"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/ele_s400" type="src">
        <files mask="ele_mbedtls.c"/>
        <files mask="ele_entropy.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ccm_alt.c"/>
        <files mask="gcm_alt.c"/>
        <files mask="rsa_alt.c"/>
        <files mask="sha256_alt.c"/>
        <files mask="sha512_alt.c"/>
        <files mask="hmac_alt.c"/>
      </source>
      <source relative_path="port/ele_s400" type="c_include">
        <files mask="ele_mbedtls.h"/>
        <files mask="ele_s400_mbedtls_config.h"/>
        <files mask="ele_fw.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="gcm_alt.h"/>
        <files mask="rsa_alt.h"/>
        <files mask="threading_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="sha512_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ele_s400.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ele_s400" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ele_s400_ecc_opaque.MIMXRT1189" name="mbedtls_ele_s400_ecc_opaque" brief="mbedTLS port library for ELE S40x" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELE S400" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_MCUX_ELE_S400_API" value=""/>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ele_ecc_opaque_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <component_dependency value="component.ele_crypto.MIMXRT1189"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/ele_s400" type="c_include">
        <files mask="ele_fw.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="gcm_alt.h"/>
        <files mask="rsa_alt.h"/>
        <files mask="threading_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="sha512_alt.h"/>
      </source>
      <source relative_path="port/ele_s400" type="src">
        <files mask="ele_entropy.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ccm_alt.c"/>
        <files mask="gcm_alt.c"/>
        <files mask="rsa_alt.c"/>
        <files mask="sha256_alt.c"/>
        <files mask="sha512_alt.c"/>
        <files mask="hmac_alt.c"/>
      </source>
      <source relative_path="port/ele_s400/ecc_opaque" type="c_include">
        <files mask="ele_ecc_opaque_mbedtls_config.h"/>
        <files mask="ele_mbedtls.h"/>
        <files mask="ecdsa_alt.h"/>
      </source>
      <source relative_path="port/ele_s400/ecc_opaque" type="src">
        <files mask="ele_mbedtls.c"/>
        <files mask="ecdsa_alt.c"/>
        <files mask="pk_alt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ele_s400_ecc_opaque.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ele_s400" type="c_include"/>
        <include_path relative_path="port/ele_s400/ecc_opaque" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT1189" name="mbedtls" brief="mbedTLS library" version="2.28.8" full_name="MbedTLS open source SSL library" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1189"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
          </any_of>
          <any_of>
            <component_dependency value="middleware.mbedtls.port.ele_s400.MIMXRT1189"/>
            <component_dependency value="middleware.mbedtls.port.ele_s400_ecc_opaque.MIMXRT1189"/>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="bignum_internal.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT1189" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="1" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch_static.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch_dynamic.MIMXRT1189"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch_dynamic.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.netc_ethernetif.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch_static.MIMXRT1189"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1189"/>
            <component_dependency value="middleware.lwip.netc_ethernetif.MIMXRT1189"/>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT1189"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1189"/>
            <component_dependency value="middleware.wifi.MIMXRT1189"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="FILES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="mem_priv.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="tcpip_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch_dynamic.MIMXRT1189" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="1" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch_static.MIMXRT1189" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="1" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.netc_ethernetif.MIMXRT1189" name="NETC ethernet interface" brief="NETC ethernet interface" version="2.2.1" revision="1" full_name="NETC ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.sys_arch_dynamic.MIMXRT1189"/>
          <component_dependency value="driver.phy-common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.netc.MIMXRT1189"/>
          <component_dependency value="platform.drivers.msgintr.MIMXRT1189"/>
          <component_dependency value="component.rgpio_adapter.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
        <files mask="netc_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="netc_configchecks.h"/>
      </source>
      <source relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_netc_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT1189" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="1" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.sys_arch_dynamic.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.MIMXRT1189" name="lwIP_usb_ethernetif" brief="USB network layer" version="2.2.1" revision="1" full_name="lwIP Adaptation for USB Network Layer" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.usb.host_cdc_ecm.MIMXRT1189"/>
            <component_dependency value="middleware.usb.host_cdc_rndis.MIMXRT1189"/>
          </any_of>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.sys_arch_dynamic.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source condition="middleware.baremetal.MIMXRT1189" relative_path="port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT1189" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="1" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="c_include">
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="src">
        <files mask="makefsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT1189" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="1" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT1189" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="1" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT1189" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.1" revision="1" full_name="lwIP HTTPS Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="MBEDTLS_THREADING_C" value=""/>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT1189"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpssrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT1189" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="1" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns.c"/>
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT1189" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="1" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
            <component_dependency value="middleware.baremetal.MIMXRT1189"/>
          </any_of>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT1189" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="1" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT1189" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="1" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT1189" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="1" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT1189" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="1" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT1189" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="1" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT1189" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="1" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT1189" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="1" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT1189" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.fatfs.template_ram.MIMXRT1189"/>
              <component_dependency value="middleware.fatfs.ram.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="middleware.fatfs.template_sd.MIMXRT1189"/>
              <component_dependency value="middleware.fatfs.sd.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="middleware.fatfs.template_mmc.MIMXRT1189"/>
              <component_dependency value="middleware.fatfs.mmc.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="middleware.fatfs.template_usb.MIMXRT1189"/>
              <component_dependency value="middleware.fatfs.usb.MIMXRT1189"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT1189" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT1189" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT1189" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT1189"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT1189" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.mmc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template/mmc" project_relative_path="./" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT1189" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.ram.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template/ram" project_relative_path="./" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT1189" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.sd.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template/sd" project_relative_path="./" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT1189" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.usb.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template/usb" project_relative_path="./" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT1189" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1189" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1189" name="xip_device" brief="XIP Device Driver" version="2.0.4" full_name="XIP Device Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/xip" project_base_path="xip">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xip_device.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ele_base_api.MIMXRT1189" name="ele_base_api" brief="ELE Base API Driver" version="1.0.1" full_name="Ele Base API Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ele_base_api.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ele_base_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ele_base_api.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.misc.MIMXRT1189" name="misc" brief="misc Driver" version="2.0.0" full_name="misc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_misc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_misc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMXRT1189" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_memory.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1189" name="iomuxc" brief="IOMUXC Driver" version="2.0.1" full_name="IOMUXC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iomuxc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ecat.MIMXRT1189" name="ecat_controller" brief="the EtherCAT Controller Driver" version="1.0.0" full_name="EtherCAT Controller Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ecat.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ecat.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ecat.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.romapi.MIMXRT1189" name="ROMAPI" brief="ROMAPI Driver" version="1.1.2" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_romapi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmu_1.MIMXRT1189" name="pmu" brief="PMU Driver" version="2.1.2" full_name="PMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pmu_1.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpc_3.MIMXRT1189" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpc_3.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_src.MIMXRT1189" name="soc_src" brief="SOC SRC Driver" version="2.0.0" full_name="SOC SRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_src.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_soc_src.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_soc_src.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcdc_soc.MIMXRT1189" name="dcdc_soc" brief="DCDC SOC Driver" version="2.0.1" full_name="DCDC SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="core/devices/MIMXRT1189/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dcdc_soc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1189" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="core/components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MIMXRT1189" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="core/components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT1189"/>
          <component_dependency value="component.timer_manager.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpuart_edma.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_dma_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT1189" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.tpm_adapter.MIMXRT1189"/>
            <component_dependency value="component.gpt_adapter.MIMXRT1189"/>
            <component_dependency value="component.lpit_adapter.MIMXRT1189"/>
            <component_dependency value="component.lptmr_adapter.MIMXRT1189"/>
          </any_of>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_adapter.MIMXRT1189" name="gpt_adapter" brief="Component gpt_adapter" version="1.0.0" full_name="Component gpt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_GPT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.gpt.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_gpt_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpit_adapter.MIMXRT1189" name="lpit_adapter" brief="Component lpit_adapter" version="1.0.0" full_name="Component lpit_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_LPIT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpit.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpit_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MIMXRT1189" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_LPTMR" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lptmr.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lptmr_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.tpm_adapter.MIMXRT1189" name="tpm_adapter" brief="Component tpm_adapter" version="1.0.0" full_name="Component tpm_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_TMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.tpm.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_tpm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tpm_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_rt1180.MIMXRT1189" name="silicon_id_rt1180" brief="Driver silicon_id imxrt1180" version="2.0.0" full_name="Driver silicon_id_rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/silicon_id/socs/imxrt1180" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="component.silicon_id.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." project_relative_path="./" type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_rt1180.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id.MIMXRT1189" name="silicon_id" brief="Driver silicon_id" version="2.0.1" full_name="Driver silicon_id" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/silicon_id" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.silicon_id_rt1180.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_silicon_id.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT1189" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/utilities/shell" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.str.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT1189" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMXRT1189"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT1189"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT1189"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT1189"/>
          </any_of>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1189" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="configuration">
        <files mask="fsl_ucwxp.inf" hidden="true"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="other">
        <files mask="cdc.cat" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_usb_cdc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT1189" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT1189" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm7_MIMXRT1189xxxxx"/>
            <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
          </any_of>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.MIMXRT1189" name="segger_rtt" brief="SEGGER Real Time Transfer(RTT)" version="7.22.0" full_name="SEGGER RTT" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="core/components/rtt" project_base_path="rtt">
      <dependencies>
        <all>
          <component_dependency value="driver.rtt.template.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="RTT" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_printf.c"/>
      </source>
      <source relative_path="RTT" type="c_include">
        <files mask="SEGGER_RTT.h"/>
      </source>
      <source relative_path="RTT" type="asm_include" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="SEGGER_RTT_ASM_ARMv7M.S"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="Syscalls" type="src">
        <files mask="SEGGER_RTT_Syscalls_GCC.c"/>
      </source>
      <source exclude="true" relative_path="Syscalls" type="src">
        <files mask="SEGGER_RTT_Syscalls_SES.c" hidden="true"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="License.txt" hidden="true"/>
        <files mask="README.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTT" type="c_include"/>
        <include_path relative_path="RTT" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT1189" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/reset" project_base_path="component/reset">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-device-rtl8211f.MIMXRT1189" name="phy-device-rtl8211f" brief="Driver phy-device-rtl8211f" version="2.0.0" full_name="Driver phy-device-rtl8211f" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="core/components/phy/device/phyrtl8211f" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="driver.phy-common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8211f.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8211f.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_phy-device-rtl8211f.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-device-rtl8201.MIMXRT1189" name="phy-device-rtl8201" brief="Driver phy-device-rtl8201" version="2.0.0" full_name="Driver phy-device-rtl8201" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="core/components/phy/device/phyrtl8201" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="driver.phy-common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8201.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8201.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_phy-device-rtl8201.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMXRT1189" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <component_dependency value="component.osa_interface.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT1189" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <component_dependency value="component.osa_interface.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT1189" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1189" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1189" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1189" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT1189" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT1189" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="utility.str.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MIMXRT1189" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.log.MIMXRT1189"/>
          <component_dependency value="utility.debug_console.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debugconsole.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole_lite.MIMXRT1189" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.log.MIMXRT1189"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debugconsole_lite.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT1189" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.log.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_ringbuffer.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT1189" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMXRT1189" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.lists.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMXRT1189" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.1.0" full_name="Component i3c_bus_adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMXRT1189"/>
          <component_dependency value="component.i3c_bus.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1189" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpi2c_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMXRT1189" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rgpio_adapter.MIMXRT1189" name="rgpio_adapter" brief="Component rgpio_adapter" version="1.0.1" full_name="Component rgpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.rgpio.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_rgpio_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT1189" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="core/components/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_file.MIMXRT1189" name="mflash file" brief="mflash file" version="1.0.0" full_name="statically allocated file system for mflash" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="core/components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <component_dependency value="component.mflash.rt1180.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_file.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_dummy.MIMXRT1189" name="mflash dummy" brief="dummy file for overwriting mflash when dowloading" version="1.0.0" full_name="dummy file" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="core/components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <component_dependency value="component.mflash_file.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mflash_dummy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_dummy.MIMXRT1189.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.mflash.rt1180.MIMXRT1189" name="mflash rt1180" brief="mflash rt1180" version="1.0.0" full_name="mflash rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/flash/mflash/mimxrt1180" project_base_path="flash/mflash/mimxrt1180">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="14221312"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1189"/>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT1189"/>
          </any_of>
          <component_dependency value="component.mflash.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_rt1180.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-controller-flexspi.MIMXRT1189" name="nand_flash-controller-flexspi" brief="Driver nand_flash-controller-flexspi" version="1.0.0" full_name="Driver nand_flash-controller-flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nand/flexspi" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nand_flash-common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nand_flash-controller-flexspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-controller-semc.MIMXRT1189" name="nand_flash-controller-semc" brief="Driver nand_flash-controller-semc" version="1.0.0" full_name="Driver nand_flash-controller-semc" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nand/semc" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nand_flash-common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.semc.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_semc_nand_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nand_flash-controller-semc.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-controller-flexspi.MIMXRT1189" name="nor_flash-controller-flexspi" brief="Driver nor_flash-controller-flexspi" version="1.0.0" full_name="Driver nor_flash-controller-flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nor/flexspi" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nor_flash-common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nor_flash-controller-flexspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-controller-lpspi.MIMXRT1189" name="nor_flash-controller-lpspi" brief="Driver nor_flash-controller-lpspi" version="1.0.0" full_name="Driver nor_flash-controller-lpspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/flash/nor/lpspi" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nor_flash-common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_nor_flash.c"/>
        <files mask="fsl_lpspi_mem_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_nor_flash.h"/>
        <files mask="fsl_lpspi_mem_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nor_flash-controller-lpspi.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.exception_handling_cm7.MIMXRT1189" name="exception_handling_cm7" brief="Component exception_handling_cm7" version="1.0.0" full_name="Component exception_handling_cm7" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/exception_handling" project_base_path="component/exception_handling">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="utility.debug_console.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_exception_handling.h"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="src" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="fsl_component_exception_handling.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_exception_handling_cm7.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ele_crypto.MIMXRT1189" name="ele_crypto" brief="Component ele_crypto" version="2.10.0" full_name="Component ele_crypto" category="ele_crypto/ele_crypto" user_visible="true" type="software_component" package_base_path="core/components/ele_crypto" project_base_path="component/ele_crypto">
      <defines>
        <define name="CACHE_MODE_WRITE_THROUGH" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.memory.MIMXRT1189"/>
              <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1189"/>
              <device_core_dependency value="cm7_MIMXRT1189xxxxx"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.cache_xcache.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
          </any_of>
          <component_dependency value="platform.drivers.s3mu.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="ele_crypto.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="ele_crypto.h"/>
        <files mask="ele_crypto_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ele_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ele_nvm_manager.MIMXRT1189" name="ele_nvm_manager" brief="Component ele_nvm_manager" version="2.10.0" full_name="Component ele_nvm_manager" category="ele_crypto/ele_nvm_manager" user_visible="true" type="software_component" package_base_path="core/components/ele_crypto" project_base_path="component/ele_crypto">
      <dependencies>
        <all>
          <component_dependency value="component.ele_crypto.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="ele_nvm_manager.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="ele_nvm_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ele_nvm_manager.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT1189" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="core/components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT1189" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="core/components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT1189" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
        <define name="BOARD_USE_CODEC" value="1"/>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.codec_i2c.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8962.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT1189" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.lpi2c_adapter.MIMXRT1189"/>
            <component_dependency value="component.i3c_adapter.MIMXRT1189"/>
          </any_of>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_i2c.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT1189" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.codec_i2c.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42448.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT1189" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.wm8962_adapter.MIMXRT1189"/>
            <component_dependency value="component.cs42448_adapter.MIMXRT1189"/>
            <component_dependency value="component.codec_adapters.MIMXRT1189"/>
          </any_of>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_codec.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT1189" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="driver.codec.MIMXRT1189"/>
              <component_dependency value="component.wm8962_adapter.MIMXRT1189"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.common.MIMXRT1189"/>
              <component_dependency value="component.cs42448_adapter.MIMXRT1189"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_adapters.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT1189" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8962.MIMXRT1189"/>
          <component_dependency value="driver.codec.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8962_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/wm8962" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT1189" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42448.MIMXRT1189"/>
          <component_dependency value="driver.codec.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42448_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/cs42448" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT1189" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="core/components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="component.timer_manager.MIMXRT1189"/>
          <component_dependency value="component.rgpio_adapter.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMXRT1189" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="core/components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1189"/>
          <component_dependency value="platform.drivers.sai_edma.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_audio_sai_edma_adapter.MIMXRT1189.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.MIMXRT1189" name="middleware.edgefast_bluetooth.pal" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1189"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1189"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1189"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="core/boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT1189" name="middleware.edgefast_bluetooth.common.ethermind.hci" brief="edgefast_bluetooth HCI" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="port/pal/mcux/bluetooth" project_relative_path="./" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT1189" name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" brief="edgefast_bluetooth HCI UART" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.base.MIMXRT1189"/>
            <component_dependency value="middleware.edgefast_bluetooth.k32w061.controller.MIMXRT1189"/>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <component_dependency value="component.serial_manager.MIMXRT1189"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="hci_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="hci_uart.h"/>
        <files mask="hci_uart_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci_uart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.common.ethermind" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LFS_NO_INTRINSICS" value="1"/>
        <define name="LFS_NO_ERROR" value="1"/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
        <define name="FSL_OSA_MAIN_FUNC_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.config.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.littlefs.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.MIMXRT1189"/>
          <component_dependency value="component.osa.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/export/eOSAL" type="c_include">
        <files mask="eBT_assert.h"/>
        <files mask="eBT_config.h"/>
        <files mask="eBT_debug_api.h"/>
        <files mask="eBT_fops.h"/>
        <files mask="eBT_os.h"/>
        <files mask="eBT_serial.h"/>
        <files mask="eBT_timer.h"/>
      </source>
      <source relative_path="bluetooth/export/include" type="c_include">
        <files mask="BT_a2dp_api.h"/>
        <files mask="BT_analyzer.h"/>
        <files mask="BT_api.h"/>
        <files mask="BT_assigned_numbers.h"/>
        <files mask="BT_at_parser_api.h"/>
        <files mask="BT_att_api.h"/>
        <files mask="BT_avctp_api.h"/>
        <files mask="BT_avdtp_api.h"/>
        <files mask="BT_avrcp_api.h"/>
        <files mask="BT_avrcp_ca_api.h"/>
        <files mask="BT_bip_api.h"/>
        <files mask="BT_bnep_api.h"/>
        <files mask="BT_bottom_half.h"/>
        <files mask="BT_bpp_api.h"/>
        <files mask="BT_common.h"/>
        <files mask="BT_ctn_api.h"/>
        <files mask="BT_dbase_api.h"/>
        <files mask="BT_device_queue.h"/>
        <files mask="BT_error.h"/>
        <files mask="BT_ftp_api.h"/>
        <files mask="BT_gap_api.h"/>
        <files mask="BT_gatt_db_api.h"/>
        <files mask="BT_hci_api.h"/>
        <files mask="BT_hdp_api.h"/>
        <files mask="BT_hfp_ag_api.h"/>
        <files mask="BT_hfp_unit_api.h"/>
        <files mask="BT_hid_device_api.h"/>
        <files mask="BT_hid_host_api.h"/>
        <files mask="BT_irobex_api.h"/>
        <files mask="BT_jpl_api.h"/>
        <files mask="BT_map_api.h"/>
        <files mask="BT_mcap_api.h"/>
        <files mask="BT_obex_api.h"/>
        <files mask="BT_opp_api.h"/>
        <files mask="BT_pan_api.h"/>
        <files mask="BT_pbap_api.h"/>
        <files mask="BT_racp.h"/>
        <files mask="BT_rfcomm_api.h"/>
        <files mask="BT_sap_api.h"/>
        <files mask="BT_sdp_api.h"/>
        <files mask="BT_security.h"/>
        <files mask="BT_sm_api.h"/>
        <files mask="BT_smp_api.h"/>
        <files mask="BT_snoop.h"/>
        <files mask="BT_spp_api.h"/>
        <files mask="BT_status.h"/>
        <files mask="BT_storage.h"/>
        <files mask="BT_version.h"/>
        <files mask="fsm_defines.h"/>
        <files mask="fsm_engine.h"/>
        <files mask="gatt_defines.h"/>
        <files mask="hci_transport.h"/>
        <files mask="l2cap.h"/>
        <files mask="write_task.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="c_include">
        <files mask="vendor_specific_commands.h"/>
        <files mask="vendor_specific_init.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="src">
        <files mask="vendor_specific_init.c"/>
      </source>
      <source relative_path="bluetooth/private/protocols/att" type="c_include">
        <files mask="att.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avctp" type="c_include">
        <files mask="avctp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avdtp" type="c_include">
        <files mask="avdtp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/bnep" type="c_include">
        <files mask="bnep.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/dbase" type="c_include">
        <files mask="database.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/hci_1.2" type="c_include">
        <files mask="hci_h.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/mcap" type="c_include">
        <files mask="mcap.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/obex" type="c_include">
        <files mask="obex.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/rfcomm" type="c_include">
        <files mask="rfcomm.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sdp" type="c_include">
        <files mask="sdp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sm" type="c_include">
        <files mask="sm.h"/>
        <files mask="sm_extern.h"/>
        <files mask="sm_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/smp" type="c_include">
        <files mask="smp.h"/>
        <files mask="smp_extern.h"/>
        <files mask="smp_fsm.h"/>
        <files mask="smp_fsm_engine.h"/>
        <files mask="smp_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/aes_cmac" type="c_include">
        <files mask="aes_cmac.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/at_parser" type="c_include">
        <files mask="at_parser_hsp_hfp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/object_parser" type="c_include">
        <files mask="object_parser_api.h"/>
        <files mask="tokenizer.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/racp" type="c_include">
        <files mask="racp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/storage" type="c_include">
        <files mask="storage.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/xml_parser" type="c_include">
        <files mask="xml_common_defines.h"/>
        <files mask="xml_encoder.h"/>
        <files mask="xml_parser.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="c_include">
        <files mask="EM_assert.h"/>
        <files mask="EM_config.h"/>
        <files mask="EM_debug.h"/>
        <files mask="EM_debug_api.h"/>
        <files mask="EM_debug_internal.h"/>
        <files mask="EM_fops.h"/>
        <files mask="EM_os.h"/>
        <files mask="EM_serial.h"/>
        <files mask="EM_timer.h"/>
        <files mask="EM_timer_internal.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="src">
        <files mask="EM_config.c"/>
        <files mask="EM_debug.c"/>
        <files mask="EM_fops.c"/>
        <files mask="EM_os.c"/>
        <files mask="EM_serial.c"/>
        <files mask="EM_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="BT_assert.h"/>
        <files mask="BT_config.h"/>
        <files mask="BT_debug.h"/>
        <files mask="BT_debug_api.h"/>
        <files mask="BT_fops.h"/>
        <files mask="BT_os.h"/>
        <files mask="BT_storage_pl.h"/>
        <files mask="BT_timer.h"/>
        <files mask="btsnoop_pl.h"/>
        <files mask="sco_audio_pl.h"/>
        <files mask="ctn_pl.h"/>
        <files mask="ftp_pl.h"/>
        <files mask="hci_uart_internal.h"/>
        <files mask="map_pl.h"/>
        <files mask="obex_pl.h"/>
        <files mask="pbap_pl.h"/>
        <files mask="write_task_extern_pl.h"/>
        <files mask="write_task_pl.h"/>
        <files mask="littlefs_pl.h"/>
        <files mask="fw_loader_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="BT_status_pl.c"/>
        <files mask="BT_storage_pl.c"/>
        <files mask="btsnoop_pl.c"/>
        <files mask="sco_audio_pl.c"/>
        <files mask="ctn_pl.c"/>
        <files mask="ftp_pl.c"/>
        <files mask="ht_read_task_pl.c"/>
        <files mask="map_pl.c"/>
        <files mask="obex_pl.c"/>
        <files mask="pbap_pl.c"/>
        <files mask="write_task_pl.c"/>
        <files mask="littlefs_pl.c"/>
        <files mask="fw_loader_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="c_include">
        <files mask="ethal_assert.h"/>
        <files mask="ethal_config.h"/>
        <files mask="ethal_debug.h"/>
        <files mask="ethal_debug_api.h"/>
        <files mask="ethal_debug_internal.h"/>
        <files mask="ethal_fops.h"/>
        <files mask="ethal_os.h"/>
        <files mask="ethal_serial.h"/>
        <files mask="ethal_timer.h"/>
        <files mask="ethal_timer_internal.h"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="src">
        <files mask="ethal_config.c"/>
        <files mask="ethal_debug.c"/>
        <files mask="ethal_fops.c"/>
        <files mask="ethal_os.c"/>
        <files mask="ethal_serial.c"/>
        <files mask="ethal_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/sbc" type="c_include">
        <files mask="sbc_os.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="src">
        <files mask="toolspec.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="c_include">
        <files mask="toolspec.h"/>
      </source>
      <source relative_path="port/pal/mcux" type="src">
        <files mask="EM_platform.c"/>
      </source>
      <source relative_path="port/pal/mcux" type="c_include">
        <files mask="EM_platform.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/sbc" type="c_include">
        <files mask="sbc_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/export/eOSAL" type="c_include"/>
        <include_path relative_path="bluetooth/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="c_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="c_include"/>
        <include_path relative_path="port/pal/mcux/toolspec/mcuxpresso" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="c_include"/>
        <include_path relative_path="port/osal/src/freertos" type="c_include"/>
        <include_path relative_path="port/pal/mcux" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3.MIMXRT1189" name="middleware.edgefast_bluetooth.common.ethermind.lc3" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LC3_DSP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <not>
                <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33.MIMXRT1189"/>
              <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/lc3" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/export/include" project_relative_path="bluetooth/private/utils/lc3" type="c_include">
        <files mask="LC3_api.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/private/fixed/config" project_relative_path="bluetooth/private/utils/lc3/config" type="c_include">
        <files mask="LC3_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/lc3" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" project_relative_path="bluetooth/private/utils/lc3" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" project_relative_path="bluetooth/private/utils/lc3/config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.base.MIMXRT1189" name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" brief="edgefast_bluetooth wifi_nxp controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.sdio.template.evkmimxrt1180.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_wifi_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_base.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.k32w061.controller.MIMXRT1189" name="middleware.edgefast_bluetooth.k32w061.controller" brief="edgefast_bluetooth k32w061 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.k32w061.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="doc">
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf" hidden="true"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe" hidden="true"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="other">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_k32w.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_k32w061_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.config.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.config.ethermind" brief="edgefast_bluetooth configuration for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.config.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include">
        <files mask="BT_features.h"/>
        <files mask="BT_limits.h"/>
        <files mask="db_gen.h"/>
      </source>
      <source exclude="true" relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_config_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.extension.common.ethermind" brief="edgefast_bluetooth extension for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.extension.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/export/extension" type="src">
        <files mask="aes_cmac_pl.c"/>
        <files mask="BT_common_pl.c"/>
        <files mask="device_queue_pl.c"/>
        <files mask="sm_pl.c"/>
        <files mask="sm_ssp_pl.c"/>
        <files mask="smp_pl.c"/>
        <files mask="gatt_db_pl.c"/>
      </source>
      <source relative_path="bluetooth/export/extension" type="c_include">
        <files mask="aes_cmac_pl.h"/>
        <files mask="BT_common_pl.h"/>
        <files mask="device_queue_pl.h"/>
        <files mask="sm_pl.h"/>
        <files mask="sm_ssp_pl.h"/>
        <files mask="smp_pl.h"/>
        <files mask="gatt_db_pl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_extension_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/export/extension" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.btble.ethermind.cm33" brief="edgefast_bluetooth bt_ble Host stack(including BR and BLE)" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" project_relative_path="source/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" project_relative_path="common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.ble.ethermind.cm33" brief="edgefast_bluetooth bt_ble Host stack(including BLE only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_BLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="src">
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_smp_null.c"/>
        <files mask="bt_pal_uuid.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include">
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" project_relative_path="common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.br.ethermind.cm33" brief="edgefast_bluetooth bt_ble Host stack(including BR only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <not>
            <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33.MIMXRT1189"/>
          </not>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" project_relative_path="source/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" project_relative_path="common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" project_relative_path="source/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vcp.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.vcs" brief="edgefast_bluetooth le_audio.vcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_vcp.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vcp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="vcp_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vcp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.micp.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.micp" brief="edgefast_bluetooth le_audio.micp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.micp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_micp.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="micp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="micp_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_micp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcs.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.mcs" brief="edgefast_bluetooth le_audio.mcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_mcs.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="mcs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="mcs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcc.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.mcc" brief="edgefast_bluetooth le_audio.mcc" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcc" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_mcs.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcc.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="mcc.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="mcc_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mpl.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.mpl" brief="edgefast_bluetooth le_audio.mpl" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mpl" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_mpl.h"/>
        <files mask="config_mctl.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="media_proxy.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="media_proxy.c"/>
        <files mask="mpl.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="media_proxy_internal.h"/>
        <files mask="mpl_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mpl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bass.MIMXRT1189" name="middleware.edgefast_bluetooth.le_audio.bass" brief="edgefast_bluetooth le_audio.bass" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bass" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio/config" type="c_include">
        <files mask="config_bass.h"/>
      </source>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="bap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include">
        <files mask="bap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bass.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio/config" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" project_relative_path="source/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hrs.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.hrs" brief="edgefast_bluetooth profile hrs" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hrs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hrs.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hrs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hrs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.bas.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.bas" brief="edgefast_bluetooth profile bas" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.bas" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="bas.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="bas.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_bas.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.dis.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.dis" brief="edgefast_bluetooth profile dis" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.dis" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="dis.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="dis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_dis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hts.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.hts" brief="edgefast_bluetooth profile hts" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hts" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hts.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hts.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ias.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.ias" brief="edgefast_bluetooth profile ias" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ias" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ias" type="src">
        <files mask="ias.c"/>
        <files mask="ias_client.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ias.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ias.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" project_relative_path="source/services/ias" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hps.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.hps" brief="edgefast_bluetooth profile hps" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hps" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hps.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hps.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.pxr.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.pxr" brief="edgefast_bluetooth profile pxr" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.pxr" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="pxr.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="pxr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_pxr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ipsp.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.ipsp" brief="edgefast_bluetooth profile ipsp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ipsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="ipsp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ipsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ipsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ots.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.ots" brief="edgefast_bluetooth profile ots" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ots" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ots" type="src">
        <files mask="ots.c"/>
        <files mask="ots_client.c"/>
        <files mask="ots_dir_list.c"/>
        <files mask="ots_l2cap.c"/>
        <files mask="ots_oacp.c"/>
        <files mask="ots_obj_manager.c"/>
        <files mask="ots_olcp.c"/>
      </source>
      <source relative_path="source/services/ots" type="c_include">
        <files mask="ots_client_internal.h"/>
        <files mask="ots_dir_list_internal.h"/>
        <files mask="ots_internal.h"/>
        <files mask="ots_l2cap_internal.h"/>
        <files mask="ots_oacp_internal.h"/>
        <files mask="ots_obj_manager_internal.h"/>
        <files mask="ots_olcp_internal.h"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ots.h"/>
      </source>
      <source relative_path="include/bluetooth/services/config" type="c_include">
        <files mask="config_ots.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ots.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="source/services/ots" type="c_include"/>
        <include_path relative_path="include/bluetooth/services" type="c_include"/>
        <include_path relative_path="include/bluetooth/services/config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.wu.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.wu" brief="edgefast_bluetooth profile wu" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.wu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="wu.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="wu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_wu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.fmp.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.fmp" brief="edgefast_bluetooth profile fmp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.fmp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="fmp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="fmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_fmp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.tip.MIMXRT1189" name="middleware.edgefast_bluetooth.profile.tip" brief="edgefast_bluetooth profile tip" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.tip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="tip.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="tip.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_tip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" project_relative_path="include/bluetooth/services" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.pal.crypto.ethermind" brief="edgefast_bluetooth PAL crypto support for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.crypto.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/crypto" project_relative_path="crypto" type="src">
        <files mask="bt_crypto.c"/>
      </source>
      <source relative_path="source/impl/ethermind/crypto" project_relative_path="crypto" type="c_include">
        <files mask="bt_crypto.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_crypto_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/crypto" project_relative_path="crypto" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" project_relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.pal.platform.ethermind" brief="edgefast_bluetooth PAL platform for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.platform.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="src">
        <files mask="bt_ble_platform.c"/>
        <files mask="bt_ble_settings.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="c_include">
        <files mask="bt_ble_platform.h"/>
        <files mask="bt_ble_settings.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_platform_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" brief="edgefast_bluetooth host_msd_fatfs for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.fatfs.usb.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="src">
        <files mask="host_msd_fatfs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="c_include">
        <files mask="host_msd_fatfs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" project_relative_path="port/pal/mcux/edgefast_support" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT1189" name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" brief="edgefast_bluetooth db_gen for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind" project_relative_path="port/pal/mcux/edgefast_support" type="src">
        <files mask="bt_db_gen.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_db_gen_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/" project_relative_path="port/pal/mcux/edgefast_support" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.atomic.MIMXRT1189" name="middleware.edgefast_bluetooth.porting.atomic" brief="edgefast_bluetooth porting.atomic" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.atomic" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="atomic_c.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="atomic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_atomic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.list.MIMXRT1189" name="middleware.edgefast_bluetooth.porting.list" brief="edgefast_bluetooth porting.list" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.list" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="slist.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="slist.h"/>
        <files mask="dlist.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_list.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.net.MIMXRT1189" name="middleware.edgefast_bluetooth.porting.net" brief="edgefast_bluetooth porting.netbuf" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.net" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="buf.c"/>
      </source>
      <source relative_path="include/net" type="c_include">
        <files mask="buf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT1189" name="middleware.edgefast_bluetooth.porting.toolchain" brief="edgefast_bluetooth porting.toolchain" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.toolchain" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CONFIG_ARM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/toolchain" type="c_include">
        <files mask="common.h"/>
        <files mask="gcc.h"/>
        <files mask="iar.h"/>
        <files mask="armcc.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="toolchain.h"/>
      </source>
      <source exclude="true" relative_path="core/boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT1189" name="middleware.edgefast_bluetooth.porting.work_queue" brief="edgefast_bluetooth porting.work_queue" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.work_queue" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="work_queue.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="work_queue.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_work_queue.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.template.MIMXRT1189" name="EdgeFast Bluetooth configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="middleware/edgefast_bluetooth" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.config.template.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.mcux.linker.template.evkmimxrt1180.MIMXRT1189"/>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="output/templates/config/mbedtls" project_relative_path="./" config="true" type="c_include">
        <files mask="mbedtls_config_client.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/templates/config/mbedtls" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.MIMXRT1189" name="middleware.edgefast_bluetooth.porting" brief="edgefast_bluetooth porting" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LOG_ENABLE_ASYNC_MODE" value="1"/>
        <define name="LOG_MAX_ARGUMENT_COUNT" value="10"/>
        <define name="LOG_ENABLE_OVERWRITE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console.MIMXRT1189"/>
            </all>
            <all>
              <not>
                <component_dependency value="utility.debug_console.MIMXRT1189"/>
              </not>
              <component_dependency value="utility.debug_console_lite.MIMXRT1189"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.net.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.list.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.atomic.MIMXRT1189"/>
          <component_dependency value="component.log.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="util.h"/>
        <files mask="util_internal.h"/>
        <files mask="util_loops.h"/>
        <files mask="util_macro.h"/>
        <files mask="printk.h"/>
        <files mask="check.h"/>
        <files mask="byteorder.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="ffs.h"/>
      </source>
      <source relative_path="include/zephyr" type="c_include">
        <files mask="types.h"/>
      </source>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="ring_buffer.c"/>
        <files mask="porting.c"/>
        <files mask="utf8.c"/>
      </source>
      <source relative_path="source/porting" project_relative_path="porting" type="c_include">
        <files mask="porting.h"/>
      </source>
      <source relative_path="source/porting/errno" project_relative_path="porting/errno" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="source/porting/fifo" project_relative_path="porting/fifo" type="src">
        <files mask="fifo.c"/>
      </source>
      <source relative_path="source/porting/fifo" project_relative_path="porting/fifo" type="c_include">
        <files mask="fifo.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.MIMXRT1189" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="component.common_task.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" project_relative_path="shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_bredr.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="shell_rfcomm.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_a2dp.c"/>
        <files mask="shell_avrcp.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_iso.c"/>
        <files mask="shell_map.c"/>
        <files mask="shell_pbap.c"/>
        <files mask="shell_hfp.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" project_relative_path="shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" project_relative_path="shell" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.le_audio.MIMXRT1189" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="component.common_task.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio/shell" project_relative_path="shell/audio" type="c_include">
        <files mask="audio.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio/shell" project_relative_path="shell/audio" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
        <files mask="bap.c"/>
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
        <files mask="has_client.c"/>
        <files mask="has.c"/>
        <files mask="mcc.c"/>
        <files mask="media_controller.c"/>
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
        <files mask="mpl.c"/>
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
        <files mask="tmap.c"/>
        <files mask="gmap.c"/>
        <files mask="pbp.c"/>
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_le_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" project_relative_path="shell" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" project_relative_path="shell/audio" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell_ble.MIMXRT1189" name="middleware.edgefast_bluetooth.shell_ble" brief="edgefast_bluetooth shell_ble" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell_ble" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1189"/>
          <component_dependency value="component.common_task.MIMXRT1189"/>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" project_relative_path="shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" project_relative_path="shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_ble.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" project_relative_path="shell" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bip.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bpp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ftp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ga.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hid.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_opp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pan.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_sap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bip.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bpp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ctn.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ftp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ga.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hid.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_opp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pan.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_sap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.br.ethermind.lib.cm33" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bip.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bpp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ftp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ga.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hid.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_opp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pan.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_sap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bip.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_bpp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ctn.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ftp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_ga.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_hid.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_opp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pan.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_sap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_ga.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_ble_ga.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib_lc3_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33.MIMXRT1189" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm33" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.cm33.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
          <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc_common_multicore.MIMXRT1189" name="erpc_common_multicore" brief="erpc examples common files" version="1.0.0" full_name="erpc examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="source">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multicore_examples/erpc_common" project_relative_path="./" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common" project_relative_path="./" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multicore_examples/erpc_common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_multicore_matrix_multiply_client.MIMXRT1189" name="erpc_common_multicore_matrix_multiply_client" brief="erpc matrix_multiply_client examples common files" version="1.0.0" full_name="erpc matrix_multiply_client examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="script">
        <files mask="erpc_matrix_multiply.erpc"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multicore_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_multicore_matrix_multiply_server.MIMXRT1189" name="erpc_common_multicore_matrix_multiply_server" brief="erpc matrix_multiply_server examples common files" version="1.0.0" full_name="erpc matrix_multiply_server examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="script">
        <files mask="erpc_matrix_multiply.erpc"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multicore_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multicore_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_two_way_rpc_core0.MIMXRT1189" name="erpc_common_two_way_rpc_core0" brief="erpc erpc_two_way_rpc_core0 examples common files" version="1.0.0" full_name="erpc erpc_two_way_rpc_core0 examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="script">
        <files mask="erpc_two_way_rpc.erpc"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_two_way_rpc_core1.MIMXRT1189" name="erpc_common_two_way_rpc_core1" brief="erpc erpc_two_way_rpc_core1 examples common files" version="1.0.0" full_name="erpc erpc_two_way_rpc_core1 examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="script">
        <files mask="erpc_two_way_rpc.erpc"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multicore_examples/erpc_common/erpc_two_way_rpc/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_multiprocessor.MIMXRT1189" name="erpc_common_multiprocessor" brief="erpc multiprocessor examples common files" version="1.0.0" full_name="erpc multiprocessor examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="source">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multiprocessor_examples/erpc_common" project_relative_path="./" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common" project_relative_path="./" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multiprocessor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multiprocessor_examples/erpc_common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_multiprocessor_matrix_multiply_client.MIMXRT1189" name="erpc_common_multiprocessor_matrix_multiply_client" brief="erpc multiprocessor matrix_multiply_client examples common files" version="1.0.0" full_name="erpc multiprocessor matrix_multiply_client examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="script">
        <files mask="erpc_matrix_multiply.erpc"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multiprocessor_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc_common_multiprocessor_matrix_multiply_server.MIMXRT1189" name="erpc_common_multiprocessor_matrix_multiply_server" brief="erpc multiprocessor matrix_multiply_server examples common files" version="1.0.0" full_name="erpc multiprocessor matrix_multiply_server examples common files" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore/" project_base_path="erpc/service">
      <dependencies>
        <any_of>
          <board_dependency value="evkmimxrt1180"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </any_of>
      </dependencies>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="script">
        <files mask="erpc_matrix_multiply.erpc"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_common_multiprocessor_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="example/multiprocessor_examples/erpc_common/erpc_matrix_multiply/service" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.mcu-boot.rt1xxx.MIMXRT1189" name="rt1xxx" brief="Docs mcu-boot rt1xxx" version="1.0.0" full_name="Docs mcu-boot rt1xxx" category="docs/rt1xxx" user_visible="true" type="documentation" package_base_path="core/docs/mcu-boot" project_base_path="mcu-boot">
      <dependencies>
        <device_dependency value="MIMXRT1189xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="MCU Flashloader Reference Manual.pdf"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMXRT1189" name="CMSIS-NN" brief="CMSIS-NN library" version="23.08" full_name="CMSIS-NN library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/cmsis_nn" project_base_path="eiq/tensorflow-lite/third_party/cmsis_nn">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_fast_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s8.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s8_s16.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s8_s16.c"/>
        <files mask="arm_nn_lstm_update_cell_state_s16.c"/>
        <files mask="arm_nn_lstm_update_output_s8_s16.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_mat_mul_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_nntables.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_cmsis_nn.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.reference.MIMXRT1189" name="TensorFlow Lite Micro with reference kernels" brief="TensorFlow Lite Micro library with reference kernel implementations" version="23.09.18" full_name="TensorFlow Lite Micro library with reference kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations.cpp"/>
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_reference.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.cmsis_nn.MIMXRT1189" name="TensorFlow Lite Micro with CMSIS-NN kernels" brief="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" version="23.09.18" full_name="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="CMSIS_NN" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_MIMXRT1189xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1189xxxxx"/>
          </any_of>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT1189"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels/cmsis_nn" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations.cpp"/>
        <files mask="ethosu.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="transpose_conv.cpp"/>
      </source>
      <source exclude="true" relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="add.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_cmsis_nn.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.binary.MIMXRT1189" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="23.09.18" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.headers.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="lib/cm7/armgcc" project_relative_path="lib" type="lib" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="libtflm.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="lib/cm7/armgcc" project_relative_path="lib" type="doc" device_cores="cm7_MIMXRT1189xxxxx">
        <files mask="build.sh"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="lib/cm33/armgcc" project_relative_path="lib" type="lib" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="libtflm.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="lib/cm33/armgcc" project_relative_path="lib" type="doc" device_cores="cm33_MIMXRT1189xxxxx">
        <files mask="build.sh"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="debug_log.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_binary.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="third_party/flatbuffers/include" type="c_include"/>
        <include_path relative_path="third_party/gemmlowp" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.headers.MIMXRT1189" name="TensorFlow Lite Micro" brief="TensorFlow Lite Micro library header files" version="23.09.18" full_name="TensorFlow Lite Micro library header files" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT1189"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT1189"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="NOTICE"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="signal/micro/kernels" type="c_include">
        <files mask="delay_flexbuffers_generated_data.h"/>
        <files mask="energy_flexbuffers_generated_data.h"/>
        <files mask="fft_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_log_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_spectral_subtraction_flexbuffers_generated_data.h"/>
        <files mask="framer_flexbuffers_generated_data.h"/>
        <files mask="irfft.h"/>
        <files mask="overlap_add_flexbuffers_generated_data.h"/>
        <files mask="pcan_flexbuffers_generated_data.h"/>
        <files mask="rfft.h"/>
        <files mask="stacker_flexbuffers_generated_data.h"/>
        <files mask="window_flexbuffers_generated_data.h"/>
      </source>
      <source relative_path="signal/src" type="c_include">
        <files mask="circular_buffer.h"/>
        <files mask="complex.h"/>
        <files mask="energy.h"/>
        <files mask="fft_auto_scale.h"/>
        <files mask="filter_bank.h"/>
        <files mask="filter_bank_log.h"/>
        <files mask="filter_bank_spectral_subtraction.h"/>
        <files mask="filter_bank_square_root.h"/>
        <files mask="irfft.h"/>
        <files mask="log.h"/>
        <files mask="max_abs.h"/>
        <files mask="msb.h"/>
        <files mask="overlap_add.h"/>
        <files mask="pcan_argc_fixed.h"/>
        <files mask="rfft.h"/>
        <files mask="square_root.h"/>
        <files mask="window.h"/>
      </source>
      <source relative_path="signal/src/kiss_fft_wrappers" type="c_include">
        <files mask="kiss_fft_common.h"/>
        <files mask="kiss_fft_float.h"/>
        <files mask="kiss_fft_int16.h"/>
        <files mask="kiss_fft_int32.h"/>
      </source>
      <source relative_path="tensorflow/lite" type="c_include">
        <files mask="builtin_op_data.h"/>
        <files mask="builtin_ops.h"/>
        <files mask="context_util.h"/>
        <files mask="portable_type_to_tflitetype.h"/>
      </source>
      <source relative_path="tensorflow/lite/c" type="c_include">
        <files mask="builtin_op_data.h"/>
        <files mask="c_api_types.h"/>
        <files mask="common.h"/>
      </source>
      <source relative_path="tensorflow/lite/core" type="c_include">
        <files mask="macros.h"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="c_include">
        <files mask="error_reporter.h"/>
        <files mask="flatbuffer_conversions.h"/>
        <files mask="tensor_utils.h"/>
      </source>
      <source relative_path="tensorflow/lite/core/c" type="c_include">
        <files mask="builtin_op_data.h"/>
        <files mask="c_api_types.h"/>
        <files mask="common.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels" type="c_include">
        <files mask="kernel_util.h"/>
        <files mask="op_macros.h"/>
        <files mask="padding.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="c_include">
        <files mask="common.h"/>
        <files mask="compatibility.h"/>
        <files mask="cppmath.h"/>
        <files mask="max.h"/>
        <files mask="min.h"/>
        <files mask="portable_tensor.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="quantization_util.h"/>
        <files mask="runtime_shape.h"/>
        <files mask="strided_slice_logic.h"/>
        <files mask="tensor_ctypes.h"/>
        <files mask="types.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/optimized" type="c_include">
        <files mask="neon_check.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="c_include">
        <files mask="add.h"/>
        <files mask="add_n.h"/>
        <files mask="arg_min_max.h"/>
        <files mask="batch_matmul.h"/>
        <files mask="batch_to_space_nd.h"/>
        <files mask="binary_function.h"/>
        <files mask="broadcast_args.h"/>
        <files mask="broadcast_to.h"/>
        <files mask="ceil.h"/>
        <files mask="comparisons.h"/>
        <files mask="concatenation.h"/>
        <files mask="conv.h"/>
        <files mask="cumsum.h"/>
        <files mask="depth_to_space.h"/>
        <files mask="depthwiseconv_float.h"/>
        <files mask="depthwiseconv_uint8.h"/>
        <files mask="dequantize.h"/>
        <files mask="div.h"/>
        <files mask="elu.h"/>
        <files mask="exp.h"/>
        <files mask="fill.h"/>
        <files mask="floor.h"/>
        <files mask="floor_div.h"/>
        <files mask="floor_mod.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="l2normalization.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="log_softmax.h"/>
        <files mask="logistic.h"/>
        <files mask="lstm_cell.h"/>
        <files mask="maximum_minimum.h"/>
        <files mask="mul.h"/>
        <files mask="neg.h"/>
        <files mask="pad.h"/>
        <files mask="pooling.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="portable_tensor_utils_impl.h"/>
        <files mask="prelu.h"/>
        <files mask="process_broadcast_shapes.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="requantize.h"/>
        <files mask="resize_bilinear.h"/>
        <files mask="resize_nearest_neighbor.h"/>
        <files mask="round.h"/>
        <files mask="select.h"/>
        <files mask="slice.h"/>
        <files mask="softmax.h"/>
        <files mask="space_to_batch_nd.h"/>
        <files mask="space_to_depth.h"/>
        <files mask="strided_slice.h"/>
        <files mask="sub.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference/integer_ops" type="c_include">
        <files mask="add.h"/>
        <files mask="conv.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="fully_connected.h"/>
        <files mask="l2normalization.h"/>
        <files mask="logistic.h"/>
        <files mask="mean.h"/>
        <files mask="mul.h"/>
        <files mask="pooling.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="c_include">
        <files mask="compatibility.h"/>
        <files mask="debug_log.h"/>
        <files mask="fake_micro_context.h"/>
        <files mask="flatbuffer_utils.h"/>
        <files mask="memory_helpers.h"/>
        <files mask="micro_allocation_info.h"/>
        <files mask="micro_allocator.h"/>
        <files mask="micro_arena_constants.h"/>
        <files mask="micro_common.h"/>
        <files mask="micro_context.h"/>
        <files mask="micro_graph.h"/>
        <files mask="micro_interpreter.h"/>
        <files mask="micro_interpreter_context.h"/>
        <files mask="micro_interpreter_graph.h"/>
        <files mask="micro_log.h"/>
        <files mask="micro_mutable_op_resolver.h"/>
        <files mask="micro_op_resolver.h"/>
        <files mask="micro_profiler.h"/>
        <files mask="micro_profiler_interface.h"/>
        <files mask="micro_resource_variable.h"/>
        <files mask="micro_time.h"/>
        <files mask="micro_utils.h"/>
        <files mask="mock_micro_graph.h"/>
        <files mask="recording_micro_allocator.h"/>
        <files mask="recording_micro_interpreter.h"/>
        <files mask="system_setup.h"/>
        <files mask="test_helper_custom_ops.h"/>
        <files mask="test_helpers.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="c_include">
        <files mask="activation_utils.h"/>
        <files mask="activations.h"/>
        <files mask="add.h"/>
        <files mask="circular_buffer.h"/>
        <files mask="circular_buffer_flexbuffers_generated_data.h"/>
        <files mask="conv.h"/>
        <files mask="conv_test.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="dequantize.h"/>
        <files mask="detection_postprocess_flexbuffers_generated_data.h"/>
        <files mask="ethosu.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="kernel_runner.h"/>
        <files mask="kernel_util.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="logical.h"/>
        <files mask="logistic.h"/>
        <files mask="lstm_eval.h"/>
        <files mask="lstm_eval_test.h"/>
        <files mask="lstm_shared.h"/>
        <files mask="micro_ops.h"/>
        <files mask="micro_tensor_utils.h"/>
        <files mask="mul.h"/>
        <files mask="pad.h"/>
        <files mask="pooling.h"/>
        <files mask="prelu.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="reshape.h"/>
        <files mask="softmax.h"/>
        <files mask="strided_slice.h"/>
        <files mask="sub.h"/>
        <files mask="svdf.h"/>
        <files mask="unidirectional_sequence_lstm.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="c_include">
        <files mask="ibuffer_allocator.h"/>
        <files mask="non_persistent_arena_buffer_allocator.h"/>
        <files mask="persistent_arena_buffer_allocator.h"/>
        <files mask="recording_single_arena_buffer_allocator.h"/>
        <files mask="single_arena_buffer_allocator.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="c_include">
        <files mask="greedy_memory_planner.h"/>
        <files mask="linear_memory_planner.h"/>
        <files mask="memory_plan_struct.h"/>
        <files mask="micro_memory_planner.h"/>
        <files mask="non_persistent_buffer_planner_shim.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/tflite_bridge" type="c_include">
        <files mask="flatbuffer_conversions_bridge.h"/>
        <files mask="micro_error_reporter.h"/>
      </source>
      <source relative_path="tensorflow/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
        <files mask="schema_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_headers.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.MIMXRT1189" name="TensorFlow Lite Micro" brief="TensorFlow Lite Micro library" version="23.09.18" full_name="TensorFlow Lite Micro library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.headers.MIMXRT1189"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="NOTICE"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="signal/micro/kernels" type="src">
        <files mask="delay.cpp"/>
        <files mask="energy.cpp"/>
        <files mask="fft_auto_scale.cpp"/>
        <files mask="filter_bank.cpp"/>
        <files mask="filter_bank_log.cpp"/>
        <files mask="filter_bank_spectral_subtraction.cpp"/>
        <files mask="filter_bank_square_root.cpp"/>
        <files mask="framer.cpp"/>
        <files mask="irfft.cpp"/>
        <files mask="overlap_add.cpp"/>
        <files mask="pcan.cpp"/>
        <files mask="rfft.cpp"/>
        <files mask="stacker.cpp"/>
        <files mask="window.cpp"/>
      </source>
      <source relative_path="signal/src" type="src">
        <files mask="circular_buffer.cpp"/>
        <files mask="energy.cpp"/>
        <files mask="fft_auto_scale.cpp"/>
        <files mask="filter_bank.cpp"/>
        <files mask="filter_bank_log.cpp"/>
        <files mask="filter_bank_spectral_subtraction.cpp"/>
        <files mask="filter_bank_square_root.cpp"/>
        <files mask="irfft_float.cpp"/>
        <files mask="irfft_int16.cpp"/>
        <files mask="irfft_int32.cpp"/>
        <files mask="log.cpp"/>
        <files mask="max_abs.cpp"/>
        <files mask="msb_32.cpp"/>
        <files mask="msb_64.cpp"/>
        <files mask="overlap_add.cpp"/>
        <files mask="pcan_argc_fixed.cpp"/>
        <files mask="rfft_float.cpp"/>
        <files mask="rfft_int16.cpp"/>
        <files mask="rfft_int32.cpp"/>
        <files mask="square_root_32.cpp"/>
        <files mask="square_root_64.cpp"/>
        <files mask="window.cpp"/>
      </source>
      <source relative_path="signal/src/kiss_fft_wrappers" type="src">
        <files mask="kiss_fft_float.cpp"/>
        <files mask="kiss_fft_int16.cpp"/>
        <files mask="kiss_fft_int32.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="src">
        <files mask="error_reporter.cpp"/>
        <files mask="flatbuffer_conversions.cpp"/>
        <files mask="tensor_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/core/c" type="src">
        <files mask="common.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels" type="src">
        <files mask="kernel_util.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="src">
        <files mask="common.cpp"/>
        <files mask="portable_tensor_utils.cpp"/>
        <files mask="quantization_util.cpp"/>
        <files mask="tensor_ctypes.cpp"/>
        <files mask="tensor_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="src">
        <files mask="comparisons.cpp"/>
        <files mask="portable_tensor_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="fake_micro_context.cpp"/>
        <files mask="flatbuffer_utils.cpp"/>
        <files mask="memory_helpers.cpp"/>
        <files mask="micro_allocation_info.cpp"/>
        <files mask="micro_allocator.cpp"/>
        <files mask="micro_context.cpp"/>
        <files mask="micro_interpreter.cpp"/>
        <files mask="micro_interpreter_context.cpp"/>
        <files mask="micro_interpreter_graph.cpp"/>
        <files mask="micro_log.cpp"/>
        <files mask="micro_op_resolver.cpp"/>
        <files mask="micro_profiler.cpp"/>
        <files mask="micro_resource_variable.cpp"/>
        <files mask="micro_time.cpp"/>
        <files mask="micro_utils.cpp"/>
        <files mask="mock_micro_graph.cpp"/>
        <files mask="recording_micro_allocator.cpp"/>
        <files mask="system_setup.cpp"/>
        <files mask="test_helper_custom_ops.cpp"/>
        <files mask="test_helpers.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="activations_common.cpp"/>
        <files mask="add_common.cpp"/>
        <files mask="add_n.cpp"/>
        <files mask="arg_min_max.cpp"/>
        <files mask="assign_variable.cpp"/>
        <files mask="batch_matmul.cpp"/>
        <files mask="batch_to_space_nd.cpp"/>
        <files mask="broadcast_args.cpp"/>
        <files mask="broadcast_to.cpp"/>
        <files mask="call_once.cpp"/>
        <files mask="cast.cpp"/>
        <files mask="ceil.cpp"/>
        <files mask="circular_buffer.cpp"/>
        <files mask="circular_buffer_common.cpp"/>
        <files mask="comparisons.cpp"/>
        <files mask="concatenation.cpp"/>
        <files mask="conv_common.cpp"/>
        <files mask="cumsum.cpp"/>
        <files mask="depth_to_space.cpp"/>
        <files mask="depthwise_conv_common.cpp"/>
        <files mask="dequantize.cpp"/>
        <files mask="dequantize_common.cpp"/>
        <files mask="detection_postprocess.cpp"/>
        <files mask="div.cpp"/>
        <files mask="elementwise.cpp"/>
        <files mask="elu.cpp"/>
        <files mask="embedding_lookup.cpp"/>
        <files mask="exp.cpp"/>
        <files mask="expand_dims.cpp"/>
        <files mask="fill.cpp"/>
        <files mask="floor_div.cpp"/>
        <files mask="floor_mod.cpp"/>
        <files mask="fully_connected_common.cpp"/>
        <files mask="gather.cpp"/>
        <files mask="gather_nd.cpp"/>
        <files mask="hard_swish.cpp"/>
        <files mask="hard_swish_common.cpp"/>
        <files mask="if.cpp"/>
        <files mask="kernel_util.cpp"/>
        <files mask="l2_pool_2d.cpp"/>
        <files mask="l2norm.cpp"/>
        <files mask="leaky_relu_common.cpp"/>
        <files mask="log_softmax.cpp"/>
        <files mask="logical.cpp"/>
        <files mask="logical_common.cpp"/>
        <files mask="logistic_common.cpp"/>
        <files mask="lstm_eval_common.cpp"/>
        <files mask="maximum_minimum.cpp"/>
        <files mask="micro_tensor_utils.cpp"/>
        <files mask="mirror_pad.cpp"/>
        <files mask="mul_common.cpp"/>
        <files mask="neg.cpp"/>
        <files mask="pack.cpp"/>
        <files mask="pooling_common.cpp"/>
        <files mask="prelu.cpp"/>
        <files mask="prelu_common.cpp"/>
        <files mask="quantize_common.cpp"/>
        <files mask="read_variable.cpp"/>
        <files mask="reduce_common.cpp"/>
        <files mask="reshape_common.cpp"/>
        <files mask="resize_bilinear.cpp"/>
        <files mask="resize_nearest_neighbor.cpp"/>
        <files mask="round.cpp"/>
        <files mask="select.cpp"/>
        <files mask="shape.cpp"/>
        <files mask="slice.cpp"/>
        <files mask="strided_slice_common.cpp"/>
        <files mask="softmax_common.cpp"/>
        <files mask="space_to_batch_nd.cpp"/>
        <files mask="space_to_depth.cpp"/>
        <files mask="split.cpp"/>
        <files mask="split_v.cpp"/>
        <files mask="squared_difference.cpp"/>
        <files mask="squeeze.cpp"/>
        <files mask="sub_common.cpp"/>
        <files mask="svdf_common.cpp"/>
        <files mask="tanh.cpp"/>
        <files mask="transpose.cpp"/>
        <files mask="unpack.cpp"/>
        <files mask="var_handle.cpp"/>
        <files mask="while.cpp"/>
        <files mask="zeros_like.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="c_include">
        <files mask="ibuffer_allocator.h"/>
        <files mask="non_persistent_arena_buffer_allocator.h"/>
        <files mask="persistent_arena_buffer_allocator.h"/>
        <files mask="recording_single_arena_buffer_allocator.h"/>
        <files mask="single_arena_buffer_allocator.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="src">
        <files mask="non_persistent_arena_buffer_allocator.cpp"/>
        <files mask="persistent_arena_buffer_allocator.cpp"/>
        <files mask="recording_single_arena_buffer_allocator.cpp"/>
        <files mask="single_arena_buffer_allocator.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="src">
        <files mask="greedy_memory_planner.cpp"/>
        <files mask="linear_memory_planner.cpp"/>
        <files mask="non_persistent_buffer_planner_shim.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/tflite_bridge" type="src">
        <files mask="flatbuffer_conversions_bridge.cpp"/>
        <files mask="micro_error_reporter.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/schema" type="src">
        <files mask="schema_utils.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="third_party/kissfft" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.examples.microspeech.MIMXRT1189" name="TensorFlow Lite Micro word detection" brief="TensorFlow Lite Micro word detection library" version="23.09.18" full_name="TensorFlow Lite Micro word detection library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMXRT1189"/>
          <device_dependency value="MIMXRT1189xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech" type="src">
        <files mask="audio_provider.cpp"/>
        <files mask="command_responder.cpp"/>
        <files mask="feature_provider.cpp"/>
        <files mask="recognize_commands.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech" type="c_include">
        <files mask="audio_provider.h"/>
        <files mask="command_responder.h"/>
        <files mask="feature_provider.h"/>
        <files mask="recognize_commands.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech/micro_features" type="src">
        <files mask="micro_features_generator.cpp"/>
        <files mask="micro_model_settings.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/examples/micro_speech/micro_features" type="c_include">
        <files mask="micro_features_generator.h"/>
        <files mask="micro_model_settings.h"/>
        <files mask="model.h"/>
      </source>
      <source relative_path="tensorflow/lite/experimental/microfrontend/lib" type="src">
        <files mask="filterbank.c"/>
        <files mask="filterbank_util.c"/>
        <files mask="frontend.c"/>
        <files mask="frontend_util.c"/>
        <files mask="log_lut.c"/>
        <files mask="log_scale.c"/>
        <files mask="log_scale_util.c"/>
        <files mask="noise_reduction.c"/>
        <files mask="noise_reduction_util.c"/>
        <files mask="pcan_gain_control.c"/>
        <files mask="pcan_gain_control_util.c"/>
        <files mask="window.c"/>
        <files mask="window_util.c"/>
        <files mask="fft.cpp"/>
        <files mask="fft_util.cpp"/>
        <files mask="kiss_fft_int16.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/experimental/microfrontend/lib" type="c_include">
        <files mask="bits.h"/>
        <files mask="fft.h"/>
        <files mask="fft_util.h"/>
        <files mask="filterbank.h"/>
        <files mask="filterbank_util.h"/>
        <files mask="frontend.h"/>
        <files mask="frontend_util.h"/>
        <files mask="kiss_fft_common.h"/>
        <files mask="kiss_fft_int16.h"/>
        <files mask="log_lut.h"/>
        <files mask="log_scale.h"/>
        <files mask="log_scale_util.h"/>
        <files mask="noise_reduction.h"/>
        <files mask="noise_reduction_util.h"/>
        <files mask="pcan_gain_control.h"/>
        <files mask="pcan_gain_control_util.h"/>
        <files mask="window.h"/>
        <files mask="window_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_examples_microspeech.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
