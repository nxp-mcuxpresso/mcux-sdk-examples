<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_evkmimxrt1180_examples_manifest_v3_14" name="SDK_2.x_evkmimxrt1180_examples_manifest_v3_14" format_version="3.14" api_version="2.0.0" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.14.xsd">

  <externalDefinitions>
    <definition extID="MIMXRT1189CVM8B"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK216100_evkmimxrt1180_examples_manifest_v3_14" name="MCUXpressoSDK216100_evkmimxrt1180_examples_manifest_v3_14" version="2.16.100" revision="2.16.100"/>
  <boards>
    <board id="evkmimxrt1180" name="MIMXRT1180-EVK" version="1.0.0" package="MIMXRT1189CVM8B">
      <examples>
        <example id="evkmimxrt1180_peripheral_beacon" name="peripheral_beacon" brief="The Edgefast Bluetooth beacon example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_beacon/cm33">
          <external path="edgefast_bluetooth_examples/peripheral_beacon/cm33" type="xml">
            <files mask="peripheral_beacon_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spp" name="spp" brief="The Bluetooth BR SPP example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/spp/cm33">
          <external path="edgefast_bluetooth_examples/spp/cm33" type="xml">
            <files mask="spp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_a2dp_sink" name="a2dp_sink" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_sink/cm33">
          <external path="edgefast_bluetooth_examples/a2dp_sink/cm33" type="xml">
            <files mask="a2dp_sink_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edgefast_bluetooth_shell" name="edgefast_bluetooth_shell" brief="The Edgefast Bluetooth shell example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/shell/cm33">
          <external path="edgefast_bluetooth_examples/shell/cm33" type="xml">
            <files mask="edgefast_bluetooth_shell_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_handsfree_ag" name="handsfree_ag" brief="The Edgefast Bluetooth handsfree AG example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree_ag/cm33">
          <external path="edgefast_bluetooth_examples/handsfree_ag/cm33" type="xml">
            <files mask="handsfree_ag_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_handsfree" name="handsfree" brief="The Edgefast Bluetooth bluetooth handsfree example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/handsfree/cm33">
          <external path="edgefast_bluetooth_examples/handsfree/cm33" type="xml">
            <files mask="handsfree_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_a2dp_source_cm33" name="a2dp_source_cm33" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/a2dp_source/cm33">
          <external path="edgefast_bluetooth_examples/a2dp_source/cm33" type="xml">
            <files mask="a2dp_source_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_ht" name="peripheral_ht" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ht/cm33">
          <external path="edgefast_bluetooth_examples/peripheral_ht/cm33" type="xml">
            <files mask="peripheral_ht_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_ht" name="central_ht" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ht/cm33">
          <external path="edgefast_bluetooth_examples/central_ht/cm33" type="xml">
            <files mask="central_ht_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_ipsp" name="peripheral_ipsp" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_ipsp/cm33">
          <external path="edgefast_bluetooth_examples/peripheral_ipsp/cm33" type="xml">
            <files mask="peripheral_ipsp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_ipsp" name="central_ipsp" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_ipsp/cm33">
          <external path="edgefast_bluetooth_examples/central_ipsp/cm33" type="xml">
            <files mask="central_ipsp_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_pxr" name="peripheral_pxr" brief="The Edgefast Bluetooth pxr example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_pxr/cm33">
          <external path="edgefast_bluetooth_examples/peripheral_pxr/cm33" type="xml">
            <files mask="peripheral_pxr_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_pxm" name="central_pxm" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_pxm/cm33">
          <external path="edgefast_bluetooth_examples/central_pxm/cm33" type="xml">
            <files mask="central_pxm_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_peripheral_hps" name="peripheral_hps" brief="The Edgefast Bluetooth hps example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/peripheral_hps/cm33">
          <external path="edgefast_bluetooth_examples/peripheral_hps/cm33" type="xml">
            <files mask="peripheral_hps_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_central_hpc" name="central_hpc" brief="The Edgefast Bluetooth hpc example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/central_hpc/cm33">
          <external path="edgefast_bluetooth_examples/central_hpc/cm33" type="xml">
            <files mask="central_hpc_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wireless_uart" name="wireless_uart" brief="The Edgefast Bluetooth wireless uart example with simplified application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="edgefast_bluetooth_examples" path="examples/evkmimxrt1180/edgefast_bluetooth_examples/wireless_uart/cm33">
          <external path="edgefast_bluetooth_examples/wireless_uart/cm33" type="xml">
            <files mask="wireless_uart_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_mouse_freertos_cm33" name="pin_detect_hid_mouse_freertos_cm33" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/freertos/cm33">
          <external path="usb_examples/usb_pin_detect_hid_mouse/freertos/cm33" type="xml">
            <files mask="pin_detect_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_msd_freertos_cm33" name="pin_detect_hid_msd_freertos_cm33" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/freertos/cm33">
          <external path="usb_examples/usb_pin_detect_hid_msd/freertos/cm33" type="xml">
            <files mask="pin_detect_hid_msd_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_mouse_bm_cm33" name="pin_detect_hid_mouse_bm_cm33" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_mouse/bm/cm33">
          <external path="usb_examples/usb_pin_detect_hid_mouse/bm/cm33" type="xml">
            <files mask="pin_detect_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pin_detect_hid_msd_bm_cm33" name="pin_detect_hid_msd_bm_cm33" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_pin_detect_hid_msd/bm/cm33">
          <external path="usb_examples/usb_pin_detect_hid_msd/bm/cm33" type="xml">
            <files mask="pin_detect_hid_msd_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_keyboard2mouse_freertos_cm33" name="keyboard2mouse_freertos_cm33" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/freertos/cm33">
          <external path="usb_examples/usb_keyboard2mouse/freertos/cm33" type="xml">
            <files mask="keyboard2mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_keyboard2mouse_bm_cm33" name="keyboard2mouse_bm_cm33" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_keyboard2mouse/bm/cm33">
          <external path="usb_examples/usb_keyboard2mouse/bm/cm33" type="xml">
            <files mask="keyboard2mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_recorder_freertos" name="host_audio_recorder_freertos" brief="The Host Audio example supports the audio recorder device. @n The application prints the audio recorder information when the USB recorder device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_recorder/freertos/cm33">
          <external path="usb_examples/usb_host_audio_recorder/freertos/cm33" type="xml">
            <files mask="host_audio_recorder_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_speaker_freertos_cm33" name="host_audio_speaker_freertos_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/freertos/cm33">
          <external path="usb_examples/usb_host_audio_speaker/freertos/cm33" type="xml">
            <files mask="host_audio_speaker_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_cdc_freertos_cm33" name="host_cdc_freertos_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/freertos/cm33">
          <external path="usb_examples/usb_host_cdc/freertos/cm33" type="xml">
            <files mask="host_cdc_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_generic_freertos_cm33" name="host_hid_generic_freertos_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/freertos/cm33">
          <external path="usb_examples/usb_host_hid_generic/freertos/cm33" type="xml">
            <files mask="host_hid_generic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_freertos_cm33" name="host_hid_mouse_freertos_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm33">
          <external path="usb_examples/usb_host_hid_mouse/freertos/cm33" type="xml">
            <files mask="host_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_keyboard_freertos_cm33" name="host_hid_mouse_keyboard_freertos_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33">
          <external path="usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_command_freertos_cm33" name="host_msd_command_freertos_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/freertos/cm33">
          <external path="usb_examples/usb_host_msd_command/freertos/cm33" type="xml">
            <files mask="host_msd_command_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_fatfs_freertos_cm33" name="host_msd_fatfs_freertos_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/freertos/cm33">
          <external path="usb_examples/usb_host_msd_fatfs/freertos/cm33" type="xml">
            <files mask="host_msd_fatfs_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_phdc_manager_freertos_cm33" name="host_phdc_manager_freertos_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/freertos/cm33">
          <external path="usb_examples/usb_host_phdc_manager/freertos/cm33" type="xml">
            <files mask="host_phdc_manager_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_printer_plain_text_freertos_cm33" name="host_printer_plain_text_freertos_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/freertos/cm33">
          <external path="usb_examples/usb_host_printer_plain_text/freertos/cm33" type="xml">
            <files mask="host_printer_plain_text_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_suspend_resume_hid_mouse_freertos_cm33" name="host_suspend_resume_hid_mouse_freertos_cm33" brief="This is one example support suspend/resume." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33">
          <external path="usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_video_camera_freertos_cm33" name="host_video_camera_freertos_cm33" brief="The application supports to get JPEG image from camera function." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_video_camera/freertos/cm33">
          <external path="usb_examples/usb_host_video_camera/freertos/cm33" type="xml">
            <files mask="host_video_camera_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_audio_speaker_bm_cm33" name="host_audio_speaker_bm_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_audio_speaker/bm/cm33">
          <external path="usb_examples/usb_host_audio_speaker/bm/cm33" type="xml">
            <files mask="host_audio_speaker_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_cdc_bm_cm33" name="host_cdc_bm_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_cdc/bm/cm33">
          <external path="usb_examples/usb_host_cdc/bm/cm33" type="xml">
            <files mask="host_cdc_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_generic_bm_cm33" name="host_hid_generic_bm_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_generic/bm/cm33">
          <external path="usb_examples/usb_host_hid_generic/bm/cm33" type="xml">
            <files mask="host_hid_generic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_bm_cm33" name="host_hid_mouse_bm_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm33">
          <external path="usb_examples/usb_host_hid_mouse/bm/cm33" type="xml">
            <files mask="host_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_keyboard_bm_cm33" name="host_hid_mouse_keyboard_bm_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse_keyboard/bm/cm33">
          <external path="usb_examples/usb_host_hid_mouse_keyboard/bm/cm33" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_command_bm_cm33" name="host_msd_command_bm_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_command/bm/cm33">
          <external path="usb_examples/usb_host_msd_command/bm/cm33" type="xml">
            <files mask="host_msd_command_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_msd_fatfs_bm_cm33" name="host_msd_fatfs_bm_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_msd_fatfs/bm/cm33">
          <external path="usb_examples/usb_host_msd_fatfs/bm/cm33" type="xml">
            <files mask="host_msd_fatfs_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_phdc_manager_bm_cm33" name="host_phdc_manager_bm_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_phdc_manager/bm/cm33">
          <external path="usb_examples/usb_host_phdc_manager/bm/cm33" type="xml">
            <files mask="host_phdc_manager_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_printer_plain_text_bm_cm33" name="host_printer_plain_text_bm_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_printer_plain_text/bm/cm33">
          <external path="usb_examples/usb_host_printer_plain_text/bm/cm33" type="xml">
            <files mask="host_printer_plain_text_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_suspend_resume_hid_mouse_bm_cm33" name="host_suspend_resume_hid_mouse_bm_cm33" brief="This is one example support suspend/resume." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33">
          <external path="usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_freertos_cm33" name="dev_audio_generator_freertos_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/freertos/cm33">
          <external path="usb_examples/usb_device_audio_generator/freertos/cm33" type="xml">
            <files mask="dev_audio_generator_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_freertos_cm33" name="dev_audio_speaker_freertos_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/freertos/cm33">
          <external path="usb_examples/usb_device_audio_speaker/freertos/cm33" type="xml">
            <files mask="dev_audio_speaker_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_freertos_cm33" name="dev_cdc_vcom_freertos_cm33" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/freertos/cm33">
          <external path="usb_examples/usb_device_cdc_vcom/freertos/cm33" type="xml">
            <files mask="dev_cdc_vcom_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_freertos_cm33" name="dev_cdc_vnic_freertos_cm33" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/freertos/cm33">
          <external path="usb_examples/usb_device_cdc_vnic/freertos/cm33" type="xml">
            <files mask="dev_cdc_vnic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_freertos_cm33" name="dev_composite_cdc_msc_disk_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_freertos_cm33" name="dev_composite_cdc_msc_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/freertos/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" name="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33">
          <external path="usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_freertos_cm33" name="dev_composite_hid_audio_unified_freertos_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33">
          <external path="usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_freertos_cm33" name="dev_composite_hid_mouse_hid_keyboard_freertos_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33">
          <external path="usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_freertos_cm33" name="dev_dfu_freertos_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/freertos/cm33">
          <external path="usb_examples/usb_device_dfu/freertos/cm33" type="xml">
            <files mask="dev_dfu_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_freertos_cm33" name="dev_hid_generic_freertos_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/freertos/cm33">
          <external path="usb_examples/usb_device_hid_generic/freertos/cm33" type="xml">
            <files mask="dev_hid_generic_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_freertos_cm33" name="dev_hid_mouse_freertos_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm33">
          <external path="usb_examples/usb_device_hid_mouse/freertos/cm33" type="xml">
            <files mask="dev_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_freertos_cm33" name="dev_msc_disk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/freertos/cm33">
          <external path="usb_examples/usb_device_msc_disk/freertos/cm33" type="xml">
            <files mask="dev_msc_disk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_freertos_cm33" name="dev_msc_ramdisk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/freertos/cm33">
          <external path="usb_examples/usb_device_msc_ramdisk/freertos/cm33" type="xml">
            <files mask="dev_msc_ramdisk_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_freertos_cm33" name="dev_mtp_freertos_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/freertos/cm33">
          <external path="usb_examples/usb_device_mtp/freertos/cm33" type="xml">
            <files mask="dev_mtp_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_freertos_cm33" name="dev_phdc_weighscale_freertos_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/freertos/cm33">
          <external path="usb_examples/usb_device_phdc_weighscale/freertos/cm33" type="xml">
            <files mask="dev_phdc_weighscale_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_freertos_cm33" name="dev_printer_virtual_plain_text_freertos_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33">
          <external path="usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_freertos_cm33" name="dev_suspend_resume_hid_mouse_freertos_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33">
          <external path="usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_freertos_cm33" name="dev_video_virtual_camera_freertos_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/freertos/cm33">
          <external path="usb_examples/usb_device_video_virtual_camera/freertos/cm33" type="xml">
            <files mask="dev_video_virtual_camera_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_bm_cm33" name="dev_audio_generator_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator/bm/cm33">
          <external path="usb_examples/usb_device_audio_generator/bm/cm33" type="xml">
            <files mask="dev_audio_generator_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_generator_lite_bm_cm33" name="dev_audio_generator_lite_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_generator_lite/bm/cm33">
          <external path="usb_examples/usb_device_audio_generator_lite/bm/cm33" type="xml">
            <files mask="dev_audio_generator_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_bm_cm33" name="dev_audio_speaker_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker/bm/cm33">
          <external path="usb_examples/usb_device_audio_speaker/bm/cm33" type="xml">
            <files mask="dev_audio_speaker_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_audio_speaker_lite_bm_cm33" name="dev_audio_speaker_lite_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_audio_speaker_lite/bm/cm33">
          <external path="usb_examples/usb_device_audio_speaker_lite/bm/cm33" type="xml">
            <files mask="dev_audio_speaker_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_bm_cm33" name="dev_cdc_vcom_bm_cm33" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom/bm/cm33">
          <external path="usb_examples/usb_device_cdc_vcom/bm/cm33" type="xml">
            <files mask="dev_cdc_vcom_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vcom_lite_bm_cm33" name="dev_cdc_vcom_lite_bm_cm33" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vcom_lite/bm/cm33">
          <external path="usb_examples/usb_device_cdc_vcom_lite/bm/cm33" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_bm_cm33" name="dev_cdc_vnic_bm_cm33" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic/bm/cm33">
          <external path="usb_examples/usb_device_cdc_vnic/bm/cm33" type="xml">
            <files mask="dev_cdc_vnic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_cdc_vnic_lite_bm_cm33" name="dev_cdc_vnic_lite_bm_cm33" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_cdc_vnic_lite/bm/cm33">
          <external path="usb_examples/usb_device_cdc_vnic_lite/bm/cm33" type="xml">
            <files mask="dev_cdc_vnic_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_bm_cm33" name="dev_composite_cdc_msc_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_bm_cm33" name="dev_composite_cdc_msc_disk_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_disk_lite_bm_cm33" name="dev_composite_cdc_msc_disk_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_msc_lite_bm_cm33" name="dev_composite_cdc_msc_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33">
          <external path="usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_bm_cm33" name="dev_composite_hid_audio_unified_bm_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified/bm/cm33">
          <external path="usb_examples/usb_device_composite_hid_audio_unified/bm/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_audio_unified_lite_bm_cm33" name="dev_composite_hid_audio_unified_lite_bm_cm33" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33">
          <external path="usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33">
          <external path="usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33">
          <external path="usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_bm_cm33" name="dev_dfu_bm_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu/bm/cm33">
          <external path="usb_examples/usb_device_dfu/bm/cm33" type="xml">
            <files mask="dev_dfu_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_dfu_lite_bm_cm33" name="dev_dfu_lite_bm_cm33" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_dfu_lite/bm/cm33">
          <external path="usb_examples/usb_device_dfu_lite/bm/cm33" type="xml">
            <files mask="dev_dfu_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_bm_cm33" name="dev_hid_generic_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic/bm/cm33">
          <external path="usb_examples/usb_device_hid_generic/bm/cm33" type="xml">
            <files mask="dev_hid_generic_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_generic_lite_bm_cm33" name="dev_hid_generic_lite_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_generic_lite/bm/cm33">
          <external path="usb_examples/usb_device_hid_generic_lite/bm/cm33" type="xml">
            <files mask="dev_hid_generic_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_bm_cm33" name="dev_hid_mouse_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm33">
          <external path="usb_examples/usb_device_hid_mouse/bm/cm33" type="xml">
            <files mask="dev_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_lite_bm_cm33" name="dev_hid_mouse_lite_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm33">
          <external path="usb_examples/usb_device_hid_mouse_lite/bm/cm33" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_bm_cm33" name="dev_msc_disk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk/bm/cm33">
          <external path="usb_examples/usb_device_msc_disk/bm/cm33" type="xml">
            <files mask="dev_msc_disk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_disk_lite_bm_cm33" name="dev_msc_disk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_disk_lite/bm/cm33">
          <external path="usb_examples/usb_device_msc_disk_lite/bm/cm33" type="xml">
            <files mask="dev_msc_disk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_bm_cm33" name="dev_msc_ramdisk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk/bm/cm33">
          <external path="usb_examples/usb_device_msc_ramdisk/bm/cm33" type="xml">
            <files mask="dev_msc_ramdisk_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_msc_ramdisk_lite_bm_cm33" name="dev_msc_ramdisk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_msc_ramdisk_lite/bm/cm33">
          <external path="usb_examples/usb_device_msc_ramdisk_lite/bm/cm33" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_bm_cm33" name="dev_mtp_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp/bm/cm33">
          <external path="usb_examples/usb_device_mtp/bm/cm33" type="xml">
            <files mask="dev_mtp_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_mtp_lite_bm_cm33" name="dev_mtp_lite_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_mtp_lite/bm/cm33">
          <external path="usb_examples/usb_device_mtp_lite/bm/cm33" type="xml">
            <files mask="dev_mtp_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_bm_cm33" name="dev_phdc_weighscale_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale/bm/cm33">
          <external path="usb_examples/usb_device_phdc_weighscale/bm/cm33" type="xml">
            <files mask="dev_phdc_weighscale_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_phdc_weighscale_lite_bm_cm33" name="dev_phdc_weighscale_lite_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_phdc_weighscale_lite/bm/cm33">
          <external path="usb_examples/usb_device_phdc_weighscale_lite/bm/cm33" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_bm_cm33" name="dev_printer_virtual_plain_text_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text/bm/cm33">
          <external path="usb_examples/usb_device_printer_virtual_plain_text/bm/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_printer_virtual_plain_text_lite_bm_cm33" name="dev_printer_virtual_plain_text_lite_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33">
          <external path="usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_bm_cm33" name="dev_suspend_resume_hid_mouse_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33">
          <external path="usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_suspend_resume_hid_mouse_lite_bm_cm33" name="dev_suspend_resume_hid_mouse_lite_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33">
          <external path="usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_bm_cm33" name="dev_video_virtual_camera_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera/bm/cm33">
          <external path="usb_examples/usb_device_video_virtual_camera/bm/cm33" type="xml">
            <files mask="dev_video_virtual_camera_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_video_virtual_camera_lite_bm_cm33" name="dev_video_virtual_camera_lite_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_video_virtual_camera_lite/bm/cm33">
          <external path="usb_examples/usb_device_video_virtual_camera_lite/bm/cm33" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_demo_cm33" name="hello_world_demo_cm33" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world/cm33">
          <external path="demo_apps/hello_world/cm33" type="xml">
            <files mask="hello_world_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_virtual_com_cm33" name="hello_world_virtual_com_cm33" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm33">
          <external path="demo_apps/hello_world_virtual_com/cm33" type="xml">
            <files mask="hello_world_virtual_com_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_multicore_trigger_demo_cm33" name="multicore_trigger_demo_cm33" brief="The multicore trigger demo is enabled only for primary core on multicore soc, to trigger other subordinative core to boot." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/multicore_trigger/cm33">
          <external path="demo_apps/multicore_trigger/cm33" type="xml">
            <files mask="multicore_trigger_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rled_blinky_demo_cm33" name="rled_blinky_demo_cm33" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/led_blinky/cm33">
          <external path="demo_apps/led_blinky/cm33" type="xml">
            <files mask="rled_blinky_demo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_bubble_peripheral_cm33" name="bubble_peripheral_cm33" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm33">
          <external path="demo_apps/bubble_peripheral/cm33" type="xml">
            <files mask="bubble_peripheral_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cache_cm33" name="cache_cm33" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/cache" path="examples/evkmimxrt1180/driver_examples/cache/cm33">
          <external path="driver_examples/cache/cm33" type="xml">
            <files mask="cache_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_interrupt_transfer_cm33" name="canfd_interrupt_transfer_cm33" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm33">
          <external path="driver_examples/canfd/interrupt_transfer/cm33" type="xml">
            <files mask="canfd_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_cm33" name="canfd_loopback_cm33" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm33">
          <external path="driver_examples/canfd/loopback/cm33" type="xml">
            <files mask="canfd_loopback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_transfer_cm33" name="canfd_loopback_transfer_cm33" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm33">
          <external path="driver_examples/canfd/loopback_transfer/cm33" type="xml">
            <files mask="canfd_loopback_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_ping_pong_buffer_transfer_cm33" name="canfd_ping_pong_buffer_transfer_cm33" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm33">
          <external path="driver_examples/canfd/ping_pong_buffer_transfer/cm33" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_interrupt_transfer_cm33" name="cmsis_lpuart_interrupt_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm33">
          <external path="cmsis_driver_examples/lpuart/interrupt_transfer/cm33" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_edma_transfer_cm33" name="cmsis_lpuart_edma_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm33">
          <external path="cmsis_driver_examples/lpuart/edma_transfer/cm33" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma3_memory_to_memory_cm33" name="edma3_memory_to_memory_cm33" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma3" path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm33">
          <external path="driver_examples/edma3/memory_to_memory/cm33" type="xml">
            <files mask="edma3_memory_to_memory_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_scatter_gather_cm33" name="edma4_scatter_gather_cm33" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm33">
          <external path="driver_examples/edma4/scatter_gather/cm33" type="xml">
            <files mask="edma4_scatter_gather_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_cm33" name="edma4_memory_to_memory_cm33" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm33">
          <external path="driver_examples/edma4/memory_to_memory/cm33" type="xml">
            <files mask="edma4_memory_to_memory_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_transfer_cm33" name="edma4_memory_to_memory_transfer_cm33" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm33">
          <external path="driver_examples/edma4/memory_to_memory_transfer/cm33" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memset_cm33" name="edma4_memset_cm33" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm33">
          <external path="driver_examples/edma4/memset/cm33" type="xml">
            <files mask="edma4_memset_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_channel_link_cm33" name="edma4_channel_link_cm33" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm33">
          <external path="driver_examples/edma4/channel_link/cm33" type="xml">
            <files mask="edma4_channel_link_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_wrap_transfer_cm33" name="edma4_wrap_transfer_cm33" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm33">
          <external path="driver_examples/edma4/wrap_transfer/cm33" type="xml">
            <files mask="edma4_wrap_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_ping_pong_transfer_cm33" name="edma4_ping_pong_transfer_cm33" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm33">
          <external path="driver_examples/edma4/ping_pong_transfer/cm33" type="xml">
            <files mask="edma4_ping_pong_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_interleave_transfer_cm33" name="edma4_interleave_transfer_cm33" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm33">
          <external path="driver_examples/edma4/interleave_transfer/cm33" type="xml">
            <files mask="edma4_interleave_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_interrupt_transfer_cm33" name="flexcan_interrupt_transfer_cm33" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm33">
          <external path="driver_examples/flexcan/interrupt_transfer/cm33" type="xml">
            <files mask="flexcan_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_cm33" name="flexcan_loopback_cm33" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm33">
          <external path="driver_examples/flexcan/loopback/cm33" type="xml">
            <files mask="flexcan_loopback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_transfer_cm33" name="flexcan_loopback_transfer_cm33" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm33">
          <external path="driver_examples/flexcan/loopback_transfer/cm33" type="xml">
            <files mask="flexcan_loopback_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_ping_pong_buffer_transfer_cm33" name="flexcan_ping_pong_buffer_transfer_cm33" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm33">
          <external path="driver_examples/flexcan/ping_pong_buffer_transfer/cm33" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_edma_transfer_cm33" name="flexcan_loopback_edma_transfer_cm33" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm33">
          <external path="driver_examples/flexcan/loopback_edma_transfer/cm33" type="xml">
            <files mask="flexcan_loopback_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_edma_transfer_cm33" name="flexcan_efifo_edma_transfer_cm33" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm33">
          <external path="driver_examples/flexcan/efifo_edma_transfer/cm33" type="xml">
            <files mask="flexcan_efifo_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_interrupt_transfer_cm33" name="flexcan_efifo_interrupt_transfer_cm33" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm33">
          <external path="driver_examples/flexcan/efifo_interrupt_transfer/cm33" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_polling_transfer_cm33" name="flexspi_nor_polling_transfer_cm33" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm33">
          <external path="driver_examples/flexspi/nor/polling_transfer/cm33" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_edma_transfer_cm33" name="flexspi_nor_edma_transfer_cm33" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm33">
          <external path="driver_examples/flexspi/nor/edma_transfer/cm33" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tstmr_cm33" name="tstmr_cm33" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/evkmimxrt1180/driver_examples/tstmr/cm33">
          <external path="driver_examples/tstmr/cm33" type="xml">
            <files mask="tstmr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sysctr_cm33" name="sysctr_cm33" brief="The sysctr example shows the usage of System Counter driver in application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sysctr" path="examples/evkmimxrt1180/driver_examples/sysctr/cm33">
          <external path="driver_examples/sysctr/cm33" type="xml">
            <files mask="sysctr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_timer_cm33" name="gpt_timer_cm33" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm33">
          <external path="driver_examples/gpt/timer/cm33" type="xml">
            <files mask="gpt_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_compare_cm33" name="gpt_compare_cm33" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm33">
          <external path="driver_examples/gpt/compare/cm33" type="xml">
            <files mask="gpt_compare_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_master_read_sensor_lsm6dso_cm33" name="i3c_master_read_sensor_lsm6dso_cm33" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm33">
          <external path="driver_examples/i3c/master_read_sensor_lsm6dso/cm33" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_master_cm33" name="i3c_polling_b2b_transfer_master_cm33" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm33">
          <external path="driver_examples/i3c/polling_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_slave_cm33" name="i3c_polling_b2b_transfer_slave_cm33" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm33">
          <external path="driver_examples/i3c/polling_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_master_cm33" name="i3c_interrupt_b2b_transfer_master_cm33" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm33">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_slave_cm33" name="i3c_interrupt_b2b_transfer_slave_cm33" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm33">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_master_cm33" name="i3c_edma_b2b_transfer_master_cm33" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm33">
          <external path="driver_examples/i3c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_slave_cm33" name="i3c_edma_b2b_transfer_slave_cm33" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm33">
          <external path="driver_examples/i3c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_cm33" name="lpi2c_interrupt_cm33" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm33">
          <external path="driver_examples/lpi2c/interrupt/cm33" type="xml">
            <files mask="lpi2c_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_master_cm33" name="lpi2c_interrupt_b2b_transfer_master_cm33" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_slave_cm33" name="lpi2c_interrupt_b2b_transfer_slave_cm33" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_master_cm33" name="lpi2c_polling_b2b_master_cm33" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm33">
          <external path="driver_examples/lpi2c/polling_b2b/master/cm33" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_slave_cm33" name="lpi2c_polling_b2b_slave_cm33" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm33">
          <external path="driver_examples/lpi2c/polling_b2b/slave/cm33" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_master_cm33" name="lpi2c_edma_b2b_transfer_master_cm33" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm33">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_slave_cm33" name="lpi2c_edma_b2b_transfer_slave_cm33" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm33">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_single_channel_cm33" name="lpit_single_channel_cm33" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm33">
          <external path="driver_examples/lpit/single_channel/cm33" type="xml">
            <files mask="lpit_single_channel_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_pwm_cm33" name="lpit_pwm_cm33" brief="This example show how to use SDK drivers to implement the PWM feature by LPIT IP module in dualperiodcounter mode.You can set up PWM singal frequency and duty in this example.Connect PWM singal output pin to oscilloscope, you will see PWM wave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm33">
          <external path="driver_examples/lpit/lpit_pwm/cm33" type="xml">
            <files mask="lpit_pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_master_cm33" name="lpspi_interrupt_b2b_master_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm33">
          <external path="driver_examples/lpspi/interrupt_b2b/master/cm33" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_slave_cm33" name="lpspi_interrupt_b2b_slave_cm33" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm33">
          <external path="driver_examples/lpspi/interrupt_b2b/slave/cm33" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_master_cm33" name="lpspi_edma_b2b_transfer_master_cm33" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm33">
          <external path="driver_examples/lpspi/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_slave_cm33" name="lpspi_edma_b2b_transfer_slave_cm33" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm33">
          <external path="driver_examples/lpspi/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_master_cm33" name="lpspi_polling_b2b_transfer_master_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm33">
          <external path="driver_examples/lpspi/polling_b2b_transfer/master/cm33" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_slave_cm33" name="lpspi_polling_b2b_transfer_slave_cm33" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm33">
          <external path="driver_examples/lpspi/polling_b2b_transfer/slave/cm33" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lptmr_cm33" name="lptmr_cm33" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/evkmimxrt1180/driver_examples/lptmr/cm33">
          <external path="driver_examples/lptmr/cm33" type="xml">
            <files mask="lptmr_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_cm33" name="lpuart_interrupt_cm33" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm33">
          <external path="driver_examples/lpuart/interrupt/cm33" type="xml">
            <files mask="lpuart_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_edma_transfer_cm33" name="lpuart_edma_transfer_cm33" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm33">
          <external path="driver_examples/lpuart/edma_transfer/cm33" type="xml">
            <files mask="lpuart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_cm33" name="lpuart_interrupt_transfer_cm33" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm33">
          <external path="driver_examples/lpuart/interrupt_transfer/cm33" type="xml">
            <files mask="lpuart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_rb_transfer_cm33" name="lpuart_interrupt_rb_transfer_cm33" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm33">
          <external path="driver_examples/lpuart/interrupt_rb_transfer/cm33" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_cm33" name="lpuart_polling_cm33" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm33">
          <external path="driver_examples/lpuart/polling/cm33" type="xml">
            <files mask="lpuart_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_9bit_interrupt_transfer_cm33" name="lpuart_9bit_interrupt_transfer_cm33" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm33">
          <external path="driver_examples/lpuart/9bit_interrupt_transfer/cm33" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_seven_bits_cm33" name="lpuart_interrupt_transfer_seven_bits_cm33" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm33">
          <external path="driver_examples/lpuart/interrupt_transfer_seven_bits/cm33" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_seven_bits_cm33" name="lpuart_polling_seven_bits_cm33" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm33">
          <external path="driver_examples/lpuart/polling_seven_bits/cm33" type="xml">
            <files mask="lpuart_polling_seven_bits_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_timer_cm33" name="qtmr_timer_cm33" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm33">
          <external path="driver_examples/qtmr/timer/cm33" type="xml">
            <files mask="qtmr_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_cm33" name="qtmr_inputcapture_outputpwm_cm33" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm33">
          <external path="driver_examples/qtmr/inputcapture_outputpwm/cm33" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_dma_cm33" name="qtmr_inputcapture_outputpwm_dma_cm33" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm33">
          <external path="driver_examples/qtmr/inputcapture_outputpwm_dma/cm33" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_input_interrupt_cm33" name="rgpio_input_interrupt_cm33" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm33">
          <external path="driver_examples/rgpio/input_interrupt/cm33" type="xml">
            <files mask="rgpio_input_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_led_output_cm33" name="rgpio_led_output_cm33" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm33">
          <external path="driver_examples/rgpio/led_output/cm33" type="xml">
            <files mask="rgpio_led_output_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_txrx_transfer_cm33" name="netc_txrx_transfer_cm33" brief="The example shows the way to use NETC driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the NETC. 2. How to get the time stamp of the PTP 1588 timer. 3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm33">
          <external path="driver_examples/netc/txrx_transfer/cm33" type="xml">
            <files mask="netc_txrx_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_switch_cm33" name="netc_switch_cm33" brief="The example shows the way to use NETC driver to act as a switch. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/switch/cm33">
          <external path="driver_examples/netc/switch/cm33" type="xml">
            <files mask="netc_switch_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rtwdog_cm33" name="rtwdog_cm33" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rtwdog" path="examples/evkmimxrt1180/driver_examples/rtwdog/cm33">
          <external path="driver_examples/rtwdog/cm33" type="xml">
            <files mask="rtwdog_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_adc_cm33" name="lpit_adc_cm33" brief="The lpit_adc example shows how to use LPIT to generate ADC triggers. On top of the basic counter, to use the ADC trigger, simply enable the &quot;milestone&quot; of the ADC trigger and set it with a user-defined value. When the LPIT counter is on, when the count passes the &quot;milestone&quot;, a pre-trigger of the ADC is generated and sent to the ADC module. In this example, the ADC is configured with hardware triggering and conversion complete interrupt enabled. Once it gets a trigger from the LPIT, the transition occurs and then the ISR is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc/lpit_adc" path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm33">
          <external path="driver_examples/lpadc/lpit_adc/cm33" type="xml">
            <files mask="lpit_adc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tpm_timer_cm33" name="tpm_timer_cm33" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm33">
          <external path="driver_examples/tpm/timer/cm33" type="xml">
            <files mask="tpm_timer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_polling_cm33" name="lpadc_polling_cm33" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm33">
          <external path="driver_examples/lpadc/polling/cm33" type="xml">
            <files mask="lpadc_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_interrupt_cm33" name="lpadc_interrupt_cm33" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm33">
          <external path="driver_examples/lpadc/interrupt/cm33" type="xml">
            <files mask="lpadc_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_dual_single_ended_conversion_cm33" name="lpadc_dual_single_ended_conversion_cm33" brief="The lpadc_dual_single_ended_conversion example shows how to use two channel with LPADC driver. In this example, user should indicate two channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input, Channel B does not need to be paired with Channel A, Channel B is user selectable.When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm33">
          <external path="driver_examples/lpadc/dual_single_ended_conversion/cm33" type="xml">
            <files mask="lpadc_dual_single_ended_conversion_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_s3mu_cm33" name="s3mu_cm33" brief="The S3MU Example project is a demonstration program that uses the MCUX SDK software to show basic communication with EdgeLock Enclave (ELE) and usage of its services with direct use of S3MU driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/s3mu" path="examples/evkmimxrt1180/driver_examples/s3mu/cm33">
          <external path="driver_examples/s3mu/cm33" type="xml">
            <files mask="s3mu_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_hsm_cm33" name="ele_crypto_hsm_cm33" brief="The ELE Crypto Example project is a demonstration program that uses the MCUX SDK software to perform crypto operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm33">
          <external path="ele_crypto/ele_crypto_hsm/cm33" type="xml">
            <files mask="ele_crypto_hsm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_common_cm33" name="ele_crypto_common_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm33">
          <external path="ele_crypto/ele_crypto_common/cm33" type="xml">
            <files mask="ele_crypto_common_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_hash_cm33" name="ele_crypto_generic_hash_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm33">
          <external path="ele_crypto/ele_crypto_generic_hash/cm33" type="xml">
            <files mask="ele_crypto_generic_hash_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_cm33" name="erpc_matrix_multiply_mu_cm33" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_mu_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm33">
          <external path="multicore_examples/erpc_matrix_multiply_mu/cm33" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm33" name="erpc_matrix_multiply_mu_rtos_cm33" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33">
          <external path="multicore_examples/erpc_matrix_multiply_mu_rtos/cm33" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm33" name="erpc_matrix_multiply_rpmsg_cm33" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm33">
          <external path="multicore_examples/erpc_matrix_multiply_rpmsg/cm33" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm33" name="erpc_matrix_multiply_rpmsg_rtos_cm33" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33">
          <external path="multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm33" name="erpc_two_way_rpc_rpmsg_rtos_cm33" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33">
          <external path="multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_message_buffers_cm33" name="freertos_message_buffers_cm33" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_freertos_message_buffers_cm7" path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm33">
          <external path="multicore_examples/freertos_message_buffers/cm33" type="xml">
            <files mask="freertos_message_buffers_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_cm33" name="hello_world_cm33" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_hello_world_cm7" path="examples/evkmimxrt1180/multicore_examples/hello_world/cm33">
          <external path="multicore_examples/hello_world/cm33" type="xml">
            <files mask="hello_world_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_cm33" name="rpmsg_lite_pingpong_cm33" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_rpmsg_lite_pingpong_cm7" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm33">
          <external path="multicore_examples/rpmsg_lite_pingpong/cm33" type="xml">
            <files mask="rpmsg_lite_pingpong_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm33" name="rpmsg_lite_pingpong_rtos_cm33" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" linked_projects="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm7" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm33">
          <external path="multicore_examples/rpmsg_lite_pingpong_rtos/cm33" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sema42_dual_core_core0" name="sema42_dual_core_core0" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sema42" linked_projects="evkmimxrt1180_sema42_dual_core_core1" path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core0">
          <external path="driver_examples/sema42/dual_core/core0" type="xml">
            <files mask="sema42_dual_core_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_polling_core0" name="mu_polling_core0" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" linked_projects="evkmimxrt1180_mu_polling_core1" path="examples/evkmimxrt1180/driver_examples/mu/polling/core0">
          <external path="driver_examples/mu/polling/core0" type="xml">
            <files mask="mu_polling_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_interrupt_core0" name="mu_interrupt_core0" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" linked_projects="evkmimxrt1180_mu_interrupt_core1" path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core0">
          <external path="driver_examples/mu/interrupt/core0" type="xml">
            <files mask="mu_interrupt_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_psi_vsi_message_cm33" name="netc_psi_vsi_message_cm33" brief="The Multicore NETC PSI-VSI demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core use NETC PSI to send/receive frames. It also releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running and uses NETC VSI to send/receive frames." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" linked_projects="evkmimxrt1180_netc_psi_vsi_message_cm7" path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm33">
          <external path="driver_examples/netc/psi_vsi_message/cm33" type="xml">
            <files mask="netc_psi_vsi_message_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_cm33" name="ele_crypto_nvm_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm33">
          <external path="ele_crypto/ele_crypto_nvm/cm33" type="xml">
            <files mask="ele_crypto_nvm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_generic_cm33" name="ele_crypto_nvm_generic_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm33">
          <external path="ele_crypto/ele_crypto_nvm_generic/cm33" type="xml">
            <files mask="ele_crypto_nvm_generic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_aes_cm33" name="ele_crypto_generic_aes_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm33">
          <external path="ele_crypto/ele_crypto_generic_aes/cm33" type="xml">
            <files mask="ele_crypto_generic_aes_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_rsa_cm33" name="ele_crypto_generic_rsa_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm33">
          <external path="ele_crypto/ele_crypto_generic_rsa/cm33" type="xml">
            <files mask="ele_crypto_generic_rsa_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_baseline_api_cm33" name="ele_crypto_baseline_api_cm33" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm33">
          <external path="ele_crypto/ele_crypto_baseline_api/cm33" type="xml">
            <files mask="ele_crypto_baseline_api_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_p2p_out_edma_cm33" name="asrc_p2p_out_edma_cm33" brief="The asrc_p2p_out_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm33">
          <external path="driver_examples/asrc/asrc_p2p_out_edma/cm33" type="xml">
            <files mask="asrc_p2p_out_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_edma_cm33" name="asrc_m2m_edma_cm33" brief="The asrc_m2m_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm33">
          <external path="driver_examples/asrc/asrc_m2m_edma/cm33" type="xml">
            <files mask="asrc_m2m_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_cm33" name="sai_interrupt_cm33" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm33">
          <external path="driver_examples/sai/interrupt/cm33" type="xml">
            <files mask="sai_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_record_playback_cm33" name="sai_interrupt_record_playback_cm33" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm33">
          <external path="driver_examples/sai/interrupt_record_playback/cm33" type="xml">
            <files mask="sai_interrupt_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_transfer_cm33" name="sai_interrupt_transfer_cm33" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm33">
          <external path="driver_examples/sai/interrupt_transfer/cm33" type="xml">
            <files mask="sai_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_transfer_cm33" name="sai_edma_transfer_cm33" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm33">
          <external path="driver_examples/sai/edma_transfer/cm33" type="xml">
            <files mask="sai_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_record_playback_cm33" name="sai_edma_record_playback_cm33" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm33">
          <external path="driver_examples/sai/edma_record_playback/cm33" type="xml">
            <files mask="sai_edma_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_half_interrupt_cm33" name="sai_edma_ping_pong_buffer_half_interrupt_cm33" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm33">
          <external path="driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm33" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_cm33" name="sai_edma_ping_pong_buffer_cm33" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm33">
          <external path="driver_examples/sai/edma_ping_pong_buffer/cm33" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_record_playback_cm33" name="sai_edma_tdm_record_playback_cm33" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm33">
          <external path="driver_examples/sai/edma_tdm_record_playback/cm33" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_cm33" name="sai_edma_tdm_cm33" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm33">
          <external path="driver_examples/sai/edma_tdm/cm33" type="xml">
            <files mask="sai_edma_tdm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_usb_bm_cm33" name="lwip_dhcp_usb_bm_cm33" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/bm/cm33">
          <external path="lwip_examples/lwip_dhcp_usb/bm/cm33" type="xml">
            <files mask="lwip_dhcp_usb_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_usb_freertos_cm33" name="lwip_dhcp_usb_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp_usb/freertos/cm33">
          <external path="lwip_examples/lwip_dhcp_usb/freertos/cm33" type="xml">
            <files mask="lwip_dhcp_usb_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_bm_cm33" name="lwip_dhcp_bm_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm33">
          <external path="lwip_examples/lwip_dhcp/bm/cm33" type="xml">
            <files mask="lwip_dhcp_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_freertos_cm33" name="lwip_dhcp_freertos_cm33" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm33">
          <external path="lwip_examples/lwip_dhcp/freertos/cm33" type="xml">
            <files mask="lwip_dhcp_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_mqtt_freertos_cm33" name="lwip_mqtt_freertos_cm33" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm33">
          <external path="lwip_examples/lwip_mqtt/freertos/cm33" type="xml">
            <files mask="lwip_mqtt_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_bm_cm33" name="lwip_httpsrv_bm_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm33">
          <external path="lwip_examples/lwip_httpsrv/bm/cm33" type="xml">
            <files mask="lwip_httpsrv_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_freertos_cm33" name="lwip_httpsrv_freertos_cm33" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm33">
          <external path="lwip_examples/lwip_httpsrv/freertos/cm33" type="xml">
            <files mask="lwip_httpsrv_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_bm_cm33" name="lwip_httpssrv_mbedTLS_bm_cm33" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm33">
          <external path="lwip_examples/lwip_httpssrv_mbedTLS/bm/cm33" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_freertos_cm33" name="lwip_httpssrv_mbedTLS_freertos_cm33" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm33">
          <external path="lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm33" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_iperf_bm_cm33" name="lwip_iperf_bm_cm33" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm33">
          <external path="lwip_examples/lwip_iperf/bm/cm33" type="xml">
            <files mask="lwip_iperf_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ipv4_ipv6_echo_freertos_cm33" name="lwip_ipv4_ipv6_echo_freertos_cm33" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm33">
          <external path="lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm33" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_bm_cm33" name="lwip_ping_bm_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm33">
          <external path="lwip_examples/lwip_ping/bm/cm33" type="xml">
            <files mask="lwip_ping_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_freertos_cm33" name="lwip_ping_freertos_cm33" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm33">
          <external path="lwip_examples/lwip_ping/freertos/cm33" type="xml">
            <files mask="lwip_ping_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_interrupt_cm33" name="pdm_interrupt_cm33" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm33">
          <external path="driver_examples/pdm/pdm_interrupt/cm33" type="xml">
            <files mask="pdm_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_edma_transfer_cm33" name="pdm_edma_transfer_cm33" brief="pdm_edma_transfer" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm33">
          <external path="driver_examples/pdm/pdm_edma_transfer/cm33" type="xml">
            <files mask="pdm_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_standalone_transfer_edma_cm33" name="pdm_standalone_transfer_edma_cm33" brief="pdm_standalone_transfer_edma" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm33">
          <external path="driver_examples/pdm/pdm_standalone_transfer_edma/cm33" type="xml">
            <files mask="pdm_standalone_transfer_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_cm33" name="pdm_sai_interrupt_cm33" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm33">
          <external path="driver_examples/pdm/pdm_sai_interrupt/cm33" type="xml">
            <files mask="pdm_sai_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_transfer_cm33" name="pdm_sai_interrupt_transfer_cm33" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm33">
          <external path="driver_examples/pdm/pdm_sai_interrupt_transfer/cm33" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_edma_cm33" name="pdm_sai_edma_cm33" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm33">
          <external path="driver_examples/pdm/pdm_sai_edma/cm33" type="xml">
            <files mask="pdm_sai_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_multi_channel_edma_cm33" name="pdm_sai_multi_channel_edma_cm33" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm33">
          <external path="driver_examples/pdm/pdm_sai_multi_channel_edma/cm33" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_polling_cm33" name="sdcard_polling_cm33" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_polling" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm33">
          <external path="sdmmc_examples/sdcard_polling/cm33" type="xml">
            <files mask="sdcard_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_interrupt_cm33" name="sdcard_interrupt_cm33" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_interrupt" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm33">
          <external path="sdmmc_examples/sdcard_interrupt/cm33" type="xml">
            <files mask="sdcard_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_freertos_cm33" name="sdcard_freertos_cm33" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm33">
          <external path="sdmmc_examples/sdcard_freertos/cm33" type="xml">
            <files mask="sdcard_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_cm33" name="sdcard_fatfs_cm33" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm33">
          <external path="sdmmc_examples/sdcard_fatfs/cm33" type="xml">
            <files mask="sdcard_fatfs_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_freertos_cm33" name="sdcard_fatfs_freertos_cm33" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm33">
          <external path="sdmmc_examples/sdcard_fatfs_freertos/cm33" type="xml">
            <files mask="sdcard_fatfs_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_kpp_cm33" name="kpp_cm33" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/kpp" path="examples/evkmimxrt1180/driver_examples/kpp/cm33">
          <external path="driver_examples/kpp/cm33" type="xml">
            <files mask="kpp_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sinc_adc_cm33" name="sinc_adc_cm33" brief="The sinc adc example shows how to use SINC driver to configure SINC module as single conversion mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sinc" path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm33">
          <external path="driver_examples/sinc/adc/cm33" type="xml">
            <files mask="sinc_adc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_master_cm33" name="cmsis_lpi2c_edma_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_slave_cm33" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_master_cm33" name="cmsis_lpi2c_int_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_slave_cm33" name="cmsis_lpi2c_int_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_master_cm33" name="cmsis_lpspi_edma_b2b_transfer_master_cm33" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_slave_cm33" name="cmsis_lpspi_edma_b2b_transfer_slave_cm33" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_master_cm33" name="cmsis_lpspi_int_b2b_transfer_master_cm33" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_slave_cm33" name="cmsis_lpspi_int_b2b_transfer_slave_cm33" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_fsl_romapi_cm33" name="fsl_romapi_cm33" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi" path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm33">
          <external path="driver_examples/fsl_romapi/cm33" type="xml">
            <files mask="fsl_romapi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_cli_cm33" name="wifi_cli_cm33" brief="wifi_cli" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm33">
          <external path="wifi_examples/wifi_cli/cm33" type="xml">
            <files mask="wifi_cli_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_wpa_supplicant_cm33" name="wifi_wpa_supplicant_cm33" brief="wifi_wpa_supplicant" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_wpa_supplicant/cm33">
          <external path="wifi_examples/wifi_wpa_supplicant/cm33" type="xml">
            <files mask="wifi_wpa_supplicant_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_setup_cm33" name="wifi_setup_cm33" brief="The wifi_setup demo implements a simple Wi-Fi station setup. The application will automatically scan local wireless networks at startup, then the user will be able to connect to one of the available networks and setup a ping task that will test the connection." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_setup/cm33">
          <external path="wifi_examples/wifi_setup/cm33" type="xml">
            <files mask="wifi_setup_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_test_mode_cm33" name="wifi_test_mode_cm33" brief="wifi_test_mode" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_test_mode/cm33">
          <external path="wifi_examples/wifi_test_mode/cm33" type="xml">
            <files mask="wifi_test_mode_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_ipv4_ipv6_echo_cm33" name="wifi_ipv4_ipv6_echo_cm33" brief="The wifi_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_ipv4_ipv6_echo/cm33">
          <external path="wifi_examples/wifi_ipv4_ipv6_echo/cm33" type="xml">
            <files mask="wifi_ipv4_ipv6_echo_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_selftest_cm33" name="mbedtls_selftest_cm33" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm33">
          <external path="mbedtls_examples/mbedtls_selftest/cm33" type="xml">
            <files mask="mbedtls_selftest_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_benchmark_cm33" name="mbedtls_benchmark_cm33" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm33">
          <external path="mbedtls_examples/mbedtls_benchmark/cm33" type="xml">
            <files mask="mbedtls_benchmark_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cm33" name="mbedtls_ele_ecc_opaque_key_cm33" brief="The mbedTLS ECC opaque key demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm33">
          <external path="mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm33" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cert_cm33" name="mbedtls_ele_ecc_opaque_key_cert_cm33" brief="The mbedTLS ECC write certificate demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair to self-sign an X509 certificate." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm33">
          <external path="mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm33" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cert_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_semc_cm33" name="semc_cm33" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/semc" path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm33">
          <external path="driver_examples/semc/sdram/cm33" type="xml">
            <files mask="semc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tempsensor_cm33" name="tempsensor_cm33" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tempsensor" path="examples/evkmimxrt1180/driver_examples/tempsensor/cm33">
          <external path="driver_examples/tempsensor/cm33" type="xml">
            <files mask="tempsensor_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_webconfig_cm33" name="wifi_webconfig_cm33" brief="Simple AP to Client configuration over web." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_webconfig/cm33">
          <external path="wifi_examples/wifi_webconfig/cm33" type="xml">
            <files mask="wifi_webconfig_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_power_mode_switch_bm_dcdc_core0" name="power_mode_switch_bm_dcdc_core0" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" linked_projects="evkmimxrt1180_power_mode_switch_bm_dcdc_core1" path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core0">
          <external path="demo_apps/power_mode_switch/bm_dcdc/core0" type="xml">
            <files mask="power_mode_switch_bm_dcdc_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_digital_io_cm33" name="ecat_examples_digital_io_cm33" brief="An EtherCAT device example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_examples" path="examples/evkmimxrt1180/ecat_examples/digital_io/cm33">
          <external path="ecat_examples/digital_io/cm33" type="xml">
            <files mask="ecat_examples_digital_io_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_eoe_cm33" name="ecat_examples_eoe_cm33" brief="An EtherCAT EOE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_eoe" path="examples/evkmimxrt1180/ecat_examples/eoe/cm33">
          <external path="ecat_examples/eoe/cm33" type="xml">
            <files mask="ecat_examples_eoe_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_foe_cm33" name="ecat_examples_foe_cm33" brief="An EtherCAT FoE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_foe" path="examples/evkmimxrt1180/ecat_examples/foe/cm33">
          <external path="ecat_examples/foe/cm33" type="xml">
            <files mask="ecat_examples_foe_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_polling_transfer_cm33" name="flexio_uart_polling_transfer_cm33" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm33">
          <external path="driver_examples/flexio/uart/polling_transfer/cm33" type="xml">
            <files mask="flexio_uart_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_interrupt_transfer_cm33" name="flexio_uart_interrupt_transfer_cm33" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm33">
          <external path="driver_examples/flexio/uart/interrupt_transfer/cm33" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_int_rb_transfer_cm33" name="flexio_uart_int_rb_transfer_cm33" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm33">
          <external path="driver_examples/flexio/uart/int_rb_transfer/cm33" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_input_interrupt_cm33" name="flexio_pin_input_interrupt_cm33" brief="The FLEXIO PIN Example project is a demonstration program that uses the FLEXIO software to manipulate the flexio-pin as input function.The example uses FLEXIO-PIN input to capture the edge of other gpio pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm33">
          <external path="driver_examples/flexio/pin/input_interrupt/cm33" type="xml">
            <files mask="flexio_pin_input_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_led_output_cm33" name="flexio_pin_led_output_cm33" brief="The FLEXIO led project is a demonstration program that uses the FELXIO software to manipulate the felxio-pin.The example is supported by the set, clear, and toggle write-only registers for each flexio output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm33">
          <external path="driver_examples/flexio/pin/led_output/cm33" type="xml">
            <files mask="flexio_pin_led_output_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_edma_transfer_cm33" name="flexio_uart_edma_transfer_cm33" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm33">
          <external path="driver_examples/flexio/uart/edma_transfer/cm33" type="xml">
            <files mask="flexio_uart_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_interrupt_lpi2c_transfer_cm33" name="flexio_i2c_interrupt_lpi2c_transfer_cm33" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33">
          <external path="driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_read_accel_value_transfer_cm33" name="flexio_i2c_read_accel_value_transfer_cm33" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm33">
          <external path="driver_examples/flexio/i2c/read_accel_value_transfer/cm33" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_interrupt_transfer_cm33" name="flexio_i2s_interrupt_transfer_cm33" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm33">
          <external path="driver_examples/flexio/i2s/interrupt_transfer/cm33" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_edma_transfer_cm33" name="flexio_i2s_edma_transfer_cm33" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm33">
          <external path="driver_examples/flexio/i2s/edma_transfer/cm33" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ewm_cm33" name="ewm_cm33" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/evkmimxrt1180/driver_examples/ewm/cm33">
          <external path="driver_examples/ewm/cm33" type="xml">
            <files mask="ewm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_polling_cm33" name="acmp_polling_cm33" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm33">
          <external path="driver_examples/acmp/polling/cm33" type="xml">
            <files mask="acmp_polling_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_interrupt_cm33" name="acmp_interrupt_cm33" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm33">
          <external path="driver_examples/acmp/interrupt/cm33" type="xml">
            <files mask="acmp_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_master_cm33" name="flexio_spi_edma_lpspi_transfer_master_cm33" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_cm33" name="flexio_spi_edma_lpspi_transfer_slave_cm33" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm33">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm33" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_master_cm33" name="flexio_spi_int_lpspi_transfer_master_cm33" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm33">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_slave_cm33" name="flexio_spi_int_lpspi_transfer_slave_cm33" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_polling_lpspi_transfer_master_cm33" name="flexio_spi_polling_lpspi_transfer_master_cm33" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33">
          <external path="driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pwm_cm33" name="flexio_pwm_cm33" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm33">
          <external path="driver_examples/flexio/pwm/cm33" type="xml">
            <files mask="flexio_pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mcuboot_opensource_cm33" name="mcuboot_opensource_cm33" brief="MCUboot bootloader" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/mcuboot_opensource/cm33">
          <external path="ota_examples/mcuboot_opensource/cm33" type="xml">
            <files mask="mcuboot_opensource_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_basic_cm33" name="ota_mcuboot_basic_cm33" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_basic/cm33">
          <external path="ota_examples/ota_mcuboot_basic/cm33" type="xml">
            <files mask="ota_mcuboot_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_server_enet_cm33" name="ota_mcuboot_server_enet_cm33" brief="This ota_mcuboot_server application demonstrates OTA update using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/enet/cm33">
          <external path="ota_examples/ota_mcuboot_server/enet/cm33" type="xml">
            <files mask="ota_mcuboot_server_enet_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ota_mcuboot_server_wifi_cm33" name="ota_mcuboot_server_wifi_cm33" brief="This ota_mcuboot_server application demonstrates OTA using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ota_examples" path="examples/evkmimxrt1180/ota_examples/ota_mcuboot_server/wifi/cm33">
          <external path="ota_examples/ota_mcuboot_server/wifi/cm33" type="xml">
            <files mask="ota_mcuboot_server_wifi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_trdc_cm33" name="trdc_cm33" brief="The Multicore TRDC demo application demonstrates how to use TRDC on a multicore system to control the access policy of the memory block checker(MBC) and memory region checker(MRC), and how to configure the domain access control(DAC) for bus masters to access both secure and non-secure domains. First, the primary core example uses 1 domain for secure access demo. The primary core which is secure first sets a MRC memory region and a MBC memory block to non-secure access only, then trys to access the memory which triggers the hardfault. In hardfault the access control is changed to secure access to resolve the error. Then, the primary core releases the secondary core from the reset. The secondary core example uses 2 domains, one is for secure access and the other is for non-secure access. By enabling different DAC configuration, different domain is used for the access control. The secure access process is the same as the primary core. In the non-secure access demo, the secondary core sets a MRC memory region and a MBC memory block to secure access only, and switch to the non-secure DAC configuration which force the core to be non-secure. Then trys to access the memory which triggers the hardfault. In hardfault certain flags stored in flash is set to let primary core know and update the configuration to non-secure access to resolve the error, because the TRDC is secure access only." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" linked_projects="evkmimxrt1180_trdc_cm7" path="examples/evkmimxrt1180/driver_examples/trdc/cm33">
          <external path="driver_examples/trdc/cm33" type="xml">
            <files mask="trdc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pwm_cm33" name="pwm_cm33" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pwm" path="examples/evkmimxrt1180/driver_examples/pwm/cm33">
          <external path="driver_examples/pwm/cm33" type="xml">
            <files mask="pwm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_basic_cm33" name="eqdc_basic_cm33" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm33">
          <external path="driver_examples/eqdc/basic/cm33" type="xml">
            <files mask="eqdc_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_index_interrupt_cm33" name="eqdc_index_interrupt_cm33" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm33">
          <external path="driver_examples/eqdc/index_interrupt/cm33" type="xml">
            <files mask="eqdc_index_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_basic_cm33" name="dac12_basic_cm33" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm33">
          <external path="driver_examples/dac12/basic/cm33" type="xml">
            <files mask="dac12_basic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_fifo_interrupt_cm33" name="dac12_fifo_interrupt_cm33" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm33">
          <external path="driver_examples/dac12/fifo_interrupt/cm33" type="xml">
            <files mask="dac12_fifo_interrupt_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_manager_cm33" name="ele_crypto_nvm_manager_cm33" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_manager/cm33">
          <external path="ele_crypto/ele_crypto_nvm_manager/cm33" type="xml">
            <files mask="ele_crypto_nvm_manager_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_shell_cm33" name="shell_cm33" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/shell/cm33">
          <external path="demo_apps/shell/cm33" type="xml">
            <files mask="shell_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_littlefs_shell_cm33" name="littlefs_shell_cm33" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="littlefs_examples" path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm33">
          <external path="littlefs_examples/littlefs_shell/cm33" type="xml">
            <files mask="littlefs_shell_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_cm33" name="sai_cm33" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/sai/cm33">
          <external path="demo_apps/sai/cm33" type="xml">
            <files mask="sai_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_hyper_ram_polling_transfer_cm33" name="flexspi_hyper_ram_polling_transfer_cm33" brief="The flexspi_hyper_ram_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper RAM connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Read Data and Write Data.Example will first Write 256 bytes of data from the start of Hyper ram, then read the data back. at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm33">
          <external path="driver_examples/flexspi/hyper_ram/polling_transfer/cm33" type="xml">
            <files mask="flexspi_hyper_ram_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_polling_transfer_cm33" name="flexspi_octal_polling_transfer_cm33" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm33">
          <external path="driver_examples/flexspi/octal/polling_transfer/cm33" type="xml">
            <files mask="flexspi_octal_polling_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_edma_transfer_cm33" name="flexspi_octal_edma_transfer_cm33" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm33">
          <external path="driver_examples/flexspi/octal/edma_transfer/cm33" type="xml">
            <files mask="flexspi_octal_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_nor_flexspi_cm33" name="flash_component_nor_flexspi_cm33" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_nor" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm33">
          <external path="component_examples/flash_component/flexspi_nor/cm33" type="xml">
            <files mask="flash_component_nor_flexspi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_octal_flexspi_cm33" name="flash_component_octal_flexspi_cm33" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_octal" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm33">
          <external path="component_examples/flash_component/flexspi_octal/cm33" type="xml">
            <files mask="flash_component_octal_flexspi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_xbar_aoi_cm33" name="xbar_aoi_cm33" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm33">
          <external path="demo_apps/xbar_aoi/cm33" type="xml">
            <files mask="xbar_aoi_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_server_matrix_multiply_uart_cm33" name="erpc_server_matrix_multiply_uart_cm33" brief="This example demonstrates usage of eRPC between PC and board using UART transport layer.Board acts like a server and the PC as client. When client starts, it generates two randommatrixes and sends them to server. Server then performs matrix multiplication and sendsresult data back to client. Result matrix is then printed on the PC side.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io PC Side Setup (Python)1. Make sure you have Python installed on your PC2. Install eRPC module to Python by executing setup.py located in: middleware/multicore/erpc/erpc_python3. Install serial module by executing following command in command line: &quot;python -m pip install pyserial&quot;Usage of run_uart.pyusage: run_uart.py [-h] [-c] [-s] [-p PORT] [-b BD]eRPC Matrix Multiply exampleoptional arguments:  -h, --help            show this help message an  -c, --client          Run client  -s, --server          Run server  -p PORT, --port PORT  Serial port  -b BD, --bd BD        Baud rate (default value is 115200)Either server or client has to be selected to runExample:To run PC side as a client with a board connected as a server to COM3 execute:&quot;run_uart.py --client --port COM3&quot;" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multiprocessor_examples" path="examples/evkmimxrt1180/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33">
          <external path="multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33" type="xml">
            <files mask="erpc_server_matrix_multiply_uart_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_single_error_cm33" name="mecc_single_error_cm33" brief="The MECC Single Error project is a simple demonstration program of the SDK MECC driver. It supports Single Error Correction ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm33">
          <external path="driver_examples/mecc/mecc_single_error/cm33" type="xml">
            <files mask="mecc_single_error_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_multie_error_cm33" name="mecc_multie_error_cm33" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm33">
          <external path="driver_examples/mecc/mecc_multi_error/cm33" type="xml">
            <files mask="mecc_multie_error_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_sample_rate_count_cm33" name="lpadc_sample_rate_count_cm33" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm33">
          <external path="demo_apps/lpadc_high_sample_rate/sample_rate_count/cm33" type="xml">
            <files mask="lpadc_sample_rate_count_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_high_sample_rate_sample_signal_cm33" name="lpadc_high_sample_rate_sample_signal_cm33" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm33">
          <external path="demo_apps/lpadc_high_sample_rate/sample_signal/cm33" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_src_global_reset_cm33" name="src_global_reset_cm33" brief="The src_global_reset example shows how to reset the selected slice via software.s" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/src" path="examples/evkmimxrt1180/driver_examples/src/src_global_reset/cm33">
          <external path="driver_examples/src/src_global_reset/cm33" type="xml">
            <files mask="src_global_reset_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_iee_apc_cm33" name="iee_apc_cm33" brief="The IEE APC demo application demonstrates usage of the IEE and IEE APC driver. The Inline Encryption Engine (IEE) together with IEE APC provides a means to perform inline encryption and decryption of information transferred over memory interfaces. This demo application configures region 0 to perform AES XTS encryption and decryption while region 1 to perform AES-CTR decryption from external QSPI FLASH memory. Then data are written into RAM memory (region 0), after that encryption is disabled and encrypted data read. After the successful read, encryption is enabled and memory read again to see that data matches the original written value. Another encrypted data are programmed into FLASH memory (region 1) and after encryption is enabled data are read and compared with expected data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/iee_apc/cm33">
          <external path="demo_apps/iee_apc/cm33" type="xml">
            <files mask="iee_apc_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_interrupt_transfer_cm33" name="spdif_interrupt_transfer_cm33" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm33">
          <external path="driver_examples/spdif/interrupt_transfer/cm33" type="xml">
            <files mask="spdif_interrupt_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_edma_transfer_cm33" name="spdif_edma_transfer_cm33" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm33">
          <external path="driver_examples/spdif/edma_transfer/cm33" type="xml">
            <files mask="spdif_edma_transfer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tee_fault_core0" name="tee_fault_core0" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps/tee_fault" linked_projects="evkmimxrt1180_tee_fault_core1" path="examples/evkmimxrt1180/demo_apps/tee_fault/core0">
          <external path="demo_apps/tee_fault/core0" type="xml">
            <files mask="tee_fault_core0_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_bm_cm33" name="log_bm_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/bm/cm33">
          <external path="component_examples/log/bm/cm33" type="xml">
            <files mask="log_bm_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_freertos_cm33" name="log_freertos_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/freertos/cm33">
          <external path="component_examples/log/freertos/cm33" type="xml">
            <files mask="log_freertos_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_flash_operation_cm33" name="freertos_hello_flash_operation_cm33" brief="The FreeRTOS hello world flash operation project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates two tasks called flash_operation_task and hello_task . First task operate flash and suspend itself, second task print &quot;Hello world.&quot;   message periodically via debug console utility." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm33">
          <external path="freertos_examples/freertos_hello_flash_operation/cm33" type="xml">
            <files mask="freertos_hello_flash_operation_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_cm33" name="freertos_hello_cm33" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm33">
          <external path="freertos_examples/freertos_hello/cm33" type="xml">
            <files mask="freertos_hello_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_generic_cm33" name="freertos_generic_cm33" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm33">
          <external path="freertos_examples/freertos_generic/cm33" type="xml">
            <files mask="freertos_generic_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_event_cm33" name="freertos_event_cm33" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm33">
          <external path="freertos_examples/freertos_event/cm33" type="xml">
            <files mask="freertos_event_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_queue_cm33" name="freertos_queue_cm33" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm33">
          <external path="freertos_examples/freertos_queue/cm33" type="xml">
            <files mask="freertos_queue_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_cm33" name="freertos_sem_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm33">
          <external path="freertos_examples/freertos_sem/cm33" type="xml">
            <files mask="freertos_sem_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_mutex_cm33" name="freertos_mutex_cm33" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm33">
          <external path="freertos_examples/freertos_mutex/cm33" type="xml">
            <files mask="freertos_mutex_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_static_cm33" name="freertos_sem_static_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm33">
          <external path="freertos_examples/freertos_sem_static/cm33" type="xml">
            <files mask="freertos_sem_static_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_swtimer_cm33" name="freertos_swtimer_cm33" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm33">
          <external path="freertos_examples/freertos_swtimer/cm33" type="xml">
            <files mask="freertos_swtimer_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_tickless_rgpio_cm33" name="freertos_tickless_rgpio_cm33" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm33">
          <external path="freertos_examples/freertos_tickless/cm33" type="xml">
            <files mask="freertos_tickless_rgpio_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_cifar10_cm33" name="tflm_cifar10_cm33" brief="CIFAR-10 example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_cifar10">
          <external path="eiq_examples/tflm_cifar10" type="xml">
            <files mask="tflm_cifar10_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_label_image_cm33" name="tflm_label_image_cm33" brief="Label image example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_label_image">
          <external path="eiq_examples/tflm_label_image" type="xml">
            <files mask="tflm_label_image_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tflm_kws_cm33" name="tflm_kws_cm33" brief="Keyword spotting example for TensorFlow Lite Micro" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="eiq_examples" path="examples/evkmimxrt1180/eiq_examples/tflm_kws">
          <external path="eiq_examples/tflm_kws" type="xml">
            <files mask="tflm_kws_cm33_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_freertos_cm7" name="host_hid_mouse_freertos_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/freertos/cm7">
          <external path="usb_examples/usb_host_hid_mouse/freertos/cm7" type="xml">
            <files mask="host_hid_mouse_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_host_hid_mouse_bm_cm7" name="host_hid_mouse_bm_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_host_hid_mouse/bm/cm7">
          <external path="usb_examples/usb_host_hid_mouse/bm/cm7" type="xml">
            <files mask="host_hid_mouse_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_freertos_cm7" name="dev_hid_mouse_freertos_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/freertos/cm7">
          <external path="usb_examples/usb_device_hid_mouse/freertos/cm7" type="xml">
            <files mask="dev_hid_mouse_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_bm_cm7" name="dev_hid_mouse_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse/bm/cm7">
          <external path="usb_examples/usb_device_hid_mouse/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dev_hid_mouse_lite_bm_cm7" name="dev_hid_mouse_lite_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="usb_examples" path="examples/evkmimxrt1180/usb_examples/usb_device_hid_mouse_lite/bm/cm7">
          <external path="usb_examples/usb_device_hid_mouse_lite/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_demo_cm7" name="hello_world_demo_cm7" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world/cm7">
          <external path="demo_apps/hello_world/cm7" type="xml">
            <files mask="hello_world_demo_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_virtual_com_cm7" name="hello_world_virtual_com_cm7" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/hello_world_virtual_com/cm7">
          <external path="demo_apps/hello_world_virtual_com/cm7" type="xml">
            <files mask="hello_world_virtual_com_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rled_blinky_demo_cm7" name="rled_blinky_demo_cm7" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/led_blinky/cm7">
          <external path="demo_apps/led_blinky/cm7" type="xml">
            <files mask="rled_blinky_demo_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_bm_cm7" name="log_bm_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/bm/cm7">
          <external path="component_examples/log/bm/cm7" type="xml">
            <files mask="log_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_log_freertos_cm7" name="log_freertos_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/evkmimxrt1180/component_examples/log/freertos/cm7">
          <external path="component_examples/log/freertos/cm7" type="xml">
            <files mask="log_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_bubble_peripheral_cm7" name="bubble_peripheral_cm7" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/bubble_peripheral/cm7">
          <external path="demo_apps/bubble_peripheral/cm7" type="xml">
            <files mask="bubble_peripheral_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cache_cm7" name="cache_cm7" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/cache" path="examples/evkmimxrt1180/driver_examples/cache/cm7">
          <external path="driver_examples/cache/cm7" type="xml">
            <files mask="cache_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_interrupt_transfer_cm7" name="canfd_interrupt_transfer_cm7" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/interrupt_transfer/cm7">
          <external path="driver_examples/canfd/interrupt_transfer/cm7" type="xml">
            <files mask="canfd_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_cm7" name="canfd_loopback_cm7" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback/cm7">
          <external path="driver_examples/canfd/loopback/cm7" type="xml">
            <files mask="canfd_loopback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_loopback_transfer_cm7" name="canfd_loopback_transfer_cm7" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/loopback_transfer/cm7">
          <external path="driver_examples/canfd/loopback_transfer/cm7" type="xml">
            <files mask="canfd_loopback_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_canfd_ping_pong_buffer_transfer_cm7" name="canfd_ping_pong_buffer_transfer_cm7" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/canfd" path="examples/evkmimxrt1180/driver_examples/canfd/ping_pong_buffer_transfer/cm7">
          <external path="driver_examples/canfd/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_interrupt_transfer_cm7" name="cmsis_lpuart_interrupt_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="cmsis_driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpuart_edma_transfer_cm7" name="cmsis_lpuart_edma_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/evkmimxrt1180/cmsis_driver_examples/lpuart/edma_transfer/cm7">
          <external path="cmsis_driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma3_memory_to_memory_cm7" name="edma3_memory_to_memory_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma3" path="examples/evkmimxrt1180/driver_examples/edma3/memory_to_memory/cm7">
          <external path="driver_examples/edma3/memory_to_memory/cm7" type="xml">
            <files mask="edma3_memory_to_memory_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_scatter_gather_cm7" name="edma4_scatter_gather_cm7" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/scatter_gather/cm7">
          <external path="driver_examples/edma4/scatter_gather/cm7" type="xml">
            <files mask="edma4_scatter_gather_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_cm7" name="edma4_memory_to_memory_cm7" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory/cm7">
          <external path="driver_examples/edma4/memory_to_memory/cm7" type="xml">
            <files mask="edma4_memory_to_memory_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memory_to_memory_transfer_cm7" name="edma4_memory_to_memory_transfer_cm7" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memory_to_memory_transfer/cm7">
          <external path="driver_examples/edma4/memory_to_memory_transfer/cm7" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_memset_cm7" name="edma4_memset_cm7" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/memset/cm7">
          <external path="driver_examples/edma4/memset/cm7" type="xml">
            <files mask="edma4_memset_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_channel_link_cm7" name="edma4_channel_link_cm7" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/channel_link/cm7">
          <external path="driver_examples/edma4/channel_link/cm7" type="xml">
            <files mask="edma4_channel_link_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_wrap_transfer_cm7" name="edma4_wrap_transfer_cm7" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/wrap_transfer/cm7">
          <external path="driver_examples/edma4/wrap_transfer/cm7" type="xml">
            <files mask="edma4_wrap_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_ping_pong_transfer_cm7" name="edma4_ping_pong_transfer_cm7" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/ping_pong_transfer/cm7">
          <external path="driver_examples/edma4/ping_pong_transfer/cm7" type="xml">
            <files mask="edma4_ping_pong_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_edma4_interleave_transfer_cm7" name="edma4_interleave_transfer_cm7" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma4" path="examples/evkmimxrt1180/driver_examples/edma4/interleave_transfer/cm7">
          <external path="driver_examples/edma4/interleave_transfer/cm7" type="xml">
            <files mask="edma4_interleave_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_interrupt_transfer_cm7" name="flexcan_interrupt_transfer_cm7" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/interrupt_transfer/cm7">
          <external path="driver_examples/flexcan/interrupt_transfer/cm7" type="xml">
            <files mask="flexcan_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_cm7" name="flexcan_loopback_cm7" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback/cm7">
          <external path="driver_examples/flexcan/loopback/cm7" type="xml">
            <files mask="flexcan_loopback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_transfer_cm7" name="flexcan_loopback_transfer_cm7" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_transfer/cm7">
          <external path="driver_examples/flexcan/loopback_transfer/cm7" type="xml">
            <files mask="flexcan_loopback_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_ping_pong_buffer_transfer_cm7" name="flexcan_ping_pong_buffer_transfer_cm7" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/ping_pong_buffer_transfer/cm7">
          <external path="driver_examples/flexcan/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_loopback_edma_transfer_cm7" name="flexcan_loopback_edma_transfer_cm7" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/loopback_edma_transfer/cm7">
          <external path="driver_examples/flexcan/loopback_edma_transfer/cm7" type="xml">
            <files mask="flexcan_loopback_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_edma_transfer_cm7" name="flexcan_efifo_edma_transfer_cm7" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_edma_transfer/cm7">
          <external path="driver_examples/flexcan/efifo_edma_transfer/cm7" type="xml">
            <files mask="flexcan_efifo_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexcan_efifo_interrupt_transfer_cm7" name="flexcan_efifo_interrupt_transfer_cm7" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/evkmimxrt1180/driver_examples/flexcan/efifo_interrupt_transfer/cm7">
          <external path="driver_examples/flexcan/efifo_interrupt_transfer/cm7" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_polling_transfer_cm7" name="flexspi_nor_polling_transfer_cm7" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/polling_transfer/cm7">
          <external path="driver_examples/flexspi/nor/polling_transfer/cm7" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_nor_edma_transfer_cm7" name="flexspi_nor_edma_transfer_cm7" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/nor/edma_transfer/cm7">
          <external path="driver_examples/flexspi/nor/edma_transfer/cm7" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tstmr_cm7" name="tstmr_cm7" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/evkmimxrt1180/driver_examples/tstmr/cm7">
          <external path="driver_examples/tstmr/cm7" type="xml">
            <files mask="tstmr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sysctr_cm7" name="sysctr_cm7" brief="The sysctr example shows the usage of System Counter driver in application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sysctr" path="examples/evkmimxrt1180/driver_examples/sysctr/cm7">
          <external path="driver_examples/sysctr/cm7" type="xml">
            <files mask="sysctr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_timer_cm7" name="gpt_timer_cm7" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/timer/cm7">
          <external path="driver_examples/gpt/timer/cm7" type="xml">
            <files mask="gpt_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_gpt_compare_cm7" name="gpt_compare_cm7" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimxrt1180/driver_examples/gpt/compare/cm7">
          <external path="driver_examples/gpt/compare/cm7" type="xml">
            <files mask="gpt_compare_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_master_read_sensor_lsm6dso_cm7" name="i3c_master_read_sensor_lsm6dso_cm7" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/master_read_sensor_lsm6dso/cm7">
          <external path="driver_examples/i3c/master_read_sensor_lsm6dso/cm7" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_master_cm7" name="i3c_polling_b2b_transfer_master_cm7" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/master/cm7">
          <external path="driver_examples/i3c/polling_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_polling_b2b_transfer_slave_cm7" name="i3c_polling_b2b_transfer_slave_cm7" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/polling_b2b_transfer/slave/cm7">
          <external path="driver_examples/i3c/polling_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_master_cm7" name="i3c_interrupt_b2b_transfer_master_cm7" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/master/cm7">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_interrupt_b2b_transfer_slave_cm7" name="i3c_interrupt_b2b_transfer_slave_cm7" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/interrupt_b2b_transfer/slave/cm7">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_master_cm7" name="i3c_edma_b2b_transfer_master_cm7" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/master/cm7">
          <external path="driver_examples/i3c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_i3c_edma_b2b_transfer_slave_cm7" name="i3c_edma_b2b_transfer_slave_cm7" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/evkmimxrt1180/driver_examples/i3c/edma_b2b_transfer/slave/cm7">
          <external path="driver_examples/i3c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_cm7" name="lpi2c_interrupt_cm7" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt/cm7">
          <external path="driver_examples/lpi2c/interrupt/cm7" type="xml">
            <files mask="lpi2c_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_master_cm7" name="lpi2c_interrupt_b2b_transfer_master_cm7" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_interrupt_b2b_transfer_slave_cm7" name="lpi2c_interrupt_b2b_transfer_slave_cm7" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_master_cm7" name="lpi2c_polling_b2b_master_cm7" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/master/cm7">
          <external path="driver_examples/lpi2c/polling_b2b/master/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_polling_b2b_slave_cm7" name="lpi2c_polling_b2b_slave_cm7" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/polling_b2b/slave/cm7">
          <external path="driver_examples/lpi2c/polling_b2b/slave/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_master_cm7" name="lpi2c_edma_b2b_transfer_master_cm7" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpi2c_edma_b2b_transfer_slave_cm7" name="lpi2c_edma_b2b_transfer_slave_cm7" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/evkmimxrt1180/driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_single_channel_cm7" name="lpit_single_channel_cm7" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/single_channel/cm7">
          <external path="driver_examples/lpit/single_channel/cm7" type="xml">
            <files mask="lpit_single_channel_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_pwm_cm7" name="lpit_pwm_cm7" brief="This example show how to use SDK drivers to implement the PWM feature by LPIT IP module in dualperiodcounter mode.You can set up PWM singal frequency and duty in this example.Connect PWM singal output pin to oscilloscope, you will see PWM wave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/evkmimxrt1180/driver_examples/lpit/lpit_pwm/cm7">
          <external path="driver_examples/lpit/lpit_pwm/cm7" type="xml">
            <files mask="lpit_pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_master_cm7" name="lpspi_interrupt_b2b_master_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/master/cm7">
          <external path="driver_examples/lpspi/interrupt_b2b/master/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_interrupt_b2b_slave_cm7" name="lpspi_interrupt_b2b_slave_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/interrupt_b2b/slave/cm7">
          <external path="driver_examples/lpspi/interrupt_b2b/slave/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_master_cm7" name="lpspi_edma_b2b_transfer_master_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_edma_b2b_transfer_slave_cm7" name="lpspi_edma_b2b_transfer_slave_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_master_cm7" name="lpspi_polling_b2b_transfer_master_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/master/cm7">
          <external path="driver_examples/lpspi/polling_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpspi_polling_b2b_transfer_slave_cm7" name="lpspi_polling_b2b_transfer_slave_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/evkmimxrt1180/driver_examples/lpspi/polling_b2b_transfer/slave/cm7">
          <external path="driver_examples/lpspi/polling_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lptmr_cm7" name="lptmr_cm7" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/evkmimxrt1180/driver_examples/lptmr/cm7">
          <external path="driver_examples/lptmr/cm7" type="xml">
            <files mask="lptmr_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_cm7" name="lpuart_interrupt_cm7" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt/cm7">
          <external path="driver_examples/lpuart/interrupt/cm7" type="xml">
            <files mask="lpuart_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_edma_transfer_cm7" name="lpuart_edma_transfer_cm7" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/edma_transfer/cm7">
          <external path="driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="lpuart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_cm7" name="lpuart_interrupt_transfer_cm7" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_rb_transfer_cm7" name="lpuart_interrupt_rb_transfer_cm7" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_rb_transfer/cm7">
          <external path="driver_examples/lpuart/interrupt_rb_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_cm7" name="lpuart_polling_cm7" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling/cm7">
          <external path="driver_examples/lpuart/polling/cm7" type="xml">
            <files mask="lpuart_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_9bit_interrupt_transfer_cm7" name="lpuart_9bit_interrupt_transfer_cm7" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/9bit_interrupt_transfer/cm7">
          <external path="driver_examples/lpuart/9bit_interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_interrupt_transfer_seven_bits_cm7" name="lpuart_interrupt_transfer_seven_bits_cm7" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/interrupt_transfer_seven_bits/cm7">
          <external path="driver_examples/lpuart/interrupt_transfer_seven_bits/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpuart_polling_seven_bits_cm7" name="lpuart_polling_seven_bits_cm7" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/evkmimxrt1180/driver_examples/lpuart/polling_seven_bits/cm7">
          <external path="driver_examples/lpuart/polling_seven_bits/cm7" type="xml">
            <files mask="lpuart_polling_seven_bits_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_timer_cm7" name="qtmr_timer_cm7" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/timer/cm7">
          <external path="driver_examples/qtmr/timer/cm7" type="xml">
            <files mask="qtmr_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_cm7" name="qtmr_inputcapture_outputpwm_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm/cm7">
          <external path="driver_examples/qtmr/inputcapture_outputpwm/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_qtmr_inputcapture_outputpwm_dma_cm7" name="qtmr_inputcapture_outputpwm_dma_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="examples/evkmimxrt1180/driver_examples/qtmr/inputcapture_outputpwm_dma/cm7">
          <external path="driver_examples/qtmr/inputcapture_outputpwm_dma/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_input_interrupt_cm7" name="rgpio_input_interrupt_cm7" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/input_interrupt/cm7">
          <external path="driver_examples/rgpio/input_interrupt/cm7" type="xml">
            <files mask="rgpio_input_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rgpio_led_output_cm7" name="rgpio_led_output_cm7" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rgpio" path="examples/evkmimxrt1180/driver_examples/rgpio/led_output/cm7">
          <external path="driver_examples/rgpio/led_output/cm7" type="xml">
            <files mask="rgpio_led_output_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpit_adc_cm7" name="lpit_adc_cm7" brief="The lpit_adc example shows how to use LPIT to generate ADC triggers. On top of the basic counter, to use the ADC trigger, simply enable the &quot;milestone&quot; of the ADC trigger and set it with a user-defined value. When the LPIT counter is on, when the count passes the &quot;milestone&quot;, a pre-trigger of the ADC is generated and sent to the ADC module. In this example, the ADC is configured with hardware triggering and conversion complete interrupt enabled. Once it gets a trigger from the LPIT, the transition occurs and then the ISR is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc/lpit_adc" path="examples/evkmimxrt1180/driver_examples/lpadc/lpit_adc/cm7">
          <external path="driver_examples/lpadc/lpit_adc/cm7" type="xml">
            <files mask="lpit_adc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_txrx_transfer_cm7" name="netc_txrx_transfer_cm7" brief="The example shows the way to use NETC driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the NETC. 2. How to get the time stamp of the PTP 1588 timer. 3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/txrx_transfer/cm7">
          <external path="driver_examples/netc/txrx_transfer/cm7" type="xml">
            <files mask="netc_txrx_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_switch_cm7" name="netc_switch_cm7" brief="The example shows the way to use NETC driver to act as a switch. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/netc" path="examples/evkmimxrt1180/driver_examples/netc/switch/cm7">
          <external path="driver_examples/netc/switch/cm7" type="xml">
            <files mask="netc_switch_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tpm_timer_cm7" name="tpm_timer_cm7" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/evkmimxrt1180/driver_examples/tpm/timer/cm7">
          <external path="driver_examples/tpm/timer/cm7" type="xml">
            <files mask="tpm_timer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_polling_cm7" name="lpadc_polling_cm7" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/polling/cm7">
          <external path="driver_examples/lpadc/polling/cm7" type="xml">
            <files mask="lpadc_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_interrupt_cm7" name="lpadc_interrupt_cm7" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/interrupt/cm7">
          <external path="driver_examples/lpadc/interrupt/cm7" type="xml">
            <files mask="lpadc_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_dual_single_ended_conversion_cm7" name="lpadc_dual_single_ended_conversion_cm7" brief="The lpadc_dual_single_ended_conversion example shows how to use two channel with LPADC driver. In this example, user should indicate two channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input, Channel B does not need to be paired with Channel A, Channel B is user selectable.When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/evkmimxrt1180/driver_examples/lpadc/dual_single_ended_conversion/cm7">
          <external path="driver_examples/lpadc/dual_single_ended_conversion/cm7" type="xml">
            <files mask="lpadc_dual_single_ended_conversion_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_cm7" name="erpc_matrix_multiply_mu_cm7" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu/cm7">
          <external path="multicore_examples/erpc_matrix_multiply_mu/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_mu_rtos_cm7" name="erpc_matrix_multiply_mu_rtos_cm7" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_mu_rtos/cm7">
          <external path="multicore_examples/erpc_matrix_multiply_mu_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_cm7" name="erpc_matrix_multiply_rpmsg_cm7" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg/cm7">
          <external path="multicore_examples/erpc_matrix_multiply_rpmsg/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_matrix_multiply_rpmsg_rtos_cm7" name="erpc_matrix_multiply_rpmsg_rtos_cm7" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7">
          <external path="multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_erpc_two_way_rpc_rpmsg_rtos_cm7" name="erpc_two_way_rpc_rpmsg_rtos_cm7" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7">
          <external path="multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_message_buffers_cm7" name="freertos_message_buffers_cm7" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/freertos_message_buffers/cm7">
          <external path="multicore_examples/freertos_message_buffers/cm7" type="xml">
            <files mask="freertos_message_buffers_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_hello_world_cm7" name="hello_world_cm7" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/hello_world/cm7">
          <external path="multicore_examples/hello_world/cm7" type="xml">
            <files mask="hello_world_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_cm7" name="rpmsg_lite_pingpong_cm7" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong/cm7">
          <external path="multicore_examples/rpmsg_lite_pingpong/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_rpmsg_lite_pingpong_rtos_cm7" name="rpmsg_lite_pingpong_rtos_cm7" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="multicore_examples" path="examples/evkmimxrt1180/multicore_examples/rpmsg_lite_pingpong_rtos/cm7">
          <external path="multicore_examples/rpmsg_lite_pingpong_rtos/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_netc_psi_vsi_message_cm7" name="netc_psi_vsi_message_cm7" brief="The Multicore NETC PSI-VSI demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core use NETC PSI to send/receive frames. It also releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running and uses NETC VSI to send/receive frames." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/evkmimxrt1180/driver_examples/netc/psi_vsi_message/cm7">
          <external path="driver_examples/netc/psi_vsi_message/cm7" type="xml">
            <files mask="netc_psi_vsi_message_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sema42_dual_core_core1" name="sema42_dual_core_core1" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sema42" path="examples/evkmimxrt1180/driver_examples/sema42/dual_core/core1">
          <external path="driver_examples/sema42/dual_core/core1" type="xml">
            <files mask="sema42_dual_core_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_polling_core1" name="mu_polling_core1" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" path="examples/evkmimxrt1180/driver_examples/mu/polling/core1">
          <external path="driver_examples/mu/polling/core1" type="xml">
            <files mask="mu_polling_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mu_interrupt_core1" name="mu_interrupt_core1" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mu" path="examples/evkmimxrt1180/driver_examples/mu/interrupt/core1">
          <external path="driver_examples/mu/interrupt/core1" type="xml">
            <files mask="mu_interrupt_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_p2p_out_edma_cm7" name="asrc_p2p_out_edma_cm7" brief="The asrc_p2p_out_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_p2p_out_edma/cm7">
          <external path="driver_examples/asrc/asrc_p2p_out_edma/cm7" type="xml">
            <files mask="asrc_p2p_out_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_edma_cm7" name="asrc_m2m_edma_cm7" brief="The asrc_m2m_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_edma/cm7">
          <external path="driver_examples/asrc/asrc_m2m_edma/cm7" type="xml">
            <files mask="asrc_m2m_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_interrupt_cm7" name="asrc_m2m_interrupt_cm7" brief="The asrc_m2m_interrupt example shows how to use asrc driver with interrupt:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_interrupt/cm7">
          <external path="driver_examples/asrc/asrc_m2m_interrupt/cm7" type="xml">
            <files mask="asrc_m2m_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_asrc_m2m_polling_cm7" name="asrc_m2m_polling_cm7" brief="The asrc_m2m_polling example shows how to use asrc driver with polling:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/asrc" path="examples/evkmimxrt1180/driver_examples/asrc/asrc_m2m_polling/cm7">
          <external path="driver_examples/asrc/asrc_m2m_polling/cm7" type="xml">
            <files mask="asrc_m2m_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_cm7" name="sai_interrupt_cm7" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt/cm7">
          <external path="driver_examples/sai/interrupt/cm7" type="xml">
            <files mask="sai_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_record_playback_cm7" name="sai_interrupt_record_playback_cm7" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_record_playback/cm7">
          <external path="driver_examples/sai/interrupt_record_playback/cm7" type="xml">
            <files mask="sai_interrupt_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_interrupt_transfer_cm7" name="sai_interrupt_transfer_cm7" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/interrupt_transfer/cm7">
          <external path="driver_examples/sai/interrupt_transfer/cm7" type="xml">
            <files mask="sai_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_transfer_cm7" name="sai_edma_transfer_cm7" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_transfer/cm7">
          <external path="driver_examples/sai/edma_transfer/cm7" type="xml">
            <files mask="sai_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_record_playback_cm7" name="sai_edma_record_playback_cm7" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_record_playback/cm7">
          <external path="driver_examples/sai/edma_record_playback/cm7" type="xml">
            <files mask="sai_edma_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_half_interrupt_cm7" name="sai_edma_ping_pong_buffer_half_interrupt_cm7" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7">
          <external path="driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_ping_pong_buffer_cm7" name="sai_edma_ping_pong_buffer_cm7" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_ping_pong_buffer/cm7">
          <external path="driver_examples/sai/edma_ping_pong_buffer/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_record_playback_cm7" name="sai_edma_tdm_record_playback_cm7" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm_record_playback/cm7">
          <external path="driver_examples/sai/edma_tdm_record_playback/cm7" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_edma_tdm_cm7" name="sai_edma_tdm_cm7" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimxrt1180/driver_examples/sai/edma_tdm/cm7">
          <external path="driver_examples/sai/edma_tdm/cm7" type="xml">
            <files mask="sai_edma_tdm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_bm_cm7" name="lwip_dhcp_bm_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/bm/cm7">
          <external path="lwip_examples/lwip_dhcp/bm/cm7" type="xml">
            <files mask="lwip_dhcp_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_dhcp_freertos_cm7" name="lwip_dhcp_freertos_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_dhcp/freertos/cm7">
          <external path="lwip_examples/lwip_dhcp/freertos/cm7" type="xml">
            <files mask="lwip_dhcp_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_mqtt_freertos_cm7" name="lwip_mqtt_freertos_cm7" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_mqtt/freertos/cm7">
          <external path="lwip_examples/lwip_mqtt/freertos/cm7" type="xml">
            <files mask="lwip_mqtt_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_bm_cm7" name="lwip_httpsrv_bm_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/bm/cm7">
          <external path="lwip_examples/lwip_httpsrv/bm/cm7" type="xml">
            <files mask="lwip_httpsrv_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpsrv_freertos_cm7" name="lwip_httpsrv_freertos_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpsrv/freertos/cm7">
          <external path="lwip_examples/lwip_httpsrv/freertos/cm7" type="xml">
            <files mask="lwip_httpsrv_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_bm_cm7" name="lwip_httpssrv_mbedTLS_bm_cm7" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7">
          <external path="lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_httpssrv_mbedTLS_freertos_cm7" name="lwip_httpssrv_mbedTLS_freertos_cm7" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7">
          <external path="lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_iperf_bm_cm7" name="lwip_iperf_bm_cm7" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_iperf/bm/cm7">
          <external path="lwip_examples/lwip_iperf/bm/cm7" type="xml">
            <files mask="lwip_iperf_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ipv4_ipv6_echo_freertos_cm7" name="lwip_ipv4_ipv6_echo_freertos_cm7" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7">
          <external path="lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_bm_cm7" name="lwip_ping_bm_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/bm/cm7">
          <external path="lwip_examples/lwip_ping/bm/cm7" type="xml">
            <files mask="lwip_ping_bm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lwip_ping_freertos_cm7" name="lwip_ping_freertos_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="lwip_examples" path="examples/evkmimxrt1180/lwip_examples/lwip_ping/freertos/cm7">
          <external path="lwip_examples/lwip_ping/freertos/cm7" type="xml">
            <files mask="lwip_ping_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_interrupt_cm7" name="pdm_interrupt_cm7" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_interrupt/cm7">
          <external path="driver_examples/pdm/pdm_interrupt/cm7" type="xml">
            <files mask="pdm_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_edma_transfer_cm7" name="pdm_edma_transfer_cm7" brief="pdm_edma_transfer" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_edma_transfer/cm7">
          <external path="driver_examples/pdm/pdm_edma_transfer/cm7" type="xml">
            <files mask="pdm_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_standalone_transfer_edma_cm7" name="pdm_standalone_transfer_edma_cm7" brief="pdm_standalone_transfer_edma" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_standalone_transfer_edma/cm7">
          <external path="driver_examples/pdm/pdm_standalone_transfer_edma/cm7" type="xml">
            <files mask="pdm_standalone_transfer_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_cm7" name="pdm_sai_interrupt_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt/cm7">
          <external path="driver_examples/pdm/pdm_sai_interrupt/cm7" type="xml">
            <files mask="pdm_sai_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_interrupt_transfer_cm7" name="pdm_sai_interrupt_transfer_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_interrupt_transfer/cm7">
          <external path="driver_examples/pdm/pdm_sai_interrupt_transfer/cm7" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_edma_cm7" name="pdm_sai_edma_cm7" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_edma/cm7">
          <external path="driver_examples/pdm/pdm_sai_edma/cm7" type="xml">
            <files mask="pdm_sai_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pdm_sai_multi_channel_edma_cm7" name="pdm_sai_multi_channel_edma_cm7" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdm" path="examples/evkmimxrt1180/driver_examples/pdm/pdm_sai_multi_channel_edma/cm7">
          <external path="driver_examples/pdm/pdm_sai_multi_channel_edma/cm7" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_polling_cm7" name="sdcard_polling_cm7" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_polling" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_polling/cm7">
          <external path="sdmmc_examples/sdcard_polling/cm7" type="xml">
            <files mask="sdcard_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_interrupt_cm7" name="sdcard_interrupt_cm7" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_interrupt" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_interrupt/cm7">
          <external path="sdmmc_examples/sdcard_interrupt/cm7" type="xml">
            <files mask="sdcard_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_freertos_cm7" name="sdcard_freertos_cm7" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_freertos/cm7">
          <external path="sdmmc_examples/sdcard_freertos/cm7" type="xml">
            <files mask="sdcard_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_cm7" name="sdcard_fatfs_cm7" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs/cm7">
          <external path="sdmmc_examples/sdcard_fatfs/cm7" type="xml">
            <files mask="sdcard_fatfs_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sdcard_fatfs_freertos_cm7" name="sdcard_fatfs_freertos_cm7" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="sdmmc_examples/sdcard_fatfs_freertos" path="examples/evkmimxrt1180/sdmmc_examples/sdcard_fatfs_freertos/cm7">
          <external path="sdmmc_examples/sdcard_fatfs_freertos/cm7" type="xml">
            <files mask="sdcard_fatfs_freertos_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_kpp_cm7" name="kpp_cm7" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/kpp" path="examples/evkmimxrt1180/driver_examples/kpp/cm7">
          <external path="driver_examples/kpp/cm7" type="xml">
            <files mask="kpp_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sinc_adc_cm7" name="sinc_adc_cm7" brief="The sinc adc example shows how to use SINC driver to configure SINC module as single conversion mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sinc" path="examples/evkmimxrt1180/driver_examples/sinc/adc/cm7">
          <external path="driver_examples/sinc/adc/cm7" type="xml">
            <files mask="sinc_adc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_master_cm7" name="cmsis_lpi2c_edma_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_edma_b2b_transfer_slave_cm7" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_master_cm7" name="cmsis_lpi2c_int_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpi2c_int_b2b_transfer_slave_cm7" name="cmsis_lpi2c_int_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/evkmimxrt1180/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_master_cm7" name="cmsis_lpspi_edma_b2b_transfer_master_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_edma_b2b_transfer_slave_cm7" name="cmsis_lpspi_edma_b2b_transfer_slave_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_master_cm7" name="cmsis_lpspi_int_b2b_transfer_master_cm7" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_cmsis_lpspi_int_b2b_transfer_slave_cm7" name="cmsis_lpspi_int_b2b_transfer_slave_cm7" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/evkmimxrt1180/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_fsl_romapi_cm7" name="fsl_romapi_cm7" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi" path="examples/evkmimxrt1180/driver_examples/fsl_romapi/cm7">
          <external path="driver_examples/fsl_romapi/cm7" type="xml">
            <files mask="fsl_romapi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_semc_cm7" name="semc_cm7" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/semc" path="examples/evkmimxrt1180/driver_examples/semc/sdram/cm7">
          <external path="driver_examples/semc/sdram/cm7" type="xml">
            <files mask="semc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tempsensor_cm7" name="tempsensor_cm7" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tempsensor" path="examples/evkmimxrt1180/driver_examples/tempsensor/cm7">
          <external path="driver_examples/tempsensor/cm7" type="xml">
            <files mask="tempsensor_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_power_mode_switch_bm_dcdc_core1" name="power_mode_switch_bm_dcdc_core1" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/power_mode_switch/bm_dcdc/core1">
          <external path="demo_apps/power_mode_switch/bm_dcdc/core1" type="xml">
            <files mask="power_mode_switch_bm_dcdc_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_digital_io_cm7" name="ecat_examples_digital_io_cm7" brief="An EtherCAT device example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_examples" path="examples/evkmimxrt1180/ecat_examples/digital_io/cm7">
          <external path="ecat_examples/digital_io/cm7" type="xml">
            <files mask="ecat_examples_digital_io_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ecat_examples_eoe_cm7" name="ecat_examples_eoe_cm7" brief="An EtherCAT EOE example with the SSC tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ecat_eoe" path="examples/evkmimxrt1180/ecat_examples/eoe/cm7">
          <external path="ecat_examples/eoe/cm7" type="xml">
            <files mask="ecat_examples_eoe_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_polling_transfer_cm7" name="flexio_uart_polling_transfer_cm7" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/polling_transfer/cm7">
          <external path="driver_examples/flexio/uart/polling_transfer/cm7" type="xml">
            <files mask="flexio_uart_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_interrupt_transfer_cm7" name="flexio_uart_interrupt_transfer_cm7" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/interrupt_transfer/cm7">
          <external path="driver_examples/flexio/uart/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_int_rb_transfer_cm7" name="flexio_uart_int_rb_transfer_cm7" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/int_rb_transfer/cm7">
          <external path="driver_examples/flexio/uart/int_rb_transfer/cm7" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_input_interrupt_cm7" name="flexio_pin_input_interrupt_cm7" brief="The FLEXIO PIN Example project is a demonstration program that uses the FLEXIO software to manipulate the flexio-pin as input function.The example uses FLEXIO-PIN input to capture the edge of other gpio pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/input_interrupt/cm7">
          <external path="driver_examples/flexio/pin/input_interrupt/cm7" type="xml">
            <files mask="flexio_pin_input_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pin_led_output_cm7" name="flexio_pin_led_output_cm7" brief="The FLEXIO led project is a demonstration program that uses the FELXIO software to manipulate the felxio-pin.The example is supported by the set, clear, and toggle write-only registers for each flexio output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pin/led_output/cm7">
          <external path="driver_examples/flexio/pin/led_output/cm7" type="xml">
            <files mask="flexio_pin_led_output_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_uart_edma_transfer_cm7" name="flexio_uart_edma_transfer_cm7" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/uart/edma_transfer/cm7">
          <external path="driver_examples/flexio/uart/edma_transfer/cm7" type="xml">
            <files mask="flexio_uart_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_interrupt_lpi2c_transfer_cm7" name="flexio_i2c_interrupt_lpi2c_transfer_cm7" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7">
          <external path="driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2c_read_accel_value_transfer_cm7" name="flexio_i2c_read_accel_value_transfer_cm7" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2c/read_accel_value_transfer/cm7">
          <external path="driver_examples/flexio/i2c/read_accel_value_transfer/cm7" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_interrupt_transfer_cm7" name="flexio_i2s_interrupt_transfer_cm7" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/interrupt_transfer/cm7">
          <external path="driver_examples/flexio/i2s/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_i2s_edma_transfer_cm7" name="flexio_i2s_edma_transfer_cm7" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/i2s/edma_transfer/cm7">
          <external path="driver_examples/flexio/i2s/edma_transfer/cm7" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ewm_cm7" name="ewm_cm7" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/evkmimxrt1180/driver_examples/ewm/cm7">
          <external path="driver_examples/ewm/cm7" type="xml">
            <files mask="ewm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_polling_cm7" name="acmp_polling_cm7" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/polling/cm7">
          <external path="driver_examples/acmp/polling/cm7" type="xml">
            <files mask="acmp_polling_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_acmp_interrupt_cm7" name="acmp_interrupt_cm7" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/acmp" path="examples/evkmimxrt1180/driver_examples/acmp/interrupt/cm7">
          <external path="driver_examples/acmp/interrupt/cm7" type="xml">
            <files mask="acmp_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_master_cm7" name="flexio_spi_edma_lpspi_transfer_master_cm7" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_cm7" name="flexio_spi_edma_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_master_cm7" name="flexio_spi_int_lpspi_transfer_master_cm7" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/master/cm7">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_int_lpspi_transfer_slave_cm7" name="flexio_spi_int_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_spi_polling_lpspi_transfer_master_cm7" name="flexio_spi_polling_lpspi_transfer_master_cm7" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7">
          <external path="driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexio_pwm_cm7" name="flexio_pwm_cm7" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/evkmimxrt1180/driver_examples/flexio/pwm/cm7">
          <external path="driver_examples/flexio/pwm/cm7" type="xml">
            <files mask="flexio_pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_trdc_cm7" name="trdc_cm7" brief="The Multicore TRDC demo application demonstrates how to use TRDC on a multicore system to control the access policy of the memory block checker(MBC) and memory region checker(MRC), and how to configure the domain access control(DAC) for bus masters to access both secure and non-secure domains. First, the primary core example uses 1 domain for secure access demo. The primary core which is secure first sets a MRC memory region and a MBC memory block to non-secure access only, then trys to access the memory which triggers the hardfault. In hardfault the access control is changed to secure access to resolve the error. Then, the primary core releases the secondary core from the reset. The secondary core example uses 2 domains, one is for secure access and the other is for non-secure access. By enabling different DAC configuration, different domain is used for the access control. The secure access process is the same as the primary core. In the non-secure access demo, the secondary core sets a MRC memory region and a MBC memory block to secure access only, and switch to the non-secure DAC configuration which force the core to be non-secure. Then trys to access the memory which triggers the hardfault. In hardfault certain flags stored in flash is set to let primary core know and update the configuration to non-secure access to resolve the error, because the TRDC is secure access only." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/evkmimxrt1180/driver_examples/trdc/cm7">
          <external path="driver_examples/trdc/cm7" type="xml">
            <files mask="trdc_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_pwm_cm7" name="pwm_cm7" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pwm" path="examples/evkmimxrt1180/driver_examples/pwm/cm7">
          <external path="driver_examples/pwm/cm7" type="xml">
            <files mask="pwm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_basic_cm7" name="eqdc_basic_cm7" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/basic/cm7">
          <external path="driver_examples/eqdc/basic/cm7" type="xml">
            <files mask="eqdc_basic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_eqdc_index_interrupt_cm7" name="eqdc_index_interrupt_cm7" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/eqdc" path="examples/evkmimxrt1180/driver_examples/eqdc/index_interrupt/cm7">
          <external path="driver_examples/eqdc/index_interrupt/cm7" type="xml">
            <files mask="eqdc_index_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_basic_cm7" name="dac12_basic_cm7" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/basic/cm7">
          <external path="driver_examples/dac12/basic/cm7" type="xml">
            <files mask="dac12_basic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_dac12_fifo_interrupt_cm7" name="dac12_fifo_interrupt_cm7" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac12" path="examples/evkmimxrt1180/driver_examples/dac12/fifo_interrupt/cm7">
          <external path="driver_examples/dac12/fifo_interrupt/cm7" type="xml">
            <files mask="dac12_fifo_interrupt_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_shell_cm7" name="shell_cm7" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/shell/cm7">
          <external path="demo_apps/shell/cm7" type="xml">
            <files mask="shell_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_littlefs_shell_cm7" name="littlefs_shell_cm7" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="littlefs_examples" path="examples/evkmimxrt1180/littlefs_examples/littlefs_shell/cm7">
          <external path="littlefs_examples/littlefs_shell/cm7" type="xml">
            <files mask="littlefs_shell_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_sai_cm7" name="sai_cm7" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/sai/cm7">
          <external path="demo_apps/sai/cm7" type="xml">
            <files mask="sai_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_hsm_cm7" name="ele_crypto_hsm_cm7" brief="The ELE Crypto Example project is a demonstration program that uses the MCUX SDK software to perform crypto operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_hsm/cm7">
          <external path="ele_crypto/ele_crypto_hsm/cm7" type="xml">
            <files mask="ele_crypto_hsm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_common_cm7" name="ele_crypto_common_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_common/cm7">
          <external path="ele_crypto/ele_crypto_common/cm7" type="xml">
            <files mask="ele_crypto_common_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_hash_cm7" name="ele_crypto_generic_hash_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_hash/cm7">
          <external path="ele_crypto/ele_crypto_generic_hash/cm7" type="xml">
            <files mask="ele_crypto_generic_hash_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_selftest_cm7" name="mbedtls_selftest_cm7" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_selftest/cm7">
          <external path="mbedtls_examples/mbedtls_selftest/cm7" type="xml">
            <files mask="mbedtls_selftest_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_benchmark_cm7" name="mbedtls_benchmark_cm7" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_benchmark/cm7">
          <external path="mbedtls_examples/mbedtls_benchmark/cm7" type="xml">
            <files mask="mbedtls_benchmark_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_cm7" name="ele_crypto_nvm_cm7" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm/cm7">
          <external path="ele_crypto/ele_crypto_nvm/cm7" type="xml">
            <files mask="ele_crypto_nvm_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_nvm_generic_cm7" name="ele_crypto_nvm_generic_cm7" brief="The ELE Crypto NVM Example project is a demonstration program that uses the MCUX SDK software to perform non volatile memory (flash) operations with EdgeLock Enclave (ELE) and usage of its services with direct use of Messaging Unit driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_nvm_generic/cm7">
          <external path="ele_crypto/ele_crypto_nvm_generic/cm7" type="xml">
            <files mask="ele_crypto_nvm_generic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_aes_cm7" name="ele_crypto_generic_aes_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_aes/cm7">
          <external path="ele_crypto/ele_crypto_generic_aes/cm7" type="xml">
            <files mask="ele_crypto_generic_aes_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_generic_rsa_cm7" name="ele_crypto_generic_rsa_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_generic_rsa/cm7">
          <external path="ele_crypto/ele_crypto_generic_rsa/cm7" type="xml">
            <files mask="ele_crypto_generic_rsa_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_ele_crypto_baseline_api_cm7" name="ele_crypto_baseline_api_cm7" brief="The ELE Crypto Generic Example project is a demonstration program that uses the MCUX SDK software to perform generic crypto operations usign plaintext key with EdgeLock Enclave (ELE)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="ele_crypto" path="examples/evkmimxrt1180/ele_crypto/ele_crypto_baseline_api/cm7">
          <external path="ele_crypto/ele_crypto_baseline_api/cm7" type="xml">
            <files mask="ele_crypto_baseline_api_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cm7" name="mbedtls_ele_ecc_opaque_key_cm7" brief="The mbedTLS ECC opaque key demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm7">
          <external path="mbedtls_examples/mbedtls_ele_ecc_opaque_key/cm7" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mbedtls_ele_ecc_opaque_key_cert_cm7" name="mbedtls_ele_ecc_opaque_key_cert_cm7" brief="The mbedTLS ECC write certificate demo application performs ECDSA algorithm operations for specific opaque use case with one ECDSA P256 key pair to self-sign an X509 certificate." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/evkmimxrt1180/mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm7">
          <external path="mbedtls_examples/mbedtls_ele_ecc_opaque_key_cert/cm7" type="xml">
            <files mask="mbedtls_ele_ecc_opaque_key_cert_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_hyper_ram_polling_transfer_cm7" name="flexspi_hyper_ram_polling_transfer_cm7" brief="The flexspi_hyper_ram_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper RAM connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Read Data and Write Data.Example will first Write 256 bytes of data from the start of Hyper ram, then read the data back. at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/hyper_ram/polling_transfer/cm7">
          <external path="driver_examples/flexspi/hyper_ram/polling_transfer/cm7" type="xml">
            <files mask="flexspi_hyper_ram_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_polling_transfer_cm7" name="flexspi_octal_polling_transfer_cm7" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/polling_transfer/cm7">
          <external path="driver_examples/flexspi/octal/polling_transfer/cm7" type="xml">
            <files mask="flexspi_octal_polling_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flexspi_octal_edma_transfer_cm7" name="flexspi_octal_edma_transfer_cm7" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexspi" path="examples/evkmimxrt1180/driver_examples/flexspi/octal/edma_transfer/cm7">
          <external path="driver_examples/flexspi/octal/edma_transfer/cm7" type="xml">
            <files mask="flexspi_octal_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_nor_flexspi_cm7" name="flash_component_nor_flexspi_cm7" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_nor" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_nor/cm7">
          <external path="component_examples/flash_component/flexspi_nor/cm7" type="xml">
            <files mask="flash_component_nor_flexspi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_flash_component_octal_flexspi_cm7" name="flash_component_octal_flexspi_cm7" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples/flash_component/flexspi_octal" path="examples/evkmimxrt1180/component_examples/flash_component/flexspi_octal/cm7">
          <external path="component_examples/flash_component/flexspi_octal/cm7" type="xml">
            <files mask="flash_component_octal_flexspi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_xbar_aoi_cm7" name="xbar_aoi_cm7" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/xbar_aoi/cm7">
          <external path="demo_apps/xbar_aoi/cm7" type="xml">
            <files mask="xbar_aoi_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_wifi_cli_cm7" name="wifi_cli_cm7" brief="wifi_cli" toolchain="armgcc" compiler="compiler_gcc" category="wifi_examples" path="examples/evkmimxrt1180/wifi_examples/wifi_cli/cm7">
          <external path="wifi_examples/wifi_cli/cm7" type="xml">
            <files mask="wifi_cli_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_single_error_cm7" name="mecc_single_error_cm7" brief="The MECC Single Error project is a simple demonstration program of the SDK MECC driver. It supports Single Error Correction ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_single_error/cm7">
          <external path="driver_examples/mecc/mecc_single_error/cm7" type="xml">
            <files mask="mecc_single_error_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_mecc_multie_error_cm7" name="mecc_multie_error_cm7" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mecc" path="examples/evkmimxrt1180/driver_examples/mecc/mecc_multi_error/cm7">
          <external path="driver_examples/mecc/mecc_multi_error/cm7" type="xml">
            <files mask="mecc_multie_error_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_sample_rate_count_cm7" name="lpadc_sample_rate_count_cm7" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7">
          <external path="demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7" type="xml">
            <files mask="lpadc_sample_rate_count_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_lpadc_high_sample_rate_sample_signal_cm7" name="lpadc_high_sample_rate_sample_signal_cm7" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimxrt1180/demo_apps/lpadc_high_sample_rate/sample_signal/cm7">
          <external path="demo_apps/lpadc_high_sample_rate/sample_signal/cm7" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_interrupt_transfer_cm7" name="spdif_interrupt_transfer_cm7" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/interrupt_transfer/cm7">
          <external path="driver_examples/spdif/interrupt_transfer/cm7" type="xml">
            <files mask="spdif_interrupt_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_spdif_edma_transfer_cm7" name="spdif_edma_transfer_cm7" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spdif" path="examples/evkmimxrt1180/driver_examples/spdif/edma_transfer/cm7">
          <external path="driver_examples/spdif/edma_transfer/cm7" type="xml">
            <files mask="spdif_edma_transfer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_tee_fault_core1" name="tee_fault_core1" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps/tee_fault" path="examples/evkmimxrt1180/demo_apps/tee_fault/core1">
          <external path="demo_apps/tee_fault/core1" type="xml">
            <files mask="tee_fault_core1_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_flash_operation_cm7" name="freertos_hello_flash_operation_cm7" brief="The FreeRTOS hello world flash operation project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates two tasks called flash_operation_task and hello_task . First task operate flash and suspend itself, second task print &quot;Hello world.&quot;   message periodically via debug console utility." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello_flash_operation/cm7">
          <external path="freertos_examples/freertos_hello_flash_operation/cm7" type="xml">
            <files mask="freertos_hello_flash_operation_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_hello_cm7" name="freertos_hello_cm7" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_hello/cm7">
          <external path="freertos_examples/freertos_hello/cm7" type="xml">
            <files mask="freertos_hello_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_generic_cm7" name="freertos_generic_cm7" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_generic/cm7">
          <external path="freertos_examples/freertos_generic/cm7" type="xml">
            <files mask="freertos_generic_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_event_cm7" name="freertos_event_cm7" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_event/cm7">
          <external path="freertos_examples/freertos_event/cm7" type="xml">
            <files mask="freertos_event_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_queue_cm7" name="freertos_queue_cm7" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_queue/cm7">
          <external path="freertos_examples/freertos_queue/cm7" type="xml">
            <files mask="freertos_queue_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_cm7" name="freertos_sem_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem/cm7">
          <external path="freertos_examples/freertos_sem/cm7" type="xml">
            <files mask="freertos_sem_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_mutex_cm7" name="freertos_mutex_cm7" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_mutex/cm7">
          <external path="freertos_examples/freertos_mutex/cm7" type="xml">
            <files mask="freertos_mutex_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_sem_static_cm7" name="freertos_sem_static_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_sem_static/cm7">
          <external path="freertos_examples/freertos_sem_static/cm7" type="xml">
            <files mask="freertos_sem_static_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_swtimer_cm7" name="freertos_swtimer_cm7" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_swtimer/cm7">
          <external path="freertos_examples/freertos_swtimer/cm7" type="xml">
            <files mask="freertos_swtimer_cm7_v3_14.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1180_freertos_tickless_rgpio_cm7" name="freertos_tickless_rgpio_cm7" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/evkmimxrt1180/freertos_examples/freertos_tickless/cm7">
          <external path="freertos_examples/freertos_tickless/cm7" type="xml">
            <files mask="freertos_tickless_rgpio_cm7_v3_14.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
</ksdk:manifest>
