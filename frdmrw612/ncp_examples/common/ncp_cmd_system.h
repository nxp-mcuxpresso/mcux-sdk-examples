/*
 * Copyright 2024 NXP
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __NCP_CMD_SYSTEM_H__
#define __NCP_CMD_SYSTEM_H__

#include "ncp_cmd_common.h"

/* System NCP subclass */
#define NCP_CMD_SYSTEM_CONFIG      0x00000000
#define NCP_CMD_SYSTEM_TEST        0x00100000
#define NCP_CMD_SYSTEM_POWERMGMT   0x00200000
#define NCP_CMD_SYSTEM_ASYNC_EVENT 0x00300000

/* System Configure command */
#define NCP_CMD_SYSTEM_CONFIG_SET  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_CONFIG | NCP_MSG_TYPE_CMD | 0x00000001) /* set-device-cfg */
#define NCP_RSP_SYSTEM_CONFIG_SET  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_CONFIG | NCP_MSG_TYPE_RESP | 0x00000001)

#define NCP_CMD_SYSTEM_CONFIG_GET  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_CONFIG | NCP_MSG_TYPE_CMD | 0x00000002) /* get-device-cfg */
#define NCP_RSP_SYSTEM_CONFIG_GET  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_CONFIG | NCP_MSG_TYPE_RESP | 0x00000002) 

#define NCP_CMD_SYSTEM_POWERMGMT_WAKE_CFG (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_CMD | 0x00000001) /* ncp-wake-cfg */
#define NCP_RSP_SYSTEM_POWERMGMT_WAKE_CFG (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_RESP | 0x00000001) 

#define NCP_CMD_SYSTEM_POWERMGMT_MCU_SLEEP (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_CMD | 0x00000002) /* ncp-mcu-sleep */
#define NCP_RSP_SYSTEM_POWERMGMT_MCU_SLEEP (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_RESP | 0x00000002)

#define NCP_CMD_SYSTEM_POWERMGMT_WAKEUP_HOST (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_CMD | 0x00000003) /* ncp-wakeup-host */
#define NCP_RSP_SYSTEM_POWERMGMT_WAKEUP_HOST (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_RESP | 0x00000003)

#define NCP_CMD_SYSTEM_POWERMGMT_MCU_SLEEP_CFM (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_CMD | 0x00000004)
#define NCP_RSP_SYSTEM_POWERMGMT_MCU_SLEEP_CFM (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_POWERMGMT | NCP_MSG_TYPE_RESP | 0x00000004)

#define NCP_EVENT_MCU_SLEEP_ENTER (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_ASYNC_EVENT | NCP_MSG_TYPE_EVENT | 0x00000001)
#define NCP_EVENT_MCU_SLEEP_EXIT  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_ASYNC_EVENT | NCP_MSG_TYPE_EVENT | 0x00000002)

#define NCP_CMD_SYSTEM_TEST_LOOPBACK  (NCP_CMD_SYSTEM | NCP_CMD_SYSTEM_TEST | NCP_MSG_TYPE_CMD | 0x00000001) /* test-loopback */
#define MODULE_NAME_MAX_LEN 16
#define VAR_NAME_MAX_LEN  32
#define CONFIG_VALUE_MAX_LEN 256

/*NCP system configuration*/
typedef NCP_TLV_PACK_START struct _NCP_CMD_SYSTEM_CFG
{
    /* the name of system config file: sys, prov, wlan */
    char module_name[MODULE_NAME_MAX_LEN];
    /* the name of entry */
    char variable_name[VAR_NAME_MAX_LEN];
    /* set value/returned result */
    char value[CONFIG_VALUE_MAX_LEN];
} NCP_TLV_PACK_END NCP_CMD_SYSTEM_CFG;

typedef NCP_TLV_PACK_START struct _NCP_CMD_POWERMGMT_WAKE_CFG
{
    uint8_t wake_mode;
    uint8_t subscribe_evt;
    uint32_t wake_duration;
} NCP_TLV_PACK_END NCP_CMD_POWERMGMT_WAKE_CFG;

typedef NCP_TLV_PACK_START struct _NCP_CMD_POWERMGMT_MCU_SLEEP
{
    uint8_t enable;
    uint8_t is_manual;
    int rtc_timeout;
} NCP_TLV_PACK_END NCP_CMD_POWERMGMT_MCU_SLEEP;

typedef NCP_TLV_PACK_START struct _NCP_CMD_POWERMGMT_WAKEUP_HOST
{
    uint8_t enable;
} NCP_TLV_PACK_END NCP_CMD_POWERMGMT_WAKEUP_HOST;

typedef NCP_TLV_PACK_START struct _NCPCmd_DS_SYS_COMMAND
{
    /** Command Header : Command */
    NCP_COMMAND header;
    /** Command Body */
    union
    {
        /** System configuration */
        NCP_CMD_SYSTEM_CFG system_cfg;
        NCP_CMD_POWERMGMT_WAKE_CFG wake_config;
        NCP_CMD_POWERMGMT_MCU_SLEEP mcu_sleep_config;
        /** wlan host wakeup */
        NCP_CMD_POWERMGMT_WAKEUP_HOST host_wakeup_ctrl;
    } params;
} NCP_TLV_PACK_END NCPCmd_DS_SYS_COMMAND, MCU_NCPCmd_DS_SYS_COMMAND;

#endif /* __NCP_CMD_SYSTEM_H__ */
