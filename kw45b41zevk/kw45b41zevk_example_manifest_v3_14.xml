<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_kw45b41zevk_examples_manifest_v3_14" name="SDK_2.x_kw45b41zevk_examples_manifest_v3_14" format_version="3.14" api_version="2.0.0" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.14.xsd">

  <externalDefinitions>
    <definition extID="KW45B41Z83AFTA"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK216100_kw45b41zevk_examples_manifest_v3_14" name="MCUXpressoSDK216100_kw45b41zevk_examples_manifest_v3_14" version="2.16.100" revision="2.16.100"/>
  <boards>
    <board id="kw45b41zevk" name="KW45B41Z-EVK" href="https://www.nxp.com/pip/KW45B41Z-EVK" version="1.0.0" package="KW45B41Z83AFTA">
      <examples>
        <example id="kw45b41zevk_wireless_uart_bm" name="wireless_uart_bm" brief="The BLE wireless uart application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based Wireless UART Profile that emulates UART over BLE.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/w_uart/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/w_uart/bm">
          <external path="wireless_examples/bluetooth/w_uart/bm" type="xml">
            <files mask="wireless_uart_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_digital_key_device_bm" name="digital_key_device_bm" brief="The BLE Digital Key Device application is a simple demonstration program based on the MCUXpresso SDK. The application implements the CCC Digital Key functionality." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/digital_key_device/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/digital_key_device/bm">
          <external path="wireless_examples/bluetooth/digital_key_device/bm" type="xml">
            <files mask="digital_key_device_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_digital_key_car_anchor_bm" name="digital_key_car_anchor_bm" brief="The BLE Digital Key Car Anchor application is a simple demonstration program based on the MCUXpresso SDK. The application implements the BLE side of the CCC Digital Key functionality." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/digital_key_car_anchor/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/digital_key_car_anchor/bm">
          <external path="wireless_examples/bluetooth/digital_key_car_anchor/bm" type="xml">
            <files mask="digital_key_car_anchor_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ble_shell_bm" name="ble_shell_bm" brief="The BLE ble shell application is a simple demonstration program based on the MCUXpresso SDK.The application implements a Bluetooth Low Energy Host with a shell inteface." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ble_shell/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/ble_shell/bm">
          <external path="wireless_examples/bluetooth/ble_shell/bm" type="xml">
            <files mask="ble_shell_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ble_fsci_black_box_bm" name="ble_fsci_black_box_bm" brief="The BLE ble fsci black box application is a simple demonstration program based on the MCUXpresso SDK.This application implements a Bluetooth Low Energy Host Black Box which can communicate using the FSCI protocol over a serial interface.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ble_fscibb/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/ble_fscibb/bm">
          <external path="wireless_examples/bluetooth/ble_fscibb/bm" type="xml">
            <files mask="ble_fsci_black_box_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hid_device_bm" name="hid_device_bm" brief="The BLE hid device application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based HID Service.To test the service the any mobile device which supports HID devices over BLE can be used." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/hid_device/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/hid_device/bm">
          <external path="wireless_examples/bluetooth/hid_device/bm" type="xml">
            <files mask="hid_device_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hid_host_bm" name="hid_host_bm" brief="The BLE hid host application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based HID Profile.This demo requires a serial port terminal application through a serial interface." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/hid_host/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/hid_host/bm">
          <external path="wireless_examples/bluetooth/hid_host/bm" type="xml">
            <files mask="hid_host_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_server_bm" name="otap_server_bm" brief="The BLE otap server application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Profile.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otas/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/otas/bm">
          <external path="wireless_examples/bluetooth/otas/bm" type="xml">
            <files mask="otap_server_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_client_att_bm" name="otap_client_att_bm" brief="The BLE otap client att application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otac_att/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/otac_att/bm">
          <external path="wireless_examples/bluetooth/otac_att/bm" type="xml">
            <files mask="otap_client_att_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_beacon_bm" name="beacon_bm" brief="The BLE beacon application is a simple demonstration program based on the MCUXpresso SDK.This application implements a Beacon BLE Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/beacon/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/beacon/bm">
          <external path="wireless_examples/bluetooth/beacon/bm" type="xml">
            <files mask="beacon_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ancs_client_bm" name="ancs_client_bm" brief="The BLE ancs client application is a simple demonstration program based on the MCUXpresso SDK.This application implements an ANCS Client.To test the service/profile a GAP Central device is required which has the ANCS service available." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ancs_c/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/ancs_c/bm">
          <external path="wireless_examples/bluetooth/ancs_c/bm" type="xml">
            <files mask="ancs_client_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_temperature_collector_bm" name="temperature_collector_bm" brief="The BLE temperature collector application is a simple demonstration program based on the MCUXpresso SDK.This application implements a custom GATT based Temperature Profile.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/temp_coll/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/temp_coll/bm">
          <external path="wireless_examples/bluetooth/temp_coll/bm" type="xml">
            <files mask="temperature_collector_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_temperature_sensor_bm" name="temperature_sensor_bm" brief="The BLE temperature sensor application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based Temperature Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/temp_sens/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/temp_sens/bm">
          <external path="wireless_examples/bluetooth/temp_sens/bm" type="xml">
            <files mask="temperature_sensor_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_client_l2cap_credit_bm" name="otap_client_l2cap_credit_bm" brief="The BLE otap client l2cap credit application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otac_l2cap/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/otac_l2cap/bm">
          <external path="wireless_examples/bluetooth/otac_l2cap/bm" type="xml">
            <files mask="otap_client_l2cap_credit_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_adv_ext_central_bm" name="adv_ext_central_bm" brief="This application implements a custom GATT based Temperature Profile." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/adv_ext_central/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/adv_ext_central/bm">
          <external path="wireless_examples/bluetooth/adv_ext_central/bm" type="xml">
            <files mask="adv_ext_central_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_adv_ext_peripheral_bm" name="adv_ext_peripheral_bm" brief="This application implements a GATT based Temperature Service." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/adv_ext_peripheral/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/adv_ext_peripheral/bm">
          <external path="wireless_examples/bluetooth/adv_ext_peripheral/bm" type="xml">
            <files mask="adv_ext_peripheral_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_eatt_peripheral_bm" name="eatt_peripheral_bm" brief="This application implements 2 custom GATT based Services and sends data for each profile on an enhanced ATT bearer." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/eatt_peripheral/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/eatt_peripheral/bm">
          <external path="wireless_examples/bluetooth/eatt_peripheral/bm" type="xml">
            <files mask="eatt_peripheral_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_eatt_central_bm" name="eatt_central_bm" brief="This application implements a central device which receives data from 2 custom GATT services on 2 enhanced ATT bearers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/eatt_central/bm" path="examples/kw45b41zevk/wireless_examples/bluetooth/eatt_central/bm">
          <external path="wireless_examples/bluetooth/eatt_central/bm" type="xml">
            <files mask="eatt_central_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_wireless_uart_freertos" name="wireless_uart_freertos" brief="The BLE wireless uart application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based Wireless UART Profile that emulates UART over BLE.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/w_uart/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/w_uart/freertos">
          <external path="wireless_examples/bluetooth/w_uart/freertos" type="xml">
            <files mask="wireless_uart_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_digital_key_device_freertos" name="digital_key_device_freertos" brief="The BLE Digital Key Device application is a simple demonstration program based on the MCUXpresso SDK. The application implements the CCC Digital Key functionality." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/digital_key_device/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/digital_key_device/freertos">
          <external path="wireless_examples/bluetooth/digital_key_device/freertos" type="xml">
            <files mask="digital_key_device_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_digital_key_car_anchor_freertos" name="digital_key_car_anchor_freertos" brief="The BLE Digital Key Car Anchor application is a simple demonstration program based on the MCUXpresso SDK. The application implements the CCC Digital Key functionality." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/digital_key_car_anchor/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/digital_key_car_anchor/freertos">
          <external path="wireless_examples/bluetooth/digital_key_car_anchor/freertos" type="xml">
            <files mask="digital_key_car_anchor_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ble_shell_freertos" name="ble_shell_freertos" brief="The BLE ble shell application is a simple demonstration program based on the MCUXpresso SDK.The application implements a Bluetooth Low Energy Host with a shell inteface." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ble_shell/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/ble_shell/freertos">
          <external path="wireless_examples/bluetooth/ble_shell/freertos" type="xml">
            <files mask="ble_shell_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ble_fsci_black_box_freertos" name="ble_fsci_black_box_freertos" brief="The BLE ble fsci black box application is a simple demonstration program based on the MCUXpresso SDK.This application implements a Bluetooth Low Energy Host Black Box which can communicate using the FSCI protocol over a serial interface.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ble_fscibb/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/ble_fscibb/freertos">
          <external path="wireless_examples/bluetooth/ble_fscibb/freertos" type="xml">
            <files mask="ble_fsci_black_box_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hid_device_freertos" name="hid_device_freertos" brief="The BLE hid device application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based HID Service.To test the service the any mobile device which supports HID devices over BLE can be used." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/hid_device/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/hid_device/freertos">
          <external path="wireless_examples/bluetooth/hid_device/freertos" type="xml">
            <files mask="hid_device_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hid_host_freertos" name="hid_host_freertos" brief="The BLE hid host application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based HID Profile.This demo requires a serial port terminal application through a serial interface." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/hid_host/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/hid_host/freertos">
          <external path="wireless_examples/bluetooth/hid_host/freertos" type="xml">
            <files mask="hid_host_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_server_freertos" name="otap_server_freertos" brief="The BLE otap server application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Profile.To use the pplication Test Tool 12 or any other application which supports the FSCI protocol is required." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otas/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/otas/freertos">
          <external path="wireless_examples/bluetooth/otas/freertos" type="xml">
            <files mask="otap_server_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_client_att_freertos" name="otap_client_att_freertos" brief="The BLE otap client att application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otac_att/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/otac_att/freertos">
          <external path="wireless_examples/bluetooth/otac_att/freertos" type="xml">
            <files mask="otap_client_att_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_beacon_freertos" name="beacon_freertos" brief="The BLE beacon application is a simple demonstration program based on the MCUXpresso SDK.This application implements a Beacon BLE Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/beacon/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/beacon/freertos">
          <external path="wireless_examples/bluetooth/beacon/freertos" type="xml">
            <files mask="beacon_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ancs_client_freertos" name="ancs_client_freertos" brief="The BLE ancs client application is a simple demonstration program based on the MCUXpresso SDK.This application implements an ANCS Client.To test the service/profile a GAP Central device is required which has the ANCS service available." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/ancs_c/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/ancs_c/freertos">
          <external path="wireless_examples/bluetooth/ancs_c/freertos" type="xml">
            <files mask="ancs_client_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_temperature_collector_freertos" name="temperature_collector_freertos" brief="The BLE temperature collector application is a simple demonstration program based on the MCUXpresso SDK.This application implements a custom GATT based Temperature Profile.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/temp_coll/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/temp_coll/freertos">
          <external path="wireless_examples/bluetooth/temp_coll/freertos" type="xml">
            <files mask="temperature_collector_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_temperature_sensor_freertos" name="temperature_sensor_freertos" brief="The BLE temperature sensor application is a simple demonstration program based on the MCUXpresso SDK.This application implements a GATT based Temperature Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/temp_sens/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/temp_sens/freertos">
          <external path="wireless_examples/bluetooth/temp_sens/freertos" type="xml">
            <files mask="temperature_sensor_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_otap_client_l2cap_credit_freertos" name="otap_client_l2cap_credit_freertos" brief="The BLE otap client l2cap credit application is a simple demonstration program based on the MCUXpresso SDK.The application implements a custom GATT based OTAP Service.To test the service/profile the Kinetis BLE Toolbox application can be used which is available for both Android and iOS." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/otac_l2cap/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/otac_l2cap/freertos">
          <external path="wireless_examples/bluetooth/otac_l2cap/freertos" type="xml">
            <files mask="otap_client_l2cap_credit_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_adv_ext_central_freertos" name="adv_ext_central_freertos" brief="This application implements a custom GATT based Temperature Profile." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/adv_ext_central/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/adv_ext_central/freertos">
          <external path="wireless_examples/bluetooth/adv_ext_central/freertos" type="xml">
            <files mask="adv_ext_central_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_adv_ext_peripheral_freertos" name="adv_ext_peripheral_freertos" brief="This application implements a GATT based Temperature Service." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/adv_ext_peripheral/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/adv_ext_peripheral/freertos">
          <external path="wireless_examples/bluetooth/adv_ext_peripheral/freertos" type="xml">
            <files mask="adv_ext_peripheral_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_eatt_peripheral_freertos" name="eatt_peripheral_freertos" brief="This application implements 2 custom GATT based Services and sends data for each profile on an enhanced ATT bearer." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/eatt_peripheral/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/eatt_peripheral/freertos">
          <external path="wireless_examples/bluetooth/eatt_peripheral/freertos" type="xml">
            <files mask="eatt_peripheral_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_eatt_central_freertos" name="eatt_central_freertos" brief="This application implements a central device which receives data from 2 custom GATT services on 2 enhanced ATT bearers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/bluetooth/eatt_central/freertos" path="examples/kw45b41zevk/wireless_examples/bluetooth/eatt_central/freertos">
          <external path="wireless_examples/bluetooth/eatt_central/freertos" type="xml">
            <files mask="eatt_central_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hci_bb_bm" name="hci_bb_bm" brief="The hci black box test example" toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/ble_controller/hci_bb/bm" path="examples/kw45b41zevk/wireless_examples/ble_controller/hci_bb">
          <external path="wireless_examples/ble_controller/hci_bb" type="xml">
            <files mask="hci_bb_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lowpower_peripheral_bm" name="lowpower_peripheral_bm" brief="The lowpower slave reference design application provides a reference design application on a slave device optimized for lowpower. This application is based on the temperature sensor example and has all Bluetooth services that the temperature sensor offers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/reference_design/bluetooth/lowpower_peripheral/bm" path="examples/kw45b41zevk/wireless_examples/reference_design/bluetooth/lowpower_peripheral/bm">
          <external path="wireless_examples/reference_design/bluetooth/lowpower_peripheral/bm" type="xml">
            <files mask="lowpower_peripheral_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lowpower_central_bm" name="lowpower_central_bm" brief="The lowpower master reference design application provides a reference design application on a Master device (central) optimized for lowpower. This application is based on the temperature collector example and has all Bluetooth services that the temperature collector offers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/reference_design/bluetooth/lowpower_central/bm" path="examples/kw45b41zevk/wireless_examples/reference_design/bluetooth/lowpower_central/bm">
          <external path="wireless_examples/reference_design/bluetooth/lowpower_central/bm" type="xml">
            <files mask="lowpower_central_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lowpower_peripheral_freertos" name="lowpower_peripheral_freertos" brief="The lowpower slave reference design application provides a reference design application on a slave device optimized for lowpower. This application is based on the temperature sensor example and has all Bluetooth services that the temperature sensor offers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/reference_design/bluetooth/lowpower_peripheral/freertos" path="examples/kw45b41zevk/wireless_examples/reference_design/bluetooth/lowpower_peripheral/freertos">
          <external path="wireless_examples/reference_design/bluetooth/lowpower_peripheral/freertos" type="xml">
            <files mask="lowpower_peripheral_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lowpower_central_freertos" name="lowpower_central_freertos" brief="The lowpower master reference design application provides a reference design application on a Master device (central) optimized for lowpower. This application is based on the temperature collector example and has all Bluetooth services that the temperature collector offers." toolchain="mcuxpresso" compiler="compiler_gcc" category="wireless_examples/reference_design/bluetooth/lowpower_central/freertos" path="examples/kw45b41zevk/wireless_examples/reference_design/bluetooth/lowpower_central/freertos">
          <external path="wireless_examples/reference_design/bluetooth/lowpower_central/freertos" type="xml">
            <files mask="lowpower_central_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/hello_world">
          <external path="demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hello_world_swo" name="hello_world_swo" brief="The Hello World SWO demo prints the &quot;SWO: Hello World&quot; string to the SWO viewer. The purpose of this demo is to show how to use the swo, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/hello_world_swo">
          <external path="demo_apps/hello_world_swo" type="xml">
            <files mask="hello_world_swo_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/led_blinky">
          <external path="demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/shell">
          <external path="demo_apps/shell" type="xml">
            <files mask="shell_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_rtc_func" name="rtc_func" brief="The RTC demo application demonstrates the important features of the RTC Module by using the RTC Peripheral Driver.The RTC demo supports the following features:- Calendar  + Get the current date time with Year, Month, Day, Hour, Minute, and Second.  + Set the current date time with Year, Month, Day, Hour, Minute, and Second.- Alarm  + Set the alarm based on the current time.  + Application prints a notification when the alarm expires.- Seconds interrupt  + Use second interrupt function to display a digital time blink every second." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/rtc_func">
          <external path="demo_apps/rtc_func" type="xml">
            <files mask="rtc_func_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/polling">
          <external path="driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/interrupt">
          <external path="driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/interrupt_transfer">
          <external path="driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/edma_transfer">
          <external path="driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_edma_rb_transfer" name="lpuart_edma_rb_transfer" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/edma_rb_transfer">
          <external path="driver_examples/lpuart/edma_rb_transfer" type="xml">
            <files mask="lpuart_edma_rb_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_polling_seven_bits" name="lpuart_polling_seven_bits" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/polling_seven_bits">
          <external path="driver_examples/lpuart/polling_seven_bits" type="xml">
            <files mask="lpuart_polling_seven_bits_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_interrupt_transfer_seven_bits" name="lpuart_interrupt_transfer_seven_bits" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/interrupt_transfer_seven_bits">
          <external path="driver_examples/lpuart/interrupt_transfer_seven_bits" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_9bit_interrupt_transfer" name="lpuart_9bit_interrupt_transfer" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/9bit_interrupt_transfer">
          <external path="driver_examples/lpuart/9bit_interrupt_transfer" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpuart_hardware_flow_control" name="lpuart_hardware_flow_control" brief="The lpuart_hardware_flow_control Example project is to demonstrate usage of the hardware flow control function.This example will send data to itself(loopback), and hardware flow control will be enabled in the example.The CTS(clear-to-send) pin is for transmiter to check if receiver is ready, if the CTS pin is assert, transmiter startto send data. The RTS(request-to-send) is a pin for receiver to inform the transmiter if receiver is ready to receivedata. So, please connect RTS to CTS pin directly." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="examples/kw45b41zevk/driver_examples/lpuart/hardware_flow_control">
          <external path="driver_examples/lpuart/hardware_flow_control" type="xml">
            <files mask="lpuart_hardware_flow_control_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpit_single_channel" name="lpit_single_channel" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/kw45b41zevk/driver_examples/lpit/single_channel">
          <external path="driver_examples/lpit/single_channel" type="xml">
            <files mask="lpit_single_channel_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpit_chained_channel" name="lpit_chained_channel" brief="The LPIT chained channel project is a simple example of the SDK LPIT driver. It sets up the LPIT hardware block to trigger a periodic interrupt after every 1 second in the channel No.0, the channel No.1 chained with channel No.0, if LPIT contain more than two channels, the channel No.2 chained with channel No.1....the channel No.N chained with Channel No.N-1. When the LPIT interrupt is triggered." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpit" path="examples/kw45b41zevk/driver_examples/lpit/chained_channel">
          <external path="driver_examples/lpit/chained_channel" type="xml">
            <files mask="lpit_chained_channel_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="examples/kw45b41zevk/driver_examples/lptmr">
          <external path="driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_timer" name="tpm_timer" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/timer">
          <external path="driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_simple_pwm" name="tpm_simple_pwm" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/simple_pwm">
          <external path="driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_combine_pwm" name="tpm_combine_pwm" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/combine_pwm">
          <external path="driver_examples/tpm/combine_pwm" type="xml">
            <files mask="tpm_combine_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_dual_edge_capture" name="tpm_dual_edge_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/dual_edge_capture">
          <external path="driver_examples/tpm/dual_edge_capture" type="xml">
            <files mask="tpm_dual_edge_capture_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_input_capture" name="tpm_input_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/input_capture">
          <external path="driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_output_compare" name="tpm_output_compare" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/output_compare">
          <external path="driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tpm_pwm_twochannel" name="tpm_pwm_twochannel" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tpm" path="examples/kw45b41zevk/driver_examples/tpm/pwm_twochannel">
          <external path="driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_romapi_flash" name="romapi_flash" brief="The fsl_romapi example shows how to use rom api In this example; (1)The pflash example shows how to use interal flash driver to operate program (2)LPSPI api shows how operate the external flash connected with LPSPI. (3)nboot Image authentication api. (4)bootloader api" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi/romapi_flash" path="examples/kw45b41zevk/driver_examples/fsl_romapi/romapi_flash">
          <external path="driver_examples/fsl_romapi/romapi_flash" type="xml">
            <files mask="romapi_flash_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_romapi_lpspi" name="romapi_lpspi" brief="The fsl_romapi example shows how to use rom api In this example; (1)The pflash example shows how to use interal flash driver to operate program (2)LPSPI api shows how operate the external flash connected with LPSPI. (3)nboot Image authentication api. (4)bootloader api" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/fsl_romapi/romapi_lpspi" path="examples/kw45b41zevk/driver_examples/fsl_romapi/romapi_lpspi">
          <external path="driver_examples/fsl_romapi/romapi_lpspi" type="xml">
            <files mask="romapi_lpspi_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_syspm" name="syspm" brief="The System Performance Monitor (SYSPM) is a memory mapped peripheral that enables the user to monitor system and/or CPU events. This demo project obtains the event count value through the system performance monitor, and prints three values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/syspm" path="examples/kw45b41zevk/driver_examples/syspm">
          <external path="driver_examples/syspm" type="xml">
            <files mask="syspm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_tstmr" name="tstmr" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/tstmr" path="examples/kw45b41zevk/driver_examples/tstmr">
          <external path="driver_examples/tstmr" type="xml">
            <files mask="tstmr_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/crc" path="examples/kw45b41zevk/driver_examples/crc">
          <external path="driver_examples/crc" type="xml">
            <files mask="crc_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_smscm" name="smscm" brief="The SMSCM project shows how to use the secure siscellaneous system control module using smscm driver. In this example, you will use the security counter register and change value in it with security counter plus x register and security counter minus x register." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/smscm" path="examples/kw45b41zevk/driver_examples/smscm">
          <external path="driver_examples/smscm" type="xml">
            <files mask="smscm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_dma3_memory_to_memory" name="dma3_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="examples/kw45b41zevk/driver_examples/edma/memory_to_memory">
          <external path="driver_examples/edma/memory_to_memory" type="xml">
            <files mask="dma3_memory_to_memory_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_dma3_scatter_gather" name="dma3_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="examples/kw45b41zevk/driver_examples/edma/scatter_gather">
          <external path="driver_examples/edma/scatter_gather" type="xml">
            <files mask="dma3_scatter_gather_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_power_mode_switch_k4" name="power_mode_switch_k4" brief="wait for adding." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/power_mode_switch">
          <external path="demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_k4_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="examples/kw45b41zevk/driver_examples/gpio/led_output">
          <external path="driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_gpio_input_interrupt" name="gpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="examples/kw45b41zevk/driver_examples/gpio/input_interrupt">
          <external path="driver_examples/gpio/input_interrupt" type="xml">
            <files mask="gpio_input_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_rtc" name="rtc" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rtc" path="examples/kw45b41zevk/driver_examples/rtc">
          <external path="driver_examples/rtc" type="xml">
            <files mask="rtc_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_interrupt" name="lpi2c_interrupt" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/interrupt">
          <external path="driver_examples/lpi2c/interrupt" type="xml">
            <files mask="lpi2c_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/polling_b2b/master">
          <external path="driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/polling_b2b/slave">
          <external path="driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpi2c_read_fxls896x_accel_value_transfer" name="lpi2c_read_fxls896x_accel_value_transfer" brief="The lpi2c_read_fxls896x_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpi2c" path="examples/kw45b41zevk/driver_examples/lpi2c/read_fxls896x_accel_value_transfer">
          <external path="driver_examples/lpi2c/read_fxls896x_accel_value_transfer" type="xml">
            <files mask="lpi2c_read_fxls896x_accel_value_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_sfa_interrupt" name="sfa_interrupt" brief="The sfa_interrupt example shows how to use sfa driver in interrupt way:In this example, sfa is used to measure frequency in interrupt mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sfa" path="examples/kw45b41zevk/driver_examples/sfa/interrupt">
          <external path="driver_examples/sfa/interrupt" type="xml">
            <files mask="sfa_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_sfa_polling" name="sfa_polling" brief="The sfa_polling example shows how to use sfa driver in polling way:In this example, sfa is used to measure frequency in polling mode." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sfa" path="examples/kw45b41zevk/driver_examples/sfa/polling">
          <external path="driver_examples/sfa/polling" type="xml">
            <files mask="sfa_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_vref_1_example" name="vref_1_example" brief="In this example, the adc16 module is initialized and used to measure the VREF output voltage. So, it cannot use internal VREF as the reference voltage. Instead, it can use VDD_ANA or VREFH, for detailed information, please refer to device datasheet. Then, user should configure the VREF output pin as the ADC16's sample input. When running the project, it will measure the VREF output voltage under different trim values." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/vref_1" path="examples/kw45b41zevk/driver_examples/vref_1">
          <external path="driver_examples/vref_1" type="xml">
            <files mask="vref_1_example_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_pretended_networking_wakeup" name="flexcan_pretended_networking_wakeup" brief="The flexcan_pretended_networking_wakeup example shows how to wake up FLEXCAN module from Pretended Networking mode:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B will wake up from STOP mode after receive 4 specific frame, and print the message content to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/pretended_networking_wakeup">
          <external path="driver_examples/flexcan/pretended_networking_wakeup" type="xml">
            <files mask="flexcan_pretended_networking_wakeup_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/interrupt_transfer">
          <external path="driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/loopback_transfer">
          <external path="driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_loopback_edma_transfer" name="flexcan_loopback_edma_transfer" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/loopback_edma_transfer">
          <external path="driver_examples/flexcan/loopback_edma_transfer" type="xml">
            <files mask="flexcan_loopback_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_efifo_interrupt_transfer" name="flexcan_efifo_interrupt_transfer" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/efifo_interrupt_transfer">
          <external path="driver_examples/flexcan/efifo_interrupt_transfer" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexcan_efifo_edma_transfer" name="flexcan_efifo_edma_transfer" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexcan" path="examples/kw45b41zevk/driver_examples/flexcan/efifo_edma_transfer">
          <external path="driver_examples/flexcan/efifo_edma_transfer" type="xml">
            <files mask="flexcan_efifo_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_polling" name="lpadc_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/polling">
          <external path="driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_interrupt" name="lpadc_interrupt" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/interrupt">
          <external path="driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_voltage_measurement" name="lpadc_voltage_measurement" brief="The lpadc_voltage_measurement example shows how to measure the voltage on the board. In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/voltage_measurement">
          <external path="driver_examples/lpadc/voltage_measurement" type="xml">
            <files mask="lpadc_voltage_measurement_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_temperature_measurement" name="lpadc_temperature_measurement" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/temperature_measurement">
          <external path="driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_single_polling" name="lpadc_single_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/single_polling">
          <external path="driver_examples/lpadc/single_polling" type="xml">
            <files mask="lpadc_single_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpadc_single_interrupt" name="lpadc_single_interrupt" brief="The lpadc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpadc" path="examples/kw45b41zevk/driver_examples/lpadc/single_interrupt">
          <external path="driver_examples/lpadc/single_interrupt" type="xml">
            <files mask="lpadc_single_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/interrupt_b2b/master">
          <external path="driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_edma_b2b_transfer_master" name="lpspi_edma_b2b_transfer_master" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpspi_edma_b2b_transfer_slave" name="lpspi_edma_b2b_transfer_slave" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpspi" path="examples/kw45b41zevk/driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpcmp_interrupt" name="lpcmp_interrupt" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpcmp" path="examples/kw45b41zevk/driver_examples/lpcmp/interrupt">
          <external path="driver_examples/lpcmp/interrupt" type="xml">
            <files mask="lpcmp_interrupt_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lpcmp_polling" name="lpcmp_polling" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpcmp" path="examples/kw45b41zevk/driver_examples/lpcmp/polling">
          <external path="driver_examples/lpcmp/polling" type="xml">
            <files mask="lpcmp_polling_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_wdog32" name="wdog32" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/wdog32" path="examples/kw45b41zevk/driver_examples/wdog32">
          <external path="driver_examples/wdog32" type="xml">
            <files mask="wdog32_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="examples/kw45b41zevk/driver_examples/ewm">
          <external path="driver_examples/ewm" type="xml">
            <files mask="ewm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_log_bm" name="log_bm" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/kw45b41zevk/component_examples/log/bm">
          <external path="component_examples/log/bm" type="xml">
            <files mask="log_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_log_freertos" name="log_freertos" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples" path="examples/kw45b41zevk/component_examples/log/freertos">
          <external path="component_examples/log/freertos" type="xml">
            <files mask="log_freertos_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_elemu" name="elemu" brief="The ELEMU Example project is a demonstration program that uses the KSDK software to show basic communication with Security Sub-System (SSS) and usage of SSS services to encrypt data by AES CBC with direct use of ELEMU driver." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/elemu" path="examples/kw45b41zevk/driver_examples/elemu">
          <external path="driver_examples/elemu" type="xml">
            <files mask="elemu_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ele_symmetric" name="ele_symmetric" brief="The secure-subsystem demo application performs AES CBC symmetric operation with SSS APIs using EdgeLock Secure Enclave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="secure-subsystem_examples" path="examples/kw45b41zevk/secure-subsystem_examples/ele_symmetric">
          <external path="secure-subsystem_examples/ele_symmetric" type="xml">
            <files mask="ele_symmetric_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ele_decrypt_sb3" name="ele_decrypt_sb3" brief="This example showing how to read fuse, check it value and if its match expected value decrypt SB3 file." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="secure-subsystem_examples" path="examples/kw45b41zevk/secure-subsystem_examples/ele_decrypt_sb3">
          <external path="secure-subsystem_examples/ele_decrypt_sb3" type="xml">
            <files mask="ele_decrypt_sb3_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ele_common" name="ele_common" brief="The secure-subsystem demo application upload loadable FW into EdgeLock Secure Enclave." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="secure-subsystem_examples" path="examples/kw45b41zevk/secure-subsystem_examples/ele_common">
          <external path="secure-subsystem_examples/ele_common" type="xml">
            <files mask="ele_common_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_mbedtls_selftest" name="mbedtls_selftest" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/kw45b41zevk/mbedtls_examples/mbedtls_selftest">
          <external path="mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_mbedtls_benchmark" name="mbedtls_benchmark" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="examples/kw45b41zevk/mbedtls_examples/mbedtls_benchmark">
          <external path="mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_trdc" name="trdc" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/trdc" path="examples/kw45b41zevk/driver_examples/trdc">
          <external path="driver_examples/trdc" type="xml">
            <files mask="trdc_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_trdc_flw" name="trdc_flw" brief="The trdc flw example shows how to use the trdc flash logical window funtion. In this example, flash logical window is configured and enabled. First memory outside the window is touched and the hardfault occurs, then enlarge the window size to make the access legal. Next the data mapping between the physical address and programmable flash address is checked." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/trdc" path="examples/kw45b41zevk/driver_examples/trdc/flw">
          <external path="driver_examples/trdc/flw" type="xml">
            <files mask="trdc_flw_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_power_manager_test_bm" name="power_manager_test_bm" brief="The power manager test application demonstrates the basic usage of power manager framework without RTOS. The demo tests all features of power manager framework, including notification manager, wakeup source manager and so on." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/kw45b41zevk/demo_apps/power_manager_test/bm">
          <external path="demo_apps/power_manager_test/bm" type="xml">
            <files mask="power_manager_test_bm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hello_world_s" name="hello_world_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="trustzone_examples" linked_projects="kw45b41zevk_hello_world_ns" path="examples/kw45b41zevk/trustzone_examples/hello_world/hello_world_s">
          <external path="trustzone_examples/hello_world/hello_world_s" type="xml">
            <files mask="hello_world_s_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_hello_world_ns" name="hello_world_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="trustzone_examples" linked_projects="kw45b41zevk_hello_world_s" path="examples/kw45b41zevk/trustzone_examples/hello_world/hello_world_ns">
          <external path="trustzone_examples/hello_world/hello_world_ns" type="xml">
            <files mask="hello_world_ns_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lin_master" name="lin_master" brief="The lin_master demo application demonstrates how to use LIN bus signal transfer from master node.This demo application is expected to work with another LIN instance implemented as slave node on the other board. Master node repeatedly initializes transfer by generating frame header, master and slave then exchange response as signal represented by the character array. This demo uses auto-baudrate feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lin" path="examples/kw45b41zevk/driver_examples/lin/master">
          <external path="driver_examples/lin/master" type="xml">
            <files mask="lin_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_lin_slave" name="lin_slave" brief="The lin_master demo application demonstrates how to use LIN bus signal transfer from slave node.This demo application is expected to work with another LIN instance implemented as master node on the other board. Slave is waiting for master to initialize the communication then exchange a response as signal represented by the character array. This demo uses auto-baudrate feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/lin" path="examples/kw45b41zevk/driver_examples/lin/slave">
          <external path="driver_examples/lin/slave" type="xml">
            <files mask="lin_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_ltc_aes" name="ltc_aes" brief="This project is a demonstration program that uses the KSDK software for encryption/decryption sampledata using AES-CBC, AES-CCM, and XCBC-MAC algorithm." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ltc" path="examples/kw45b41zevk/driver_examples/ltc/aes">
          <external path="driver_examples/ltc/aes" type="xml">
            <files mask="ltc_aes_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_i3c_polling_b2b_transfer_master" name="i3c_polling_b2b_transfer_master" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/kw45b41zevk/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_i3c_polling_b2b_transfer_slave" name="i3c_polling_b2b_transfer_slave" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/kw45b41zevk/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_i3c_interrupt_b2b_transfer_master" name="i3c_interrupt_b2b_transfer_master" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/kw45b41zevk/driver_examples/i3c/interrupt_b2b_transfer/master">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_i3c_interrupt_b2b_transfer_slave" name="i3c_interrupt_b2b_transfer_slave" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i3c" path="examples/kw45b41zevk/driver_examples/i3c/interrupt_b2b_transfer/slave">
          <external path="driver_examples/i3c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/pwm">
          <external path="driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/uart/polling_transfer">
          <external path="driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/uart/interrupt_transfer">
          <external path="driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/uart/int_rb_transfer">
          <external path="driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/uart/edma_transfer">
          <external path="driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_i2c_read_fxls896x_accel_value_transfer" name="flexio_i2c_read_fxls896x_accel_value_transfer" brief="The flexio_i2c_read_fxls896x_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/i2c/read_fxls896x_accel_value_transfer">
          <external path="driver_examples/flexio/i2c/read_fxls896x_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_fxls896x_accel_value_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_int_b2b_transfer_slave" name="flexio_spi_int_b2b_transfer_slave" brief="The flexio_spi_slave_interrupt example shows how to use flexio spi slave  driver in interrupt way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/int_b2b_transfer/slave">
          <external path="driver_examples/flexio/spi/int_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_int_b2b_transfer_master" name="flexio_spi_int_b2b_transfer_master" brief="The flexio_spi_master_interrupt example shows how to use flexio spi master  driver in interrupt way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/int_b2b_transfer/master">
          <external path="driver_examples/flexio/spi/int_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_edma_b2b_transfer_master" name="flexio_spi_edma_b2b_transfer_master" brief="The flexio_spi_master_edma example shows how to use flexio spi master  driver in edma way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/edma_b2b_transfer/master">
          <external path="driver_examples/flexio/spi/edma_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_edma_b2b_transfer_slave" name="flexio_spi_edma_b2b_transfer_slave" brief="The flexio_spi_slave_edma example shows how to use flexio spi slave  driver in dma way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/edma_b2b_transfer/slave">
          <external path="driver_examples/flexio/spi/edma_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flexio" path="examples/kw45b41zevk/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_pflash" name="pflash" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="examples/kw45b41zevk/driver_examples/flash/pflash">
          <external path="driver_examples/flash/pflash" type="xml">
            <files mask="pflash_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_eeprom_emulation" name="eeprom_emulation" brief="The eeprom_emulation example shows how to use eeprom emulation to operate flash as eeprom:" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="examples/kw45b41zevk/driver_examples/eeprom_emulation">
          <external path="driver_examples/eeprom_emulation" type="xml">
            <files mask="eeprom_emulation_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_flash_component_nor" name="flash_component_nor" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="component_examples/flash_component/lpspi_nor" path="examples/kw45b41zevk/component_examples/flash_component/lpspi_nor">
          <external path="component_examples/flash_component/lpspi_nor" type="xml">
            <files mask="flash_component_nor_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/kw45b41zevk/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="examples/kw45b41zevk/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/kw45b41zevk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/kw45b41zevk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/kw45b41zevk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="examples/kw45b41zevk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/kw45b41zevk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/kw45b41zevk/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/kw45b41zevk/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="examples/kw45b41zevk/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_littlefs_shell" name="littlefs_shell" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="littlefs_examples" path="examples/kw45b41zevk/littlefs_examples/littlefs_shell">
          <external path="littlefs_examples/littlefs_shell" type="xml">
            <files mask="littlefs_shell_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_hello">
          <external path="freertos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_event">
          <external path="freertos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_generic">
          <external path="freertos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_mutex">
          <external path="freertos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_queue">
          <external path="freertos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_sem">
          <external path="freertos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_sem_static" name="freertos_sem_static" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_sem_static">
          <external path="freertos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_swtimer">
          <external path="freertos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_14.xml"/>
          </external>
        </example>
        <example id="kw45b41zevk_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="freertos_examples" path="examples/kw45b41zevk/freertos_examples/freertos_tickless">
          <external path="freertos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless_v3_14.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
</ksdk:manifest>
